apiVersion: meta.pkg.crossplane.io/v1alpha1
kind: Provider
metadata:
  name: provider-aws
spec:
  controller:
    image: crossplane/provider-aws:v0.10.0
  crossplane: v0.12.0
  permissionRequests:
  - apiGroups:
      - crossplane.io
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: replicationgroupclasses.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: ReplicationGroupClass
    listKind: ReplicationGroupClassList
    plural: replicationgroupclasses
    singular: replicationgroupclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A ReplicationGroupClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            ReplicationGroup.
          properties:
            forProvider:
              description: 'ReplicationGroupParameters define the desired state of
                an AWS ElastiCache Replication Group. Most fields map directly to
                an AWS ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters'
              properties:
                applyModificationsImmediately:
                  description: "If true, this parameter causes the modifications in
                    this request and any pending modifications to be applied, asynchronously
                    and as soon as possible, regardless of the PreferredMaintenanceWindow
                    setting for the replication group. \n If false, changes to the
                    nodes in the replication group are applied on the next maintenance
                    reboot, or the next failure reboot, whichever occurs first."
                  type: boolean
                atRestEncryptionEnabled:
                  description: "AtRestEncryptionEnabled enables encryption at rest
                    when set to true. \n You cannot modify the value of AtRestEncryptionEnabled
                    after the replication group is created. To enable encryption at
                    rest on a replication group you must set AtRestEncryptionEnabled
                    to true when you create the replication group. \n Only available
                    when creating a replication group in an Amazon VPC using redis
                    version 3.2.6 or 4.x."
                  type: boolean
                authEnabled:
                  description: "AuthEnabled enables mandatory authentication when
                    connecting to the managed replication group. AuthEnabled requires
                    TransitEncryptionEnabled to be true. \n While ReplicationGroupSpec
                    mirrors the fields of the upstream replication group object as
                    closely as possible, we expose a boolean here rather than requiring
                    the operator pass in a string authentication token. Crossplane
                    will generate a token automatically and expose it via a Secret."
                  type: boolean
                automaticFailoverEnabled:
                  description: "AutomaticFailoverEnabled specifies whether a read-only
                    replica is automatically promoted to read/write primary if the
                    existing primary fails. If true, Multi-AZ is enabled for this
                    replication group. If false, Multi-AZ is disabled for this replication
                    group. \n AutomaticFailoverEnabled must be enabled for Redis (cluster
                    mode enabled) replication groups. \n Amazon ElastiCache for Redis
                    does not support Multi-AZ with automatic failover on: * Redis
                    versions earlier than 2.8.6. * Redis (cluster mode disabled):
                    T1 and T2 cache node types. * Redis (cluster mode enabled): T1
                    node types."
                  type: boolean
                cacheNodeType:
                  description: 'CacheNodeType specifies the compute and memory capacity
                    of the nodes in the node group (shard). For a complete listing
                    of node types and specifications, see: * Amazon ElastiCache Product
                    Features and Details (http://aws.amazon.com/elasticache/details)
                    * Cache Node Type-Specific Parameters for Memcached (http://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/ParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific)
                    * Cache Node Type-Specific Parameters for Redis (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific)'
                  type: string
                cacheParameterGroupName:
                  description: "CacheParameterGroupName specifies the name of the
                    parameter group to associate with this replication group. If this
                    argument is omitted, the default cache parameter group for the
                    specified engine is used. \n If you are running Redis version
                    3.2.4 or later, only one node group (shard), and want to use a
                    default parameter group, we recommend that you specify the parameter
                    group by name. * To create a Redis (cluster mode disabled) replication
                    group, use CacheParameterGroupName=default.redis3.2. * To create
                    a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on."
                  type: string
                cacheSecurityGroupNameRefs:
                  description: CacheSecurityGroupNameRefs are references to SecurityGroups
                    used to set the CacheSecurityGroupNames.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                cacheSecurityGroupNameSelector:
                  description: CacheSecurityGroupNameSelector selects references to
                    SecurityGroups.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                cacheSecurityGroupNames:
                  description: CacheSecurityGroupNames specifies a list of cache security
                    group names to associate with this replication group. Only for
                    EC2-Classic mode.
                  items:
                    type: string
                  type: array
                cacheSubnetGroupName:
                  description: CacheSubnetGroupName specifies the name of the cache
                    subnet group to be used for the replication group. If you're going
                    to launch your cluster in an Amazon VPC, you need to create a
                    subnet group before you start creating a cluster. For more information,
                    see Subnets and Subnet Groups (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
                  type: string
                engine:
                  description: Engine is the name of the cache engine (memcached or
                    redis) to be used for the clusters in this replication group.
                  type: string
                engineVersion:
                  description: "EngineVersion specifies the version number of the
                    cache engine to be used for the clusters in this replication group.
                    To view the supported cache engine versions, use the DescribeCacheEngineVersions
                    operation. \n Important: You can upgrade to a newer engine version
                    (see Selecting a Cache Engine and Version (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement))
                    in the ElastiCache User Guide, but you cannot downgrade to an
                    earlier engine version. If you want to use an earlier engine version,
                    you must delete the existing cluster or replication group and
                    create it anew with the earlier engine version."
                  type: string
                nodeGroupConfiguration:
                  description: "NodeGroupConfigurationSpec specifies a list of node
                    group (shard) configuration options. \n If you're creating a Redis
                    (cluster mode disabled) or a Redis (cluster mode enabled) replication
                    group, you can use this parameter to individually configure each
                    node group (shard), or you can omit this parameter. However, when
                    seeding a Redis (cluster mode enabled) cluster from a S3 rdb file,
                    you must configure each node group (shard) using this parameter
                    because you must specify the slots for each node group."
                  items:
                    description: A NodeGroupConfigurationSpec specifies the desired
                      state of a node group.
                    properties:
                      primaryAvailabilityZone:
                        description: PrimaryAvailabilityZone specifies the Availability
                          Zone where the primary node of this node group (shard) is
                          launched.
                        type: string
                      replicaAvailabilityZones:
                        description: ReplicaAvailabilityZones specifies a list of
                          Availability Zones to be used for the read replicas. The
                          number of Availability Zones in this list must match the
                          value of ReplicaCount or ReplicasPerNodeGroup if not specified.
                        items:
                          type: string
                        type: array
                      replicaCount:
                        description: ReplicaCount specifies the number of read replica
                          nodes in this node group (shard).
                        type: integer
                      slots:
                        description: "Slots specifies the keyspace for a particular
                          node group. Keyspaces range from 0 to 16,383. The string
                          is in the format startkey-endkey. \n Example: \"0-3999\""
                        type: string
                    type: object
                  type: array
                notificationTopicArn:
                  description: NotificationTopicARN specifies the Amazon Resource
                    Name (ARN) of the Amazon Simple Notification Service (SNS) topic
                    to which notifications are sent. The Amazon SNS topic owner must
                    be the same as the cluster owner.
                  type: string
                notificationTopicStatus:
                  description: "NotificationTopicStatus is the status of the Amazon
                    SNS notification topic for the replication group. Notifications
                    are sent only if the status is active. \n Valid values: active
                    | inactive"
                  type: string
                numCacheClusters:
                  description: "NumCacheClusters specifies the number of clusters
                    this replication group initially has. This parameter is not used
                    if there is more than one node group (shard). You should use ReplicasPerNodeGroup
                    instead. \n If AutomaticFailoverEnabled is true, the value of
                    this parameter must be at least 2. If AutomaticFailoverEnabled
                    is false you can omit this parameter (it will default to 1), or
                    you can explicitly set it to a value between 2 and 6. \n The maximum
                    permitted value for NumCacheClusters is 6 (1 primary plus 5 replicas)."
                  type: integer
                numNodeGroups:
                  description: "NumNodeGroups specifies the number of node groups
                    (shards) for this Redis (cluster mode enabled) replication group.
                    For Redis (cluster mode disabled) either omit this parameter or
                    set it to 1. \n Default: 1"
                  type: integer
                port:
                  description: Port number on which each member of the replication
                    group accepts connections.
                  type: integer
                preferredCacheClusterAzs:
                  description: "PreferredCacheClusterAZs specifies a list of EC2 Availability
                    Zones in which the replication group's clusters are created. The
                    order of the Availability Zones in the list is the order in which
                    clusters are allocated. The primary cluster is created in the
                    first AZ in the list. \n This parameter is not used if there is
                    more than one node group (shard). You should use NodeGroupConfigurationSpec
                    instead. \n If you are creating your replication group in an Amazon
                    VPC (recommended), you can only locate clusters in Availability
                    Zones associated with the subnets in the selected subnet group.
                    \n The number of Availability Zones listed must equal the value
                    of NumCacheClusters. \n Default: system chosen Availability Zones."
                  items:
                    type: string
                  type: array
                preferredMaintenanceWindow:
                  description: "PreferredMaintenanceWindow specifies the weekly time
                    range during which maintenance on the cluster is performed. It
                    is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
                    (24H Clock UTC). The minimum maintenance window is a 60 minute
                    period. \n Example: sun:23:00-mon:01:30"
                  type: string
                primaryClusterId:
                  description: "PrimaryClusterId is the identifier of the cluster
                    that serves as the primary for this replication group. This cluster
                    must already exist and have a status of available. \n This parameter
                    is not required if NumCacheClusters, NumNodeGroups or ReplicasPerNodeGroup
                    is specified."
                  type: string
                replicasPerNodeGroup:
                  description: ReplicasPerNodeGroup specifies the number of replica
                    nodes in each node group (shard). Valid values are 0 to 5.
                  type: integer
                replicationGroupDescription:
                  description: ReplicationGroupDescription is the description for
                    the replication group.
                  type: string
                securityGroupIdRefs:
                  description: SecurityGroupIDRefs are references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIdSelector:
                  description: SecurityGroupIDSelector selects references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: SecurityGroupIDs specifies one or more Amazon VPC security
                    groups associated with this replication group. Use this parameter
                    only when you are creating a replication group in an Amazon VPC.
                  items:
                    type: string
                  type: array
                snapshotArns:
                  description: 'SnapshotARNs specifies a list of Amazon Resource Names
                    (ARN) that uniquely identify the Redis RDB snapshot files stored
                    in Amazon S3. The snapshot files are used to populate the new
                    replication group. The Amazon S3 object name in the ARN cannot
                    contain any commas. The new replication group will have the number
                    of node groups (console: shards) specified by the parameter NumNodeGroups
                    or the number of node groups configured by NodeGroupConfigurationSpec
                    regardless of the number of ARNs specified here.'
                  items:
                    type: string
                  type: array
                snapshotName:
                  description: SnapshotName specifies the name of a snapshot from
                    which to restore data into the new replication group. The snapshot
                    status changes to restoring while the new replication group is
                    being created.
                  type: string
                snapshotRetentionLimit:
                  description: 'SnapshotRetentionLimit specifies the number of days
                    for which ElastiCache retains automatic snapshots before deleting
                    them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
                    that was taken today is retained for 5 days before being deleted.
                    Default: 0 (i.e., automatic backups are disabled for this cluster).'
                  type: integer
                snapshotWindow:
                  description: "SnapshotWindow specifies the daily time range (in
                    UTC) during which ElastiCache begins taking a daily snapshot of
                    your node group (shard). \n Example: 05:00-09:00 \n If you do
                    not specify this parameter, ElastiCache automatically chooses
                    an appropriate time range."
                  type: string
                snapshottingClusterID:
                  description: SnapshottingClusterID is used as the daily snapshot
                    source for the replication group. This parameter cannot be set
                    for Redis (cluster mode enabled) replication groups.
                  type: string
                tags:
                  description: A list of cost allocation tags to be added to this
                    resource. A tag is a key-value pair.
                  items:
                    description: A Tag is used to tag the ElastiCache resources in
                      AWS.
                    properties:
                      key:
                        description: Key for the tag.
                        type: string
                      value:
                        description: Value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                transitEncryptionEnabled:
                  description: "TransitEncryptionEnabled enables in-transit encryption
                    when set to true. \n You cannot modify the value of TransitEncryptionEnabled
                    after the cluster is created. To enable in-transit encryption
                    on a cluster you must TransitEncryptionEnabled to true when you
                    create a cluster. \n This parameter is valid only if the Engine
                    parameter is redis, the EngineVersion parameter is 3.2.6 or 4.x,
                    and the cluster is being created in an Amazon VPC. \n If you enable
                    in-transit encryption, you must also specify a value for CacheSubnetGroup.
                    \n Required: Only available when creating a replication group
                    in an Amazon VPC using redis version 3.2.6 or 4.x. \n Default:
                    false \n For HIPAA compliance, you must specify TransitEncryptionEnabled
                    as true, an AuthToken, and a CacheSubnetGroup."
                  type: boolean
              required:
              - applyModificationsImmediately
              - cacheNodeType
              - engine
              - replicationGroupDescription
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: s3buckets.storage.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.cannedACL
    name: PREDEFINED-ACL
    type: string
  - JSONPath: .spec.localPermission
    name: LOCAL-PERMISSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: S3Bucket
    listKind: S3BucketList
    plural: s3buckets
    singular: s3bucket
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An S3Bucket is a managed resource that represents an AWS S3 Bucket.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: S3BucketSpec defines the desired state of S3Bucket
          properties:
            cannedACL:
              description: CannedACL applies a standard AWS built-in ACL for common
                bucket use cases.
              enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - log-delivery-write
              - aws-exec-read
              type: string
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            iamUsername:
              description: IAMUsername is the name of an IAM user that is automatically
                created and granted access to this bucket by Crossplane at bucket
                creation time.
              type: string
            localPermission:
              description: LocalPermission is the permissions granted on the bucket
                for the provider specific bucket service account that is available
                in a secret after provisioning.
              enum:
              - Read
              - Write
              - ReadWrite
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region of the bucket.
              type: string
            versioning:
              description: Versioning enables versioning of objects stored in this
                bucket.
              type: boolean
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - localPermission
          - providerRef
          - region
          type: object
        status:
          description: S3BucketStatus defines the observed state of S3Bucket
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            lastLocalPermission:
              description: LastLocalPermission is the most recent local permission
                that was set for this bucket.
              type: string
            lastUserPolicyVersion:
              description: LastUserPolicyVersion is the most recent version of the
                policy associated with this bucket's IAMUser.
              type: integer
            providerID:
              description: ProviderID is the AWS identifier for this bucket.
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamroles.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.roleName
    name: ROLENAME
    type: string
  - JSONPath: .spec.forProvider.description
    name: DESCRIPTION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMRole
    listKind: IAMRoleList
    plural: iamroles
    singular: iamrole
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMRole is a managed resource that represents an AWS IAM Role.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMRoleSpec defines the desired state of an IAMRole.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMRoleParameters define the desired state of an AWS IAM
                Role.
              properties:
                assumeRolePolicyDocument:
                  description: AssumeRolePolicyDocument is the the trust relationship
                    policy document that grants an entity permission to assume the
                    role.
                  type: string
                description:
                  description: Description is a description of the role.
                  type: string
                maxSessionDuration:
                  description: 'MaxSessionDuration is the duration (in seconds) that
                    you want to set for the specified role. The default maximum of
                    one hour is applied. This setting can have a value from 1 hour
                    to 12 hours. Default: 3600'
                  format: int64
                  type: integer
                path:
                  description: 'Path is the path to the role. Default: /'
                  type: string
                permissionsBoundary:
                  description: PermissionsBoundary is the ARN of the policy that is
                    used to set the permissions boundary for the role.
                  type: string
                tags:
                  description: Tags. For more information about tagging, see Tagging
                    IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                    in the IAM User Guide.
                  items:
                    description: Tag represents user-provided metadata that can be
                      associated with a IAM role. For more information about tagging,
                      see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                      in the IAM User Guide.
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value. For example, Department or Cost Center
                          are common choices.
                        type: string
                      value:
                        description: "The value associated with this tag. For example,
                          tags with a key name of Department could have values such
                          as Human Resources, Accounting, and Support. Tags with a
                          key name of Cost Center might have values that consist of
                          the number associated with the different cost centers in
                          your company. Typically, many resources have tags with the
                          same key name but with different values. \n AWS always interprets
                          the tag Value as a single string. If you need to store an
                          array, you can store comma-separated values in the string.
                          However, you must interpret the value in your code."
                        type: string
                    required:
                    - key
                    type: object
                  type: array
              required:
              - assumeRolePolicyDocument
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMRoleStatus represents the observed state of an IAMRole.
          properties:
            atProvider:
              description: IAMRoleExternalStatus keeps the state for the external
                resource
              properties:
                arn:
                  description: ARN is the Amazon Resource Name (ARN) specifying the
                    role. For more information about ARNs and how to use them in policies,
                    see IAM Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                    in the IAM User Guide guide.
                  type: string
                roleID:
                  description: RoleID is the stable and unique string identifying
                    the role. For more information about IDs, see IAM Identifiers
                    (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                    in the Using IAM guide.
                  type: string
              required:
              - arn
              - roleID
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: dynamotables.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.tableName
    name: TABLE-NAME
    type: string
  - JSONPath: .status.atProvider.tableStatus
    name: TABLE-STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: DynamoTable
    listKind: DynamoTableList
    plural: dynamotables
    singular: dynamotable
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A DynamoTable is a managed resource that represents an AWS DynamoDB
        Table
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A DynamoTableSpec defines the desired state of a DynamoDB Table.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: DynamoTableParameters define the desired state of an AWS
                DynomoDBTable
              properties:
                attributeDefinitions:
                  description: An array of attributes that describe the key schema
                    for the table and indexes.
                  items:
                    description: AttributeDefinition  represents an attribute for
                      describing the key schema for the table and indexes.
                    properties:
                      attributeName:
                        description: A name for the attribute.
                        type: string
                      attributeType:
                        description: "The data type for the attribute, where: \n    *
                          S - the attribute is of type String \n    * N - the attribute
                          is of type Number \n    * B - the attribute is of type Binary"
                        type: string
                    required:
                    - attributeName
                    - attributeType
                    type: object
                  type: array
                globalSecondaryIndexes:
                  description: One or more global secondary indexes (the maximum is
                    20) to be created on the table.
                  items:
                    description: GlobalSecondaryIndex represents the properties of
                      a global secondary index.
                    properties:
                      indexName:
                        description: The name of the global secondary index. The name
                          must be unique among all
                        type: string
                      keySchema:
                        description: The complete key schema for a global secondary
                          index, which consists of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the global secondary index. These are
                          in addition to the primary key attributes and index key
                          attributes, which are automatically projected.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                      provisionedThroughput:
                        description: Represents the provisioned throughput settings
                          for the specified global secondary index.
                        properties:
                          readCapacityUnits:
                            description: The maximum number of strongly consistent
                              reads consumed per second before
                            format: int64
                            type: integer
                          writeCapacityUnits:
                            description: The maximum number of writes consumed per
                              second before DynamoDB returns a ThrottlingException.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  type: array
                keySchema:
                  description: KeySchema specifies the attributes that make up the
                    primary key for a table or an index.
                  items:
                    description: KeySchemaElement represents a single element of a
                      key schema which make up the primary key.
                    properties:
                      attributeName:
                        description: The name of a key attribute.
                        type: string
                      keyType:
                        description: 'The role that this key attribute will assume:'
                        type: string
                    required:
                    - attributeName
                    - keyType
                    type: object
                  type: array
                localSecondaryIndexes:
                  description: One or more local secondary indexes (the maximum is
                    5) to be created on the table.
                  items:
                    description: LocalSecondaryIndex represents the properties of
                      a local secondary index.
                    properties:
                      indexName:
                        description: The name of the local secondary index. The name
                          must be unique among all other indexes on this table.
                        type: string
                      keySchema:
                        description: The complete key schema for the local secondary
                          index, consisting of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the local secondary index.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                    type: object
                  type: array
                provisionedThroughput:
                  description: Represents the provisioned throughput settings for
                    a specified table or index.
                  properties:
                    readCapacityUnits:
                      description: The maximum number of strongly consistent reads
                        consumed per second before
                      format: int64
                      type: integer
                    writeCapacityUnits:
                      description: The maximum number of writes consumed per second
                        before DynamoDB returns a ThrottlingException.
                      format: int64
                      type: integer
                  type: object
                sseSpecification:
                  description: Represents the settings used to enable server-side
                    encryption.
                  properties:
                    SSEType:
                      description: Server-side encryption type.
                      type: string
                    enabled:
                      description: Indicates whether server-side encryption is done
                        using an AWS managed CMK or an AWS owned CMK.
                      type: boolean
                    kmsMasterKeyId:
                      description: The AWS KMS customer master key (CMK) that should
                        be used for the AWS KMS encryption.
                      type: string
                  type: object
                streamSpecification:
                  description: 'The stream settings for DynamoDB Streams on the table.
                    These settings consist of:'
                  properties:
                    StreamViewType:
                      description: When an item in the table is modified, StreamViewType
                        determines what information is written to the stream for this
                        table.
                      type: string
                    streamEnabled:
                      description: Indicates whether DynamoDB Streams is enabled (true)
                        or disabled (false) on the table.
                      type: boolean
                  type: object
                tag:
                  description: A list of key-value pairs to label the table.
                  items:
                    description: Tag represetnt a key-pair metadata assigned to a
                      DynamoDB Table
                    properties:
                      tag:
                        description: The key of the tag.
                        type: string
                      value:
                        description: The value of the tag.
                        type: string
                    required:
                    - tag
                    - value
                    type: object
                  type: array
              required:
              - attributeDefinitions
              - keySchema
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A DynamoTableStatus represents the observed state of a DynamoDB
            Table.
          properties:
            atProvider:
              description: DynamoTableObservation keeps the state for the external
                resource
              properties:
                attributeDefinitions:
                  description: An array of AttributeDefinition objects. Each of these
                    objects describes one attribute in the table and index key schema.
                  items:
                    description: AttributeDefinition  represents an attribute for
                      describing the key schema for the table and indexes.
                    properties:
                      attributeName:
                        description: A name for the attribute.
                        type: string
                      attributeType:
                        description: "The data type for the attribute, where: \n    *
                          S - the attribute is of type String \n    * N - the attribute
                          is of type Number \n    * B - the attribute is of type Binary"
                        type: string
                    required:
                    - attributeName
                    - attributeType
                    type: object
                  type: array
                globalSecondaryIndexes:
                  description: The global secondary indexes, if any, on the table.
                    Each index is scoped to a given partition key value.
                  items:
                    description: GlobalSecondaryIndex represents the properties of
                      a global secondary index.
                    properties:
                      indexName:
                        description: The name of the global secondary index. The name
                          must be unique among all
                        type: string
                      keySchema:
                        description: The complete key schema for a global secondary
                          index, which consists of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the global secondary index. These are
                          in addition to the primary key attributes and index key
                          attributes, which are automatically projected.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                      provisionedThroughput:
                        description: Represents the provisioned throughput settings
                          for the specified global secondary index.
                        properties:
                          readCapacityUnits:
                            description: The maximum number of strongly consistent
                              reads consumed per second before
                            format: int64
                            type: integer
                          writeCapacityUnits:
                            description: The maximum number of writes consumed per
                              second before DynamoDB returns a ThrottlingException.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  type: array
                globalTableVersion:
                  description: Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html)
                    in use, if the table is replicated across AWS Regions.
                  type: string
                itemCount:
                  description: The number of items in the specified table.
                  format: int64
                  type: integer
                keySchema:
                  description: 'The primary key structure for the table. Each KeySchemaElement
                    consists of:'
                  items:
                    description: KeySchemaElement represents a single element of a
                      key schema which make up the primary key.
                    properties:
                      attributeName:
                        description: The name of a key attribute.
                        type: string
                      keyType:
                        description: 'The role that this key attribute will assume:'
                        type: string
                    required:
                    - attributeName
                    - keyType
                    type: object
                  type: array
                localSecondaryIndexes:
                  description: Represents one or more local secondary indexes on the
                    table.
                  items:
                    description: LocalSecondaryIndex represents the properties of
                      a local secondary index.
                    properties:
                      indexName:
                        description: The name of the local secondary index. The name
                          must be unique among all other indexes on this table.
                        type: string
                      keySchema:
                        description: The complete key schema for the local secondary
                          index, consisting of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the local secondary index.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                    type: object
                  type: array
                provisionedThroughput:
                  description: The provisioned throughput settings for the table,
                    consisting of read and write capacity units, along with data about
                    increases and decreases.
                  properties:
                    readCapacityUnits:
                      description: The maximum number of strongly consistent reads
                        consumed per second before
                      format: int64
                      type: integer
                    writeCapacityUnits:
                      description: The maximum number of writes consumed per second
                        before DynamoDB returns a ThrottlingException.
                      format: int64
                      type: integer
                  type: object
                tableArn:
                  description: The Amazon Resource Name (ARN) that uniquely identifies
                    the table.
                  type: string
                tableId:
                  description: Unique identifier for the table for which the backup
                    was created.
                  type: string
                tableName:
                  description: Unique identifier for the table for which the backup
                    was created.
                  type: string
                tableStatus:
                  description: 'The current state of the table:'
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: vpcs.network.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.vpcId
    name: VPCID
    type: string
  - JSONPath: .spec.cidrBlock
    name: CIDRBLOCK
    type: string
  - JSONPath: .status.vpcState
    name: STATE
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VPC
    listKind: VPCList
    plural: vpcs
    singular: vpc
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A VPC is a managed resource that represents an AWS Virtual Private
        Cloud.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A VPCSpec defines the desired state of a VPC.
          properties:
            cidrBlock:
              description: CIDRBlock is the IPv4 network range for the VPC, in CIDR
                notation. For example, 10.0.0.0/16.
              type: string
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            enableDnsHostNames:
              description: A boolean flag to enable/disable DNS hostnames in the VPC
              type: boolean
            enableDnsSupport:
              description: A boolean flag to enable/disable DNS support in the VPC
              type: boolean
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            tags:
              description: Tags are used as identification helpers between AWS resources.
              items:
                description: Tag defines a tag
                properties:
                  key:
                    description: Key is the name of the tag.
                    type: string
                  value:
                    description: Value is the value of the tag.
                    type: string
                required:
                - key
                - value
                type: object
              type: array
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - cidrBlock
          - providerRef
          type: object
        status:
          description: A VPCStatus represents the observed state of a VPC.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            tags:
              description: Tags represents to current ec2 tags.
              items:
                description: Tag defines a tag
                properties:
                  key:
                    description: Key is the name of the tag.
                    type: string
                  value:
                    description: Value is the value of the tag.
                    type: string
                required:
                - key
                - value
                type: object
              type: array
            vpcState:
              description: VPCState is the current state of the VPC.
              enum:
              - pending
              - available
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamuserpolicyattachments.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.userName
    name: USERNAME
    type: string
  - JSONPath: .spec.forProvider.policyArn
    name: POLICYARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    kind: IAMUserPolicyAttachment
    listKind: IAMUserPolicyAttachmentList
    plural: iamuserpolicyattachments
    singular: iamuserpolicyattachment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMUserPolicyAttachment is a managed resource that represents
        an AWS IAM User policy attachment.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMUserPolicyAttachmentSpec defines the desired state of
            an IAMUserPolicyAttachment.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMUserPolicyAttachmentParameters define the desired state
                of an AWS IAMUserPolicyAttachment.
              properties:
                policyArn:
                  description: PolicyARN is the Amazon Resource Name (ARN) of the
                    IAM policy you want to attach.
                  type: string
                userName:
                  description: UserName presents the name of the IAMUser.
                  type: string
                userNameRef:
                  description: UserNameRef references to an IAMUser to retrieve its
                    userName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                userNameSelector:
                  description: UserNameSelector selects a reference to an IAMUser
                    to retrieve its userName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - policyArn
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMUserPolicyAttachmentStatus represents the observed state
            of an IAMUserPolicyAttachment.
          properties:
            atProvider:
              description: IAMUserPolicyAttachmentObservation keeps the state for
                the external resource
              properties:
                attachedPolicyArn:
                  description: AttachedPolicyARN is the arn for the attached policy.
                    If nil, the policy is not yet attached
                  type: string
              required:
              - attachedPolicyArn
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: providers.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.region
    name: REGION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  - JSONPath: .spec.credentialsSecretRef.name
    name: SECRET-NAME
    priority: 1
    type: string
  group: aws.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - aws
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A Provider configures an AWS 'provider', i.e. a connection to a
        particular AWS account using a particular AWS IAM role.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ProviderSpec defines the desired state of a Provider.
          properties:
            credentialsSecretRef:
              description: CredentialsSecretRef references a specific secret's key
                that contains the credentials that are used to connect to the provider.
              properties:
                key:
                  description: The key to select.
                  type: string
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - key
              - name
              - namespace
              type: object
            region:
              description: Region for managed resources created using this AWS provider.
              type: string
            useServiceAccount:
              description: "UseServiceAccount indicates to use an IAM Role associated
                Kubernetes ServiceAccount for authentication instead of a credentials
                Secret. https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
                \n If set to true, credentialsSecretRef will be ignored."
              type: boolean
          required:
          - region
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: internetgateways.network.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.internetGatewayId
    name: ID
    type: string
  - JSONPath: .spec.vpcId
    name: VPCID
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: InternetGateway
    listKind: InternetGatewayList
    plural: internetgateways
    singular: internetgateway
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An InternetGateway is a managed resource that represents an AWS
        VPC Internet Gateway.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An InternetGatewaySpec defines the desired state of an InternetGateway.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references a VPC to and retrieves its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC to and retrieves
                its vpcId
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: An InternetGatewayStatus represents the observed state of an
            InternetGateway.
          properties:
            attachments:
              description: Any VPCs attached to the internet gateway.
              items:
                description: InternetGatewayAttachment describes the attachment of
                  a VPC to an internet gateway or an egress-only internet gateway.
                properties:
                  attachmentStatus:
                    description: The current state of the attachment. For an internet
                      gateway, the state is available when attached to a VPC; otherwise,
                      this value is not returned.
                    enum:
                    - available
                    - attaching
                    - attached
                    - detaching
                    - detached
                    type: string
                  vpcId:
                    description: VPCID is the ID of the attached VPC.
                    type: string
                required:
                - attachmentStatus
                - vpcId
                type: object
              type: array
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            tags:
              description: Tags represents to current ec2 tags.
              items:
                description: Tag defines a tag
                properties:
                  key:
                    description: Key is the name of the tag.
                    type: string
                  value:
                    description: Value is the value of the tag.
                    type: string
                required:
                - key
                - value
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamusers.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.atProvider.userId
    name: ID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMUser
    listKind: IAMUserList
    plural: iamusers
    singular: iamuser
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMUser is a managed resource that represents an AWS IAM IAMUser.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMUserSpec defines the desired state of an IAM User.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMUserParameters define the desired state of an AWS IAM
                User.
              properties:
                path:
                  description: The path for the user name.
                  type: string
                permissionsBoundary:
                  description: The ARN of the policy that is used to set the permissions
                    boundary for the user.
                  type: string
                tags:
                  description: A list of tags that you want to attach to the newly
                    created user.
                  items:
                    description: Tag represents a tag attached to a v1alpha1.User
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value.
                        type: string
                      value:
                        description: The value associated with this tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMUserStatus represents the observed state of an IAM User.
          properties:
            atProvider:
              description: IAMUserObservation keeps the state for the external resource
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) that identifies the
                    user.
                  type: string
                userId:
                  description: The stable and unique string identifying the user.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: routetables.network.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.routeTableId
    name: TABLEID
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    singular: routetable
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A RouteTable is a managed resource that represents an AWS VPC Route
        Table.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A RouteTableSpec defines the desired state of a RouteTable.
          properties:
            associations:
              description: The associations between the route table and one or more
                subnets.
              items:
                description: Association describes an association between a route
                  table and a subnet.
                properties:
                  subnetId:
                    description: The ID of the subnet. A subnet ID is not returned
                      for an implicit association.
                    type: string
                  subnetIdRef:
                    description: A referencer to retrieve the ID of a subnet
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  subnetIdSelector:
                    description: A selector to select a referencer to retrieve the
                      ID of a subnet
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                type: object
              type: array
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            routes:
              description: the routes in the route table
              items:
                description: Route describes a route in a route table.
                properties:
                  destinationCidrBlock:
                    description: The IPv4 CIDR address block used for the destination
                      match. Routing decisions are based on the most specific match.
                    type: string
                  gatewayId:
                    description: The ID of an internet gateway or virtual private
                      gateway attached to your VPC.
                    type: string
                  gatewayIdRef:
                    description: A referencer to retrieve the ID of a gateway
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  gatewayIdSelector:
                    description: A selector to select a referencer to retrieve the
                      ID of a gateway
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                required:
                - destinationCidrBlock
                type: object
              type: array
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references a VPC to retrieve its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC to retrieve
                its vpcId
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: A RouteTableStatus represents the observed state of a RouteTable.
          properties:
            associations:
              description: The actual associations created for the route table.
              items:
                description: AssociationState describes an association state in the
                  route table.
                properties:
                  associationId:
                    description: The ID of the association between a route table and
                      a subnet.
                    type: string
                  main:
                    description: Indicates whether this is the main route table.
                    type: boolean
                  subnetId:
                    description: The ID of the subnet. A subnet ID is not returned
                      for an implicit association.
                    type: string
                  subnetIdRef:
                    description: A referencer to retrieve the ID of a subnet
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  subnetIdSelector:
                    description: A selector to select a referencer to retrieve the
                      ID of a subnet
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                required:
                - associationId
                - main
                type: object
              type: array
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            routes:
              description: The actual routes created for the route table.
              items:
                description: RouteState describes a route state in the route table.
                properties:
                  destinationCidrBlock:
                    description: The IPv4 CIDR address block used for the destination
                      match. Routing decisions are based on the most specific match.
                    type: string
                  gatewayId:
                    description: The ID of an internet gateway or virtual private
                      gateway attached to your VPC.
                    type: string
                  gatewayIdRef:
                    description: A referencer to retrieve the ID of a gateway
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  gatewayIdSelector:
                    description: A selector to select a referencer to retrieve the
                      ID of a gateway
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  routeState:
                    description: The state of the route. The blackhole state indicates
                      that the route's target isn't available (for example, the specified
                      gateway isn't attached to the VPC, or the specified NAT instance
                      has been terminated).
                    type: string
                required:
                - destinationCidrBlock
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: eksclusterclasses.compute.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: EKSClusterClass
    listKind: EKSClusterClassList
    plural: eksclusterclasses
    singular: eksclusterclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An EKSClusterClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            EKSCluster.
          properties:
            cloudformationStackId:
              description: CloudFormationStackID of the Stack used to create node
                groups.
              type: string
            clusterVersion:
              description: 'ClusterVersion: The desired Kubernetes version of this
                EKS Cluster. If you do not specify a value here, the latest version
                available is used.'
              type: string
            mapRoles:
              description: MapRoles map AWS roles to one or more Kubernetes groups.
                A Default role that allows nodes access to communicate with master
                is autogenerated when a node pool comes online.
              items:
                description: MapRole maps an AWS IAM role to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the RoleARN should map to.
                    items:
                      type: string
                    type: array
                  rolearn:
                    description: RoleARN to match, e.g. 'arn:aws:iam::000000000000:role/KubernetesNode'.
                    type: string
                  username:
                    description: Username (in Kubernetes) the RoleARN should map to.
                    type: string
                required:
                - groups
                - rolearn
                - username
                type: object
              type: array
            mapUsers:
              description: MapUsers map AWS users to one or more Kubernetes groups.
              items:
                description: MapUser maps an AWS IAM user to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the UserARN should map to.
                    items:
                      type: string
                    type: array
                  userarn:
                    description: UserARN to match, e.g. 'arn:aws:iam::000000000000:user/Alice'
                    type: string
                  username:
                    description: Username (in Kubernetes) the UserARN should map to.
                    type: string
                required:
                - groups
                - userarn
                - username
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region for this EKS Cluster.
              type: string
            roleARN:
              description: 'RoleARN: The Amazon Resource Name (ARN) of the IAM role
                that provides permis sions for Amazon EKS to make calls to other AWS  API  operations
                on your behalf. For more information, see ''Amazon EKS Service IAM
                Role'' in the Amazon EKS User Guide.'
              type: string
            roleARNRef:
              description: RoleARNRef references to an IAMRole to retrieve its ARN
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            roleARNSelector:
              description: RoleARNSelector selects a reference to an IAMRole
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIdRefs:
              description: SecurityGroupIDRefs is a set of referencers that each retrieve
                the ID from the referenced SecurityGroup
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            securityGroupIdSelector:
              description: SecurityGroupIDSelector selects a set of references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIds:
              description: SecurityGroupIDs of this EKS cluster.
              items:
                type: string
              type: array
            subnetIdRefs:
              description: SubnetIDRefs is a set of referencers that each retrieve
                the subnetID from the referenced Subnet
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            subnetIdSelector:
              description: SubnetIDSelector selects a set of Subnet references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            subnetIds:
              description: SubnetIDs of this EKS cluster.
              items:
                type: string
              type: array
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references to a VPC to retrieve its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            workerNodes:
              description: WorkerNodes configuration for cloudformation
              properties:
                bootstrapArguments:
                  description: BootstrapArguments to pass to the bootstrap script.
                    See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
                  type: string
                clusterControlPlaneSecurityGroup:
                  description: ClusterControlPlaneSecurityGroup configures the security
                    group of the cluster control plane in order to allow communication
                    to this node group.
                  type: string
                clusterControlPlaneSecurityGroupRef:
                  description: ClusterControlPlaneSecurityGroupRef references a SecurityGroup
                    to retrieve its ID
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                clusterControlPlaneSecurityGroupSelector:
                  description: ClusterControlPlaneSecurityGroupSelector selects a
                    SecurityGroup
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                keyName:
                  description: KeyName of the EC2 Key Pair to allow SSH access to
                    the EC2 instances.
                  type: string
                nodeAutoScalingGroupMaxSize:
                  description: NodeAutoScalingGroupMaxSize configures the maximum
                    size of this node group's Autoscaling Group. Defaults to 3.
                  type: integer
                nodeAutoScalingGroupMinSize:
                  description: NodeAutoScalingGroupMinSize configures the minimum
                    size of this node group's Autoscaling Group. Defaults to 1.
                  type: integer
                nodeGroupName:
                  description: NodeGroupName is a unique identifier for the Node Group.
                  type: string
                nodeImageId:
                  description: NodeImageId that the EC2 instances should run. Defaults
                    to the region's standard AMI.
                  type: string
                nodeInstanceType:
                  description: NodeInstanceType of the EC2 instances.
                  enum:
                  - t2.small
                  - t2.medium
                  - t2.large
                  - t2.xlarge
                  - t2.2xlarge
                  - t3.nano
                  - t3.micro
                  - t3.small
                  - t3.medium
                  - t3.large
                  - t3.xlarge
                  - t3.2xlarge
                  - m3.medium
                  - m3.large
                  - m3.xlarge
                  - m3.2xlarge
                  - m4.large
                  - m4.xlarge
                  - m4.2xlarge
                  - m4.4xlarge
                  - m4.10xlarge
                  - m5.large
                  - m5.xlarge
                  - m5.2xlarge
                  - m5.4xlarge
                  - m5.12xlarge
                  - m5.24xlarge
                  - c4.large
                  - c4.xlarge
                  - c4.2xlarge
                  - c4.4xlarge
                  - c4.8xlarge
                  - c5.large
                  - c5.xlarge
                  - c5.2xlarge
                  - c5.4xlarge
                  - c5.9xlarge
                  - c5.18xlarge
                  - i3.large
                  - i3.xlarge
                  - i3.2xlarge
                  - i3.4xlarge
                  - i3.8xlarge
                  - i3.16xlarge
                  - r3.xlarge
                  - r3.2xlarge
                  - r3.4xlarge
                  - r3.8xlarge
                  - r4.large
                  - r4.xlarge
                  - r4.2xlarge
                  - r4.4xlarge
                  - r4.8xlarge
                  - r4.16xlarge
                  - x1.16xlarge
                  - x1.32xlarge
                  - p2.xlarge
                  - p2.8xlarge
                  - p2.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p3.16xlarge
                  - r5.large
                  - r5.xlarge
                  - r5.2xlarge
                  - r5.4xlarge
                  - r5.12xlarge
                  - r5.24xlarge
                  - r5d.large
                  - r5d.xlarge
                  - r5d.2xlarge
                  - r5d.4xlarge
                  - r5d.12xlarge
                  - r5d.24xlarge
                  - z1d.large
                  - z1d.xlarge
                  - z1d.2xlarge
                  - z1d.3xlarge
                  - z1d.6xlarge
                  - z1d.12xlarge
                  type: string
                nodeVolumeSize:
                  description: NodeVolumeSize configures the volume size in GB. Defaults
                    to 20.
                  type: integer
              required:
              - nodeInstanceType
              type: object
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - providerRef
          - region
          - workerNodes
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: dbsubnetgroups.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.state
    name: STATE
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: DBSubnetGroup
    listKind: DBSubnetGroupList
    plural: dbsubnetgroups
    singular: dbsubnetgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A DBSubnetGroup is a managed resource that represents an AWS VPC
        Database Subnet Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A DBSubnetGroupSpec defines the desired state of a DBSubnetGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: DBSubnetGroupParameters define the desired state of an
                AWS VPC Database Subnet Group.
              properties:
                description:
                  description: The description for the DB subnet group.
                  type: string
                subnetIdRefs:
                  description: SubnetIDRefs is a set of references that each retrieve
                    the subnetID from the referenced Subnet
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                subnetIdSelector:
                  description: SubnetIDSelector selects a set of references that each
                    retrieve the subnetID from the referenced Subnet
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                subnetIds:
                  description: The EC2 Subnet IDs for the DB subnet group.
                  items:
                    type: string
                  type: array
                tags:
                  description: A list of tags. For more information, see Tagging Amazon
                    RDS Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                    in the Amazon RDS User Guide.
                  items:
                    description: Tag is a metadata assigned to an Amazon RDS resource
                      consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
                    properties:
                      key:
                        description: 'A key is the required name of the tag. The string
                          value can be from 1 to 128 Unicode characters in length
                          and can''t be prefixed with "aws:" or "rds:". The string
                          can only contain only the set of Unicode letters, digits,
                          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
                          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                      value:
                        description: 'A value is the optional value of the tag. The
                          string value can be from 1 to 256 Unicode characters in
                          length and can''t be prefixed with "aws:" or "rds:". The
                          string can only contain only the set of Unicode letters,
                          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'',
                          ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                    type: object
                  type: array
              required:
              - description
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: A DBSubnetGroupStatus represents the observed state of a DBSubnetGroup.
          properties:
            atProvider:
              description: DBSubnetGroupObservation is the representation of the current
                state that is observed
              properties:
                arn:
                  description: ARN is the Amazon Resource Name (ARN) for this DB subnet
                    group.
                  type: string
                state:
                  description: State specifies the current state of this DB subnet
                    group.
                  type: string
                subnets:
                  description: Subnets contains a list of Subnet elements.
                  items:
                    description: Subnet represents a aws subnet
                    properties:
                      subnetID:
                        description: Specifies the identifier of the subnet.
                        type: string
                      subnetStatus:
                        description: Specifies the status of the subnet.
                        type: string
                    required:
                    - subnetID
                    - subnetStatus
                    type: object
                  type: array
                vpcId:
                  description: VPCID provides the VPCID of the DB subnet group.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: subnets.network.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.subnetId
    name: SUBNETID
    type: string
  - JSONPath: .spec.vpcId
    name: VPCID
    type: string
  - JSONPath: .spec.cidrBlock
    name: CIDRBLOCK
    type: string
  - JSONPath: .spec.availabilityZone
    name: AZ
    type: string
  - JSONPath: .status.subnetState
    name: STATE
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Subnet
    listKind: SubnetList
    plural: subnets
    singular: subnet
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Subnet is a managed resource that represents an AWS VPC Subnet.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SubnetSpec defines the desired state of a Subnet.
          properties:
            availabilityZone:
              description: 'The Availability Zone for the subnet. Default: AWS selects
                one for you. If you create more than one subnet in your VPC, we may
                not necessarily select a different zone for each subnet.'
              type: string
            cidrBlock:
              description: CIDRBlock is the IPv4 network range for the Subnet, in
                CIDR notation. For example, 10.0.0.0/18.
              type: string
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef reference a VPC to retrieve its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects reference to a VPC to retrieve its
                vpcId
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - availabilityZone
          - cidrBlock
          - providerRef
          type: object
        status:
          description: A SubnetStatus represents the observed state of a Subnet.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            subnetState:
              description: SubnetState is the current state of the Subnet.
              enum:
              - pending
              - available
              type: string
            tags:
              description: Tags represents to current ec2 tags.
              items:
                description: Tag defines a tag
                properties:
                  key:
                    description: Key is the name of the tag.
                    type: string
                  value:
                    description: Value is the value of the tag.
                    type: string
                required:
                - key
                - value
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: s3bucketclasses.storage.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: S3BucketClass
    listKind: S3BucketClassList
    plural: s3bucketclasses
    singular: s3bucketclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An S3BucketClass is a resource class. It defines the desired spec
        of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            S3Bucket.
          properties:
            cannedACL:
              description: CannedACL applies a standard AWS built-in ACL for common
                bucket use cases.
              enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - log-delivery-write
              - aws-exec-read
              type: string
            iamUsername:
              description: IAMUsername is the name of an IAM user that is automatically
                created and granted access to this bucket by Crossplane at bucket
                creation time.
              type: string
            localPermission:
              description: LocalPermission is the permissions granted on the bucket
                for the provider specific bucket service account that is available
                in a secret after provisioning.
              enum:
              - Read
              - Write
              - ReadWrite
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region of the bucket.
              type: string
            versioning:
              description: Versioning enables versioning of objects stored in this
                bucket.
              type: boolean
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - localPermission
          - providerRef
          - region
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: securitygroups.network.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.groupName
    name: GROUPNAME
    type: string
  - JSONPath: .spec.vpcId
    name: VPCID
    type: string
  - JSONPath: .spec.description
    name: DESCRIPTION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: SecurityGroup
    listKind: SecurityGroupList
    plural: securitygroups
    singular: securitygroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A SecurityGroup is a managed resource that represents an AWS VPC
        Security Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SecurityGroupSpec defines the desired state of a SecurityGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            description:
              description: A description of the security group.
              type: string
            egress:
              description: '[EC2-VPC] One or more outbound rules associated with the
                security group.'
              items:
                description: IPPermission Describes a set of permissions for a security
                  group rule.
                properties:
                  cidrBlocks:
                    description: The IPv4 ranges.
                    items:
                      description: IPRange describes an IPv4 range.
                      properties:
                        cidrIp:
                          description: The IPv4 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv4 address, use the /32 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv4 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIp
                      type: object
                    type: array
                  fromPort:
                    description: The start of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6
                      types. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  ipv6Ranges:
                    description: "The IPv6 ranges. \n [VPC only]"
                    items:
                      description: IPv6Range describes an IPv6 range.
                      properties:
                        cidrIPv6:
                          description: The IPv6 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv6 address, use the /128 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv6 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIPv6
                      type: object
                    type: array
                  prefixListIds:
                    description: "PrefixListIDs for an AWS service. With outbound
                      rules, this is the AWS service to access through a VPC endpoint
                      from instances associated with the security group. \n [VPC only]"
                    items:
                      description: PrefixListID describes a prefix list ID.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this prefix list ID. \n Constraints: Up
                            to 255 characters in length. Allowed characters are a-z,
                            A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        prefixListId:
                          description: The ID of the prefix.
                          type: string
                      required:
                      - prefixListId
                      type: object
                    type: array
                  protocol:
                    description: "The IP protocol name (tcp, udp, icmp, icmpv6) or
                      number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).
                      \n [VPC only] Use -1 to specify all protocols. When authorizing
                      security group rules, specifying -1 or a protocol number other
                      than tcp, udp, icmp, or icmpv6 allows traffic on all ports,
                      regardless of any port range you specify. For tcp, udp, and
                      icmp, you must specify a port range. For icmpv6, the port range
                      is optional; if you omit the port range, traffic for all types
                      and codes is allowed."
                    type: string
                  toPort:
                    description: The end of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6
                      codes. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  userIdGroupPairs:
                    description: UserIDGroupPairs are the source security group and
                      AWS account ID pairs. It contains one or more accounts and security
                      groups to allow flows from security groups of other accounts.
                    items:
                      description: UserIDGroupPair describes a security group and
                        AWS account ID pair.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this user ID group pair. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        groupId:
                          description: The ID of the security group.
                          type: string
                        groupName:
                          description: "The name of the security group. In a request,
                            use this parameter for a security group in EC2-Classic
                            or a default VPC only. For a security group in a nondefault
                            VPC, use the security group ID. \n For a referenced security
                            group in another VPC, this value is not returned if the
                            referenced security group is deleted."
                          type: string
                        userId:
                          description: "The ID of an AWS account. \n For a referenced
                            security group in another VPC, the account ID of the referenced
                            security group is returned in the response. If the referenced
                            security group is deleted, this value is not returned.
                            \n [EC2-Classic] Required when adding or removing rules
                            that reference a security group in another AWS account."
                          type: string
                        vpcId:
                          description: The ID of the VPC for the referenced security
                            group, if applicable.
                          type: string
                        vpcPeeringConnectionId:
                          description: The ID of the VPC peering connection, if applicable.
                          type: string
                      type: object
                    type: array
                required:
                - protocol
                type: object
              type: array
            groupName:
              description: The name of the security group.
              type: string
            ingress:
              description: One or more inbound rules associated with the security
                group.
              items:
                description: IPPermission Describes a set of permissions for a security
                  group rule.
                properties:
                  cidrBlocks:
                    description: The IPv4 ranges.
                    items:
                      description: IPRange describes an IPv4 range.
                      properties:
                        cidrIp:
                          description: The IPv4 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv4 address, use the /32 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv4 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIp
                      type: object
                    type: array
                  fromPort:
                    description: The start of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6
                      types. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  ipv6Ranges:
                    description: "The IPv6 ranges. \n [VPC only]"
                    items:
                      description: IPv6Range describes an IPv6 range.
                      properties:
                        cidrIPv6:
                          description: The IPv6 CIDR range. You can either specify
                            a CIDR range or a source security group, not both. To
                            specify a single IPv6 address, use the /128 prefix length.
                          type: string
                        description:
                          description: "A description for the security group rule
                            that references this IPv6 address range. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                          type: string
                      required:
                      - cidrIPv6
                      type: object
                    type: array
                  prefixListIds:
                    description: "PrefixListIDs for an AWS service. With outbound
                      rules, this is the AWS service to access through a VPC endpoint
                      from instances associated with the security group. \n [VPC only]"
                    items:
                      description: PrefixListID describes a prefix list ID.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this prefix list ID. \n Constraints: Up
                            to 255 characters in length. Allowed characters are a-z,
                            A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        prefixListId:
                          description: The ID of the prefix.
                          type: string
                      required:
                      - prefixListId
                      type: object
                    type: array
                  protocol:
                    description: "The IP protocol name (tcp, udp, icmp, icmpv6) or
                      number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).
                      \n [VPC only] Use -1 to specify all protocols. When authorizing
                      security group rules, specifying -1 or a protocol number other
                      than tcp, udp, icmp, or icmpv6 allows traffic on all ports,
                      regardless of any port range you specify. For tcp, udp, and
                      icmp, you must specify a port range. For icmpv6, the port range
                      is optional; if you omit the port range, traffic for all types
                      and codes is allowed."
                    type: string
                  toPort:
                    description: The end of port range for the TCP and UDP protocols,
                      or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6
                      codes. If you specify all ICMP/ICMPv6 types, you must specify
                      all codes.
                    format: int64
                    type: integer
                  userIdGroupPairs:
                    description: UserIDGroupPairs are the source security group and
                      AWS account ID pairs. It contains one or more accounts and security
                      groups to allow flows from security groups of other accounts.
                    items:
                      description: UserIDGroupPair describes a security group and
                        AWS account ID pair.
                      properties:
                        description:
                          description: "A description for the security group rule
                            that references this user ID group pair. \n Constraints:
                            Up to 255 characters in length. Allowed characters are
                            a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                          type: string
                        groupId:
                          description: The ID of the security group.
                          type: string
                        groupName:
                          description: "The name of the security group. In a request,
                            use this parameter for a security group in EC2-Classic
                            or a default VPC only. For a security group in a nondefault
                            VPC, use the security group ID. \n For a referenced security
                            group in another VPC, this value is not returned if the
                            referenced security group is deleted."
                          type: string
                        userId:
                          description: "The ID of an AWS account. \n For a referenced
                            security group in another VPC, the account ID of the referenced
                            security group is returned in the response. If the referenced
                            security group is deleted, this value is not returned.
                            \n [EC2-Classic] Required when adding or removing rules
                            that reference a security group in another AWS account."
                          type: string
                        vpcId:
                          description: The ID of the VPC for the referenced security
                            group, if applicable.
                          type: string
                        vpcPeeringConnectionId:
                          description: The ID of the VPC peering connection, if applicable.
                          type: string
                      type: object
                    type: array
                required:
                - protocol
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references a VPC to and retrieves its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC to and retrieves
                its vpcId
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - description
          - groupName
          - providerRef
          type: object
        status:
          description: A SecurityGroupStatus represents the observed state of a SecurityGroup.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            tags:
              description: Tags represents to current ec2 tags.
              items:
                description: Tag defines a tag
                properties:
                  key:
                    description: Key is the name of the tag.
                    type: string
                  value:
                    description: Value is the value of the tag.
                    type: string
                required:
                - key
                - value
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iampolicies.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    kind: IAMPolicy
    listKind: IAMPolicyList
    plural: iampolicies
    singular: iampolicy
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMPolicy is a managed resource that represents an AWS IAM IAMPolicy.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMPolicySpec defines the desired state of an IAMPolicy.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMPolicyParameters define the desired state of an AWS
                IAM Policy.
              properties:
                description:
                  description: A description of the policy.
                  type: string
                document:
                  description: The JSON policy document that is the content for the
                    policy.
                  type: string
                name:
                  description: The name of the policy.
                  type: string
                path:
                  description: The path to the policy.
                  type: string
              required:
              - document
              - name
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMPolicyStatus represents the observed state of an IAMPolicy.
          properties:
            atProvider:
              description: IAMPolicyObservation keeps the state for the external resource
              properties:
                arn:
                  description: The Amazon PolicyObservation Name (ARN) of the policy
                  type: string
                attachmentCount:
                  description: The number of entities (users, groups, and roles) that
                    the policy is attached to.
                  format: int64
                  type: integer
                defaultVersionId:
                  description: The identifier for the version of the policy that is
                    set as the default version.
                  type: string
                isAttachable:
                  description: Specifies whether the policy can be attached to an
                    IAM user, group, or role.
                  type: boolean
                permissionsBoundaryUsageCount:
                  description: The number of entities (users and roles) for which
                    the policy is used to set the permissions boundary.
                  format: int64
                  type: integer
                policyId:
                  description: The stable and unique string identifying the policy.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: eksclusters.compute.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.state
    name: STATE
    type: string
  - JSONPath: .status.clusterName
    name: CLUSTER-NAME
    type: string
  - JSONPath: .status.endpoint
    name: ENDPOINT
    type: string
  - JSONPath: .spec.location
    name: LOCATION
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: EKSCluster
    listKind: EKSClusterList
    plural: eksclusters
    singular: ekscluster
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An EKSCluster is a managed resource that represents an AWS Elastic
        Kubernetes Service cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An EKSClusterSpec defines the desired state of an EKSCluster.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            cloudformationStackId:
              description: CloudFormationStackID of the Stack used to create node
                groups.
              type: string
            clusterVersion:
              description: 'ClusterVersion: The desired Kubernetes version of this
                EKS Cluster. If you do not specify a value here, the latest version
                available is used.'
              type: string
            mapRoles:
              description: MapRoles map AWS roles to one or more Kubernetes groups.
                A Default role that allows nodes access to communicate with master
                is autogenerated when a node pool comes online.
              items:
                description: MapRole maps an AWS IAM role to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the RoleARN should map to.
                    items:
                      type: string
                    type: array
                  rolearn:
                    description: RoleARN to match, e.g. 'arn:aws:iam::000000000000:role/KubernetesNode'.
                    type: string
                  username:
                    description: Username (in Kubernetes) the RoleARN should map to.
                    type: string
                required:
                - groups
                - rolearn
                - username
                type: object
              type: array
            mapUsers:
              description: MapUsers map AWS users to one or more Kubernetes groups.
              items:
                description: MapUser maps an AWS IAM user to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the UserARN should map to.
                    items:
                      type: string
                    type: array
                  userarn:
                    description: UserARN to match, e.g. 'arn:aws:iam::000000000000:user/Alice'
                    type: string
                  username:
                    description: Username (in Kubernetes) the UserARN should map to.
                    type: string
                required:
                - groups
                - userarn
                - username
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region for this EKS Cluster.
              type: string
            roleARN:
              description: 'RoleARN: The Amazon Resource Name (ARN) of the IAM role
                that provides permis sions for Amazon EKS to make calls to other AWS  API  operations
                on your behalf. For more information, see ''Amazon EKS Service IAM
                Role'' in the Amazon EKS User Guide.'
              type: string
            roleARNRef:
              description: RoleARNRef references to an IAMRole to retrieve its ARN
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            roleARNSelector:
              description: RoleARNSelector selects a reference to an IAMRole
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIdRefs:
              description: SecurityGroupIDRefs is a set of referencers that each retrieve
                the ID from the referenced SecurityGroup
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            securityGroupIdSelector:
              description: SecurityGroupIDSelector selects a set of references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIds:
              description: SecurityGroupIDs of this EKS cluster.
              items:
                type: string
              type: array
            subnetIdRefs:
              description: SubnetIDRefs is a set of referencers that each retrieve
                the subnetID from the referenced Subnet
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            subnetIdSelector:
              description: SubnetIDSelector selects a set of Subnet references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            subnetIds:
              description: SubnetIDs of this EKS cluster.
              items:
                type: string
              type: array
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references to a VPC to retrieve its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            workerNodes:
              description: WorkerNodes configuration for cloudformation
              properties:
                bootstrapArguments:
                  description: BootstrapArguments to pass to the bootstrap script.
                    See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
                  type: string
                clusterControlPlaneSecurityGroup:
                  description: ClusterControlPlaneSecurityGroup configures the security
                    group of the cluster control plane in order to allow communication
                    to this node group.
                  type: string
                clusterControlPlaneSecurityGroupRef:
                  description: ClusterControlPlaneSecurityGroupRef references a SecurityGroup
                    to retrieve its ID
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                clusterControlPlaneSecurityGroupSelector:
                  description: ClusterControlPlaneSecurityGroupSelector selects a
                    SecurityGroup
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                keyName:
                  description: KeyName of the EC2 Key Pair to allow SSH access to
                    the EC2 instances.
                  type: string
                nodeAutoScalingGroupMaxSize:
                  description: NodeAutoScalingGroupMaxSize configures the maximum
                    size of this node group's Autoscaling Group. Defaults to 3.
                  type: integer
                nodeAutoScalingGroupMinSize:
                  description: NodeAutoScalingGroupMinSize configures the minimum
                    size of this node group's Autoscaling Group. Defaults to 1.
                  type: integer
                nodeGroupName:
                  description: NodeGroupName is a unique identifier for the Node Group.
                  type: string
                nodeImageId:
                  description: NodeImageId that the EC2 instances should run. Defaults
                    to the region's standard AMI.
                  type: string
                nodeInstanceType:
                  description: NodeInstanceType of the EC2 instances.
                  enum:
                  - t2.small
                  - t2.medium
                  - t2.large
                  - t2.xlarge
                  - t2.2xlarge
                  - t3.nano
                  - t3.micro
                  - t3.small
                  - t3.medium
                  - t3.large
                  - t3.xlarge
                  - t3.2xlarge
                  - m3.medium
                  - m3.large
                  - m3.xlarge
                  - m3.2xlarge
                  - m4.large
                  - m4.xlarge
                  - m4.2xlarge
                  - m4.4xlarge
                  - m4.10xlarge
                  - m5.large
                  - m5.xlarge
                  - m5.2xlarge
                  - m5.4xlarge
                  - m5.12xlarge
                  - m5.24xlarge
                  - c4.large
                  - c4.xlarge
                  - c4.2xlarge
                  - c4.4xlarge
                  - c4.8xlarge
                  - c5.large
                  - c5.xlarge
                  - c5.2xlarge
                  - c5.4xlarge
                  - c5.9xlarge
                  - c5.18xlarge
                  - i3.large
                  - i3.xlarge
                  - i3.2xlarge
                  - i3.4xlarge
                  - i3.8xlarge
                  - i3.16xlarge
                  - r3.xlarge
                  - r3.2xlarge
                  - r3.4xlarge
                  - r3.8xlarge
                  - r4.large
                  - r4.xlarge
                  - r4.2xlarge
                  - r4.4xlarge
                  - r4.8xlarge
                  - r4.16xlarge
                  - x1.16xlarge
                  - x1.32xlarge
                  - p2.xlarge
                  - p2.8xlarge
                  - p2.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p3.16xlarge
                  - r5.large
                  - r5.xlarge
                  - r5.2xlarge
                  - r5.4xlarge
                  - r5.12xlarge
                  - r5.24xlarge
                  - r5d.large
                  - r5d.xlarge
                  - r5d.2xlarge
                  - r5d.4xlarge
                  - r5d.12xlarge
                  - r5d.24xlarge
                  - z1d.large
                  - z1d.xlarge
                  - z1d.2xlarge
                  - z1d.3xlarge
                  - z1d.6xlarge
                  - z1d.12xlarge
                  type: string
                nodeVolumeSize:
                  description: NodeVolumeSize configures the volume size in GB. Defaults
                    to 20.
                  type: integer
              required:
              - nodeInstanceType
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          - region
          - workerNodes
          type: object
        status:
          description: An EKSClusterStatus represents the observed state of an EKSCluster.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            endpoint:
              description: Endpoint for connecting to the cluster.
              type: string
            resourceVersion:
              description: ClusterVersion of the cluster.
              type: string
            state:
              description: State of the cluster.
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: rdsinstances.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.atProvider.dbInstanceStatus
    name: STATE
    type: string
  - JSONPath: .spec.forProvider.engine
    name: ENGINE
    type: string
  - JSONPath: .spec.forProvider.engineVersion
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RDSInstance
    listKind: RDSInstanceList
    plural: rdsinstances
    singular: rdsinstance
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An RDSInstance is a managed resource that represents an AWS Relational
        Database Service instance.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An RDSInstanceSpec defines the desired state of an RDSInstance.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: RDSInstanceParameters define the desired state of an AWS
                Relational Database Service instance.
              properties:
                allocatedStorage:
                  description: 'AllocatedStorage is the amount of storage (in gibibytes)
                    to allocate for the DB instance. Type: Integer Amazon Aurora Not
                    applicable. Aurora cluster volumes automatically grow as the amount
                    of data in your database increases, though you are only charged
                    for the space that you use in an Aurora cluster volume. MySQL
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Must
                    be an integer from 20 to 16384.    * Provisioned IOPS storage
                    (io1): Must be an integer from 100 to 16384.    * Magnetic storage
                    (standard): Must be an integer from 5 to 3072. MariaDB Constraints
                    to the amount of storage for each storage type are the following:    *
                    General Purpose (SSD) storage (gp2): Must be an integer from 20
                    to 16384.    * Provisioned IOPS storage (io1): Must be an integer
                    from 100 to 16384.    * Magnetic storage (standard): Must be an
                    integer from 5 to 3072. PostgreSQL Constraints to the amount of
                    storage for each storage type are the following:    * General
                    Purpose (SSD) storage (gp2): Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Must be an integer from 100 to
                    16384.    * Magnetic storage (standard): Must be an integer from
                    5 to 3072. Oracle Constraints to the amount of storage for each
                    storage type are the following:    * General Purpose (SSD) storage
                    (gp2): Must be an integer from 20 to 16384.    * Provisioned IOPS
                    storage (io1): Must be an integer from 100 to 16384.    * Magnetic
                    storage (standard): Must be an integer from 10 to 3072. SQL Server
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Enterprise
                    and Standard editions: Must be an integer from 200 to 16384. Web
                    and Express editions: Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Enterprise and Standard editions:
                    Must be an integer from 200 to 16384. Web and Express editions:
                    Must be an integer from 100 to 16384.    * Magnetic storage (standard):
                    Enterprise and Standard editions: Must be an integer from 200
                    to 1024. Web and Express editions: Must be an integer from 20
                    to 1024.'
                  type: integer
                allowMajorVersionUpgrade:
                  description: 'AllowMajorVersionUpgrade indicates that major version
                    upgrades are allowed. Changing this parameter doesn''t result
                    in an outage and the change is asynchronously applied as soon
                    as possible. Constraints: This parameter must be set to true when
                    specifying a value for the EngineVersion parameter that is a different
                    major version than the DB instance''s current version.'
                  type: boolean
                applyModificationsImmediately:
                  description: 'ApplyModificationsImmediately specifies whether the
                    modifications in this request and any pending modifications are
                    asynchronously applied as soon as possible, regardless of the
                    PreferredMaintenanceWindow setting for the DB instance. If this
                    parameter is set to false, changes to the DB instance are applied
                    during the next maintenance window. Some parameter changes can
                    cause an outage and are applied on the next call to RebootDBInstance,
                    or the next failure reboot. Review the table of parameters in
                    Modifying a DB Instance and Using the Apply Immediately Parameter
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
                    in the Amazon RDS User Guide. to see the impact that setting ApplyImmediately
                    to true or false has for each modified parameter and to determine
                    when the changes are applied. Default: false'
                  type: boolean
                autoMinorVersionUpgrade:
                  description: 'AutoMinorVersionUpgrade indicates that minor engine
                    upgrades are applied automatically to the DB instance during the
                    maintenance window. Default: true'
                  type: boolean
                availabilityZone:
                  description: 'AvailabilityZone is the EC2 Availability Zone that
                    the DB instance is created in. For information on AWS Regions
                    and Availability Zones, see Regions and Availability Zones (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    Default: A random, system-chosen Availability Zone in the endpoint''s
                    AWS Region. Example: us-east-1d Constraint: The AvailabilityZone
                    parameter can''t be specified if the MultiAZ parameter is set
                    to true. The specified Availability Zone must be in the same AWS
                    Region as the current endpoint.'
                  type: string
                backupRetentionPeriod:
                  description: 'BackupRetentionPeriod is the number of days for which
                    automated backups are retained. Setting this parameter to a positive
                    number enables backups. Setting this parameter to 0 disables automated
                    backups. Amazon Aurora Not applicable. The retention period for
                    automated backups is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: 1 Constraints:    * Must be a value
                    from 0 to 35    * Cannot be set to 0 if the DB instance is a source
                    to Read Replicas'
                  type: integer
                caCertificateIdentifier:
                  description: CACertificateIdentifier indicates the certificate that
                    needs to be associated with the instance.
                  type: string
                characterSetName:
                  description: CharacterSetName indicates that the DB instance should
                    be associated with the specified CharacterSet for supported engines,
                    Amazon Aurora Not applicable. The character set is managed by
                    the DB cluster. For more information, see CreateDBCluster.
                  type: string
                cloudwatchLogsExportConfiguration:
                  description: CloudwatchLogsExportConfiguration is the configuration
                    setting for the log types to be enabled for export to CloudWatch
                    Logs for a specific DB instance.
                  properties:
                    disableLogTypes:
                      description: DisableLogTypes is the list of log types to disable.
                      items:
                        type: string
                      type: array
                    enableLogTypes:
                      description: EnableLogTypes is the list of log types to enable.
                      items:
                        type: string
                      type: array
                  type: object
                copyTagsToSnapshot:
                  description: CopyTagsToSnapshot should be true to copy all tags
                    from the DB instance to snapshots of the DB instance, and otherwise
                    false. The default is false.
                  type: boolean
                dbClusterIdentifier:
                  description: 'DBClusterIdentifier is the identifier of the DB cluster
                    that the instance will belong to. For information on creating
                    a DB cluster, see CreateDBCluster. Type: String'
                  type: string
                dbClusterParameterGroupName:
                  description: DBClusterParameterGroupName is the name of the DB cluster
                    parameter group to use for the DB cluster.
                  type: string
                dbInstanceClass:
                  description: DBInstanceClass is the compute and memory capacity
                    of the DB instance, for example, db.m4.large. Not all DB instance
                    classes are available in all AWS Regions, or for all database
                    engines. For the full list of DB instance classes, and availability
                    for your engine, see DB Instance Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                    in the Amazon RDS User Guide.
                  type: string
                dbName:
                  description: 'DBName is the meaning of this parameter differs according
                    to the database engine you use. Type: String MySQL The name of
                    the database to create when the DB instance is created. If this
                    parameter is not specified, no database is created in the DB instance.
                    Constraints:    * Must contain 1 to 64 letters or numbers.    *
                    Cannot be a word reserved by the specified database engine MariaDB
                    The name of the database to create when the DB instance is created.
                    If this parameter is not specified, no database is created in
                    the DB instance. Constraints:    * Must contain 1 to 64 letters
                    or numbers.    * Cannot be a word reserved by the specified database
                    engine PostgreSQL The name of the database to create when the
                    DB instance is created. If this parameter is not specified, the
                    default "postgres" database is created in the DB instance. Constraints:    *
                    Must contain 1 to 63 letters, numbers, or underscores.    * Must
                    begin with a letter or an underscore. Subsequent characters can    be
                    letters, underscores, or digits (0-9).    * Cannot be a word reserved
                    by the specified database engine Oracle The Oracle System ID (SID)
                    of the created DB instance. If you specify null, the default value
                    ORCL is used. You can''t specify the string NULL, or any other
                    reserved word, for DBName. Default: ORCL Constraints:    * Cannot
                    be longer than 8 characters SQL Server Not applicable. Must be
                    null. Amazon Aurora The name of the database to create when the
                    primary instance of the DB cluster is created. If this parameter
                    is not specified, no database is created in the DB instance. Constraints:    *
                    Must contain 1 to 64 letters or numbers.    * Cannot be a word
                    reserved by the specified database engine'
                  type: string
                dbParameterGroupName:
                  description: 'DBParameterGroupName is the name of the DB parameter
                    group to associate with this DB instance. If this argument is
                    omitted, the default DBParameterGroup for the specified engine
                    is used. Constraints:    * Must be 1 to 255 letters, numbers,
                    or hyphens.    * First character must be a letter    * Cannot
                    end with a hyphen or contain two consecutive hyphens'
                  type: string
                dbSecurityGroups:
                  description: 'DBSecurityGroups is a list of DB security groups to
                    associate with this DB instance. Default: The default DB security
                    group for the database engine.'
                  items:
                    type: string
                  type: array
                dbSubnetGroupName:
                  description: DBSubnetGroupName is a DB subnet group to associate
                    with this DB instance. If there is no DB subnet group, then it
                    is a non-VPC DB instance.
                  type: string
                dbSubnetGroupNameRef:
                  description: DBSubnetGroupNameRef is a reference to a DBSubnetGroup
                    used to set DBSubnetGroupName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                dbSubnetGroupNameSelector:
                  description: DBSubnetGroupNameSelector selects a reference to a
                    DBSubnetGroup used to set DBSubnetGroupName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                deletionProtection:
                  description: DeletionProtection indicates if the DB instance should
                    have deletion protection enabled. The database can't be deleted
                    when this value is set to true. The default is false. For more
                    information, see  Deleting a DB Instance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
                  type: boolean
                domain:
                  description: Domain specifies the Active Directory Domain to create
                    the instance in.
                  type: string
                domainIAMRoleName:
                  description: DomainIAMRoleName specifies the name of the IAM role
                    to be used when making API calls to the Directory Service.
                  type: string
                domainIAMRoleNameRef:
                  description: DomainIAMRoleNameRef is a reference to an IAMRole used
                    to set DomainIAMRoleName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                domainIAMRoleNameSelector:
                  description: DomainIAMRoleNameSelector selects a reference to an
                    IAMRole used to set DomainIAMRoleName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                enableCloudwatchLogsExports:
                  description: EnableCloudwatchLogsExports is the list of log types
                    that need to be enabled for exporting to CloudWatch Logs. The
                    values in the list depend on the DB engine being used. For more
                    information, see Publishing Database Logs to Amazon CloudWatch
                    Logs  (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                    in the Amazon Relational Database Service User Guide.
                  items:
                    type: string
                  type: array
                enableIAMDatabaseAuthentication:
                  description: 'EnableIAMDatabaseAuthentication should be true to
                    enable mapping of AWS Identity and Access Management (IAM) accounts
                    to database accounts, and otherwise false. You can enable IAM
                    database authentication for the following database engines: Amazon
                    Aurora Not applicable. Mapping AWS IAM accounts to database accounts
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    MySQL    * For MySQL 5.6, minor version 5.6.34 or higher    *
                    For MySQL 5.7, minor version 5.7.16 or higher Default: false'
                  type: boolean
                enablePerformanceInsights:
                  description: EnablePerformanceInsights should be true to enable
                    Performance Insights for the DB instance, and otherwise false.
                    For more information, see Using Amazon Performance Insights (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                    in the Amazon Relational Database Service User Guide.
                  type: boolean
                engine:
                  description: 'Engine is the name of the database engine to be used
                    for this instance. Not every database engine is available for
                    every AWS Region. Valid Values:    * aurora (for MySQL 5.6-compatible
                    Aurora)    * aurora-mysql (for MySQL 5.7-compatible Aurora)    *
                    aurora-postgresql    * mariadb    * mysql    * oracle-ee    *
                    oracle-se2    * oracle-se1    * oracle-se    * postgres    * sqlserver-ee    *
                    sqlserver-se    * sqlserver-ex    * sqlserver-web Engine is a
                    required field'
                  type: string
                engineVersion:
                  description: EngineVersion is the version number of the database
                    engine to use. For a list of valid engine versions, call DescribeDBEngineVersions.
                    The following are the database engines and links to information
                    about the major and minor versions that are available with Amazon
                    RDS. Not every database engine is available for every AWS Region.
                    Amazon Aurora Not applicable. The version number of the database
                    engine to be used by the DB instance is managed by the DB cluster.
                    For more information, see CreateDBCluster. MariaDB See MariaDB
                    on Amazon RDS Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Microsoft SQL Server See Version
                    and Feature Support on Amazon RDS (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport)
                    in the Amazon RDS User Guide. MySQL See MySQL on Amazon RDS Versions
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Oracle See Oracle Database Engine
                    Release Notes (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
                    in the Amazon RDS User Guide. PostgreSQL See Supported PostgreSQL
                    Database Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions)
                    in the Amazon RDS User Guide.
                  type: string
                finalDBSnapshotIdentifier:
                  description: 'The DBSnapshotIdentifier of the new DBSnapshot created
                    when SkipFinalSnapshot is set to false. Specifying this parameter
                    and also setting the SkipFinalShapshot parameter to true results
                    in an error. Constraints:    * Must be 1 to 255 letters or numbers.    *
                    First character must be a letter    * Cannot end with a hyphen
                    or contain two consecutive hyphens    * Cannot be specified when
                    deleting a Read Replica.'
                  type: string
                iops:
                  description: 'IOPS is the amount of Provisioned IOPS (input/output
                    operations per second) to be initially allocated for the DB instance.
                    For information about valid IOPS values, see see Amazon RDS Provisioned
                    IOPS Storage to Improve Performance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS)
                    in the Amazon RDS User Guide. Constraints: Must be a multiple
                    between 1 and 50 of the storage amount for the DB instance. Must
                    also be an integer multiple of 1000. For example, if the size
                    of your DB instance is 500 GiB, then your IOPS value can be 2000,
                    3000, 4000, or 5000.'
                  type: integer
                kmsKeyId:
                  description: KMSKeyID for an encrypted DB instance. The KMS key
                    identifier is the Amazon Resource Name (ARN) for the KMS encryption
                    key. If you are creating a DB instance with the same AWS account
                    that owns the KMS encryption key used to encrypt the new DB instance,
                    then you can use the KMS key alias instead of the ARN for the
                    KM encryption key. Amazon Aurora Not applicable. The KMS key identifier
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    If the StorageEncrypted parameter is true, and you do not specify
                    a value for the KMSKeyID parameter, then Amazon RDS will use your
                    default encryption key. AWS KMS creates the default encryption
                    key for your AWS account. Your AWS account has a different default
                    encryption key for each AWS Region.
                  type: string
                licenseModel:
                  description: 'LicenseModel information for this DB instance. Valid
                    values: license-included | bring-your-own-license | general-public-license'
                  type: string
                masterUsername:
                  description: 'MasterUsername is the name for the master user. Amazon
                    Aurora Not applicable. The name for the master user is managed
                    by the DB cluster. For more information, see CreateDBCluster.
                    MariaDB Constraints:    * Required for MariaDB.    * Must be 1
                    to 16 letters or numbers.    * Cannot be a reserved word for the
                    chosen database engine. Microsoft SQL Server Constraints:    *
                    Required for SQL Server.    * Must be 1 to 128 letters or numbers.    *
                    The first character must be a letter.    * Cannot be a reserved
                    word for the chosen database engine. MySQL Constraints:    * Required
                    for MySQL.    * Must be 1 to 16 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. Oracle Constraints:    * Required
                    for Oracle.    * Must be 1 to 30 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. PostgreSQL Constraints:    * Required
                    for PostgreSQL.    * Must be 1 to 63 letters or numbers.    *
                    First character must be a letter.    * Cannot be a reserved word
                    for the chosen database engine.'
                  type: string
                monitoringInterval:
                  description: 'MonitoringInterval is the interval, in seconds, between
                    points when Enhanced Monitoring metrics are collected for the
                    DB instance. To disable collecting Enhanced Monitoring metrics,
                    specify 0. The default is 0. If MonitoringRoleARN is specified,
                    then you must also set MonitoringInterval to a value other than
                    0. Valid Values: 0, 1, 5, 10, 15, 30, 60'
                  type: integer
                monitoringRoleArn:
                  description: MonitoringRoleARN is the ARN for the IAM role that
                    permits RDS to send enhanced monitoring metrics to Amazon CloudWatch
                    Logs. For example, arn:aws:iam:123456789012:role/emaccess. For
                    information on creating a monitoring role, go to Setting Up and
                    Enabling Enhanced Monitoring (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                    in the Amazon RDS User Guide. If MonitoringInterval is set to
                    a value other than 0, then you must supply a MonitoringRoleARN
                    value.
                  type: string
                monitoringRoleArnRef:
                  description: MonitoringRoleARNRef is a reference to an IAMRole used
                    to set MonitoringRoleARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                monitoringRoleArnSelector:
                  description: MonitoringRoleARNSelector selects a reference to an
                    IAMRole used to set MonitoringRoleARN.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                multiAZ:
                  description: MultiAZ specifies if the DB instance is a Multi-AZ
                    deployment. You can't set the AvailabilityZone parameter if the
                    MultiAZ parameter is set to true.
                  type: boolean
                optionGroupName:
                  description: OptionGroupName indicates that the DB instance should
                    be associated with the specified option group. Permanent options,
                    such as the TDE option for Oracle Advanced Security TDE, can't
                    be removed from an option group, and that option group can't be
                    removed from a DB instance once it is associated with a DB instance
                  type: string
                performanceInsightsKMSKeyId:
                  description: PerformanceInsightsKMSKeyID is the AWS KMS key identifier
                    for encryption of Performance Insights data. The KMS key ID is
                    the Amazon Resource Name (ARN), KMS key identifier, or the KMS
                    key alias for the KMS encryption key.
                  type: string
                performanceInsightsRetentionPeriod:
                  description: PerformanceInsightsRetentionPeriod is the amount of
                    time, in days, to retain Performance Insights data. Valid values
                    are 7 or 731 (2 years).
                  type: integer
                port:
                  description: 'Port number on which the database accepts connections.
                    MySQL Default: 3306 Valid Values: 1150-65535 Type: Integer MariaDB
                    Default: 3306 Valid Values: 1150-65535 Type: Integer PostgreSQL
                    Default: 5432 Valid Values: 1150-65535 Type: Integer Oracle Default:
                    1521 Valid Values: 1150-65535 SQL Server Default: 1433 Valid Values:
                    1150-65535 except for 1434, 3389, 47001, 49152, and 49152 through
                    49156. Amazon Aurora Default: 3306 Valid Values: 1150-65535 Type:
                    Integer'
                  type: integer
                preferredBackupWindow:
                  description: 'PreferredBackupWindow is the daily time range during
                    which automated backups are created if automated backups are enabled,
                    using the BackupRetentionPeriod parameter. For more information,
                    see The Backup Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
                    in the Amazon RDS User Guide. Amazon Aurora Not applicable. The
                    daily time range for creating automated backups is managed by
                    the DB cluster. For more information, see CreateDBCluster. The
                    default is a 30-minute window selected at random from an 8-hour
                    block of time for each AWS Region. To see the time blocks available,
                    see  Adjusting the Preferred DB Instance Maintenance Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
                    in the Amazon RDS User Guide. Constraints:    * Must be in the
                    format hh24:mi-hh24:mi.    * Must be in Universal Coordinated
                    Time (UTC).    * Must not conflict with the preferred maintenance
                    window.    * Must be at least 30 minutes.'
                  type: string
                preferredMaintenanceWindow:
                  description: 'PreferredMaintenanceWindow is the time range each
                    week during which system maintenance can occur, in Universal Coordinated
                    Time (UTC). For more information, see Amazon RDS Maintenance Window
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance).
                    Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window
                    selected at random from an 8-hour block of time for each AWS Region,
                    occurring on a random day of the week. Valid Days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window.'
                  type: string
                processorFeatures:
                  description: ProcessorFeatures is the number of CPU cores and the
                    number of threads per core for the DB instance class of the DB
                    instance.
                  items:
                    description: ProcessorFeature is a processor feature entry. For
                      more information, see Configuring the Processor of the DB Instance
                      Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                      in the Amazon RDS User Guide. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ProcessorFeature
                    properties:
                      name:
                        description: Name of the processor feature. Valid names are
                          coreCount and threadsPerCore.
                        type: string
                      value:
                        description: Value of a processor feature name.
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                promotionTier:
                  description: 'PromotionTier specifies the order in which an Aurora
                    Replica is promoted to the primary instance after a failure of
                    the existing primary instance. For more information, see  Fault
                    Tolerance for an Aurora DB Cluster (http://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance)
                    in the Amazon Aurora User Guide. Default: 1 Valid Values: 0 -
                    15'
                  type: integer
                publiclyAccessible:
                  description: 'PubliclyAccessible specifies the accessibility options
                    for the DB instance. A value of true specifies an Internet-facing
                    instance with a publicly resolvable DNS name, which resolves to
                    a public IP address. A value of false specifies an internal instance
                    with a DNS name that resolves to a private IP address. Default:
                    The default behavior varies depending on whether DBSubnetGroupName
                    is specified. If DBSubnetGroupName is not specified, and PubliclyAccessible
                    is not specified, the following applies:    * If the default VPC
                    in the target region doesn’t have an Internet gateway    attached
                    to it, the DB instance is private.    * If the default VPC in
                    the target region has an Internet gateway attached    to it, the
                    DB instance is public. If DBSubnetGroupName is specified, and
                    PubliclyAccessible is not specified, the following applies:    *
                    If the subnets are part of a VPC that doesn’t have an Internet
                    gateway    attached to it, the DB instance is private.    * If
                    the subnets are part of a VPC that has an Internet gateway attached    to
                    it, the DB instance is public.'
                  type: boolean
                scalingConfiguration:
                  description: ScalingConfiguration is the scaling properties of the
                    DB cluster. You can only modify scaling properties for DB clusters
                    in serverless DB engine mode.
                  properties:
                    autoPause:
                      description: AutoPause specifies whether to allow or disallow
                        automatic pause for an Aurora DB cluster in serverless DB
                        engine mode. A DB cluster can be paused only when it's idle
                        (it has no connections). If a DB cluster is paused for more
                        than seven days, the DB cluster might be backed up with a
                        snapshot. In this case, the DB cluster is restored when there
                        is a request to connect to it.
                      type: boolean
                    maxCapacity:
                      description: MaxCapacity is the maximum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The maximum capacity
                        must be greater than or equal to the minimum capacity.
                      type: integer
                    minCapacity:
                      description: MinCapacity is the minimum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The minimum capacity
                        must be less than or equal to the maximum capacity.
                      type: integer
                    secondsUntilAutoPause:
                      description: SecondsUntilAutoPause is the time, in seconds,
                        before an Aurora DB cluster in serverless mode is paused.
                      type: integer
                  type: object
                skipFinalSnapshotBeforeDeletion:
                  description: 'Determines whether a final DB snapshot is created
                    before the DB instance is deleted. If true is specified, no DBSnapshot
                    is created. If false is specified, a DB snapshot is created before
                    the DB instance is deleted. Note that when a DB instance is in
                    a failure state and has a status of ''failed'', ''incompatible-restore'',
                    or ''incompatible-network'', it can only be deleted when the SkipFinalSnapshotBeforeDeletion
                    parameter is set to "true". Specify true when deleting a Read
                    Replica. The FinalDBSnapshotIdentifier parameter must be specified
                    if SkipFinalSnapshotBeforeDeletion is false. Default: false'
                  type: boolean
                storageEncrypted:
                  description: 'StorageEncrypted specifies whether the DB instance
                    is encrypted. Amazon Aurora Not applicable. The encryption for
                    DB instances is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: false'
                  type: boolean
                storageType:
                  description: 'StorageType specifies the storage type to be associated
                    with the DB instance. Valid values: standard | gp2 | io1 If you
                    specify io1, you must also include a value for the IOPS parameter.
                    Default: io1 if the IOPS parameter is specified, otherwise standard'
                  type: string
                tags:
                  description: Tags. For more information, see Tagging Amazon RDS
                    Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                    in the Amazon RDS User Guide.
                  items:
                    description: Tag is a metadata assigned to an Amazon RDS resource
                      consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
                    properties:
                      key:
                        description: 'A key is the required name of the tag. The string
                          value can be from 1 to 128 Unicode characters in length
                          and can''t be prefixed with "aws:" or "rds:". The string
                          can only contain only the set of Unicode letters, digits,
                          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
                          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                      value:
                        description: 'A value is the optional value of the tag. The
                          string value can be from 1 to 256 Unicode characters in
                          length and can''t be prefixed with "aws:" or "rds:". The
                          string can only contain only the set of Unicode letters,
                          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'',
                          ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                    type: object
                  type: array
                timezone:
                  description: Timezone of the DB instance. The time zone parameter
                    is currently supported only by Microsoft SQL Server (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
                  type: string
                useDefaultProcessorFeatures:
                  description: A value that specifies that the DB instance class of
                    the DB instance uses its default processor features.
                  type: boolean
                vpcSecurityGroupIDRefs:
                  description: VPCSecurityGroupIDRefs are references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                vpcSecurityGroupIDSelector:
                  description: VPCSecurityGroupIDSelector selects references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                vpcSecurityGroupIds:
                  description: 'VPCSecurityGroupIDs is a list of EC2 VPC security
                    groups to associate with this DB instance. Amazon Aurora Not applicable.
                    The associated list of EC2 VPC security groups is managed by the
                    DB cluster. For more information, see CreateDBCluster. Default:
                    The default EC2 VPC security group for the DB subnet group''s
                    VPC.'
                  items:
                    type: string
                  type: array
              required:
              - dbInstanceClass
              - engine
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An RDSInstanceStatus represents the observed state of an RDSInstance.
          properties:
            atProvider:
              description: RDSInstanceObservation is the representation of the current
                state that is observed.
              properties:
                dbInstanceArn:
                  description: DBInstanceArn is the Amazon Resource Name (ARN) for
                    the DB instance.
                  type: string
                dbInstancePort:
                  description: DBInstancePort specifies the port that the DB instance
                    listens on. If the DB instance is part of a DB cluster, this can
                    be a different port than the DB cluster port.
                  type: integer
                dbInstanceStatus:
                  description: DBInstanceStatus specifies the current state of this
                    database.
                  type: string
                dbParameterGroups:
                  description: DBParameterGroups provides the list of DB parameter
                    groups applied to this DB instance.
                  items:
                    description: 'DBParameterGroupStatus is the status of the DB parameter
                      group. This data type is used as a response element in the following
                      actions:    * CreateDBInstance    * CreateDBInstanceReadReplica    *
                      DeleteDBInstance    * ModifyDBInstance    * RebootDBInstance    *
                      RestoreDBInstanceFromDBSnapshot Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DBParameterGroupStatus'
                    properties:
                      dbParameterGroupName:
                        description: DBParameterGroupName is the name of the DP parameter
                          group.
                        type: string
                      parameterApplyStatus:
                        description: ParameterApplyStatus is the status of parameter
                          updates.
                        type: string
                    type: object
                  type: array
                dbResourceId:
                  description: DBResourceID is the AWS Region-unique, immutable identifier
                    for the DB instance. This identifier is found in AWS CloudTrail
                    log entries whenever the AWS KMS key for the DB instance is accessed.
                  type: string
                dbSecurityGroups:
                  description: DBSecurityGroups provides List of DB security group
                    elements containing only DBSecurityGroup.Name and DBSecurityGroup.Status
                    subelements.
                  items:
                    description: 'DBSecurityGroupMembership is used as a response
                      element in the following actions:    * ModifyDBInstance    *
                      RebootDBInstance    * RestoreDBInstanceFromDBSnapshot    * RestoreDBInstanceToPointInTime
                      Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DBSecurityGroupMembership'
                    properties:
                      dbSecurityGroupName:
                        description: DBSecurityGroupName is the name of the DB security
                          group.
                        type: string
                      status:
                        description: Status is the status of the DB security group.
                        type: string
                    type: object
                  type: array
                dbSubnetGroup:
                  description: DBSubnetGroup specifies information on the subnet group
                    associated with the DB instance, including the name, description,
                    and subnets in the subnet group.
                  properties:
                    dbSubnetGroupArn:
                      description: DBSubnetGroupARN is the Amazon Resource Name (ARN)
                        for the DB subnet group.
                      type: string
                    dbSubnetGroupDescription:
                      description: DBSubnetGroupDescription provides the description
                        of the DB subnet group.
                      type: string
                    dbSubnetGroupName:
                      description: DBSubnetGroupName is the name of the DB subnet
                        group.
                      type: string
                    subnetGroupStatus:
                      description: SubnetGroupStatus provides the status of the DB
                        subnet group.
                      type: string
                    subnets:
                      description: Subnets contains a list of Subnet elements.
                      items:
                        description: SubnetInRDS is used as a response element in
                          the DescribeDBSubnetGroups action. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Subnet
                        properties:
                          subnetAvailabilityZone:
                            description: 'SubnetAvailabilityZone contains Availability
                              Zone information. This data type is used as an element
                              in the following data type:    * OrderableDBInstanceOption'
                            properties:
                              name:
                                description: Name of the Availability Zone.
                                type: string
                            type: object
                          subnetIdentifier:
                            description: SubnetIdentifier specifies the identifier
                              of the subnet.
                            type: string
                          subnetStatus:
                            description: SubnetStatus specifies the status of the
                              subnet.
                            type: string
                        type: object
                      type: array
                    vpcId:
                      description: VPCID provides the VPCID of the DB subnet group.
                      type: string
                  type: object
                domainMemberships:
                  description: DomainMemberships is the Active Directory Domain membership
                    records associated with the DB instance.
                  items:
                    description: DomainMembership is an Active Directory Domain membership
                      record associated with the DB instance. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DomainMembership
                    properties:
                      domain:
                        description: Domain is the identifier of the Active Directory
                          Domain.
                        type: string
                      fqdn:
                        description: FQDN us the fully qualified domain name of the
                          Active Directory Domain.
                        type: string
                      iamRoleName:
                        description: IAMRoleName is the name of the IAM role to be
                          used when making API calls to the Directory Service.
                        type: string
                      status:
                        description: Status of the DB instance's Active Directory
                          Domain membership, such as joined, pending-join, failed
                          etc).
                        type: string
                    type: object
                  type: array
                endpoint:
                  description: Endpoint specifies the connection endpoint.
                  properties:
                    address:
                      description: Address specifies the DNS address of the DB instance.
                      type: string
                    hostedZoneId:
                      description: HostedZoneID specifies the ID that Amazon Route
                        53 assigns when you create a hosted zone.
                      type: string
                    port:
                      description: Port specifies the port that the database engine
                        is listening on.
                      type: integer
                  type: object
                enhancedMonitoringResourceArn:
                  description: EnhancedMonitoringResourceArn is the Amazon Resource
                    Name (ARN) of the Amazon CloudWatch Logs log stream that receives
                    the Enhanced Monitoring metrics data for the DB instance.
                  type: string
                instanceCreateTime:
                  description: InstanceCreateTime provides the date and time the DB
                    instance was created.
                  format: date-time
                  type: string
                latestRestorableTime:
                  description: LatestRestorableTime specifies the latest time to which
                    a database can be restored with point-in-time restore.
                  format: date-time
                  type: string
                optionGroupMemberships:
                  description: OptionGroupMemberships provides the list of option
                    group memberships for this DB instance.
                  items:
                    description: OptionGroupMembership provides information on the
                      option groups the DB instance is a member of. Please also see
                      https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/OptionGroupMembership
                    properties:
                      optionGroupName:
                        description: OptionGroupName is the name of the option group
                          that the instance belongs to.
                        type: string
                      status:
                        description: 'Status is the status of the DB instance''s option
                          group membership. Valid values are: in-sync, pending-apply,
                          pending-removal, pending-maintenance-apply, pending-maintenance-removal,
                          applying, removing, and failed.'
                        type: string
                    type: object
                  type: array
                pendingModifiedValues:
                  description: PendingModifiedValues specifies that changes to the
                    DB instance are pending. This element is only included when changes
                    are pending. Specific changes are identified by subelements.
                  properties:
                    allocatedStorage:
                      description: AllocatedStorage contains the new AllocatedStorage
                        size for the DB instance that will be applied or is currently
                        being applied.
                      type: integer
                    backupRetentionPeriod:
                      description: BackupRetentionPeriod specifies the pending number
                        of days for which automated backups are retained.
                      type: integer
                    caCertificateIdentifier:
                      description: CACertificateIdentifier specifies the identifier
                        of the CA certificate for the DB instance.
                      type: string
                    dbInstanceClass:
                      description: DBInstanceClass contains the new DBInstanceClass
                        for the DB instance that will be applied or is currently being
                        applied.
                      type: string
                    dbSubnetGroupName:
                      description: DBSubnetGroupName is the new DB subnet group for
                        the DB instance.
                      type: string
                    engineVersion:
                      description: EngineVersion indicates the database engine version.
                      type: string
                    iops:
                      description: IOPS specifies the new Provisioned IOPS value for
                        the DB instance that will be applied or is currently being
                        applied.
                      type: integer
                    licenseModel:
                      description: 'LicenseModel is the license model for the DB instance.
                        Valid values: license-included | bring-your-own-license |
                        general-public-license'
                      type: string
                    multiAZ:
                      description: MultiAZ indicates that the Single-AZ DB instance
                        is to change to a Multi-AZ deployment.
                      type: boolean
                    pendingCloudwatchLogsExports:
                      description: PendingCloudwatchLogsExports is a list of the log
                        types whose configuration is still pending. In other words,
                        these log types are in the process of being activated or deactivated.
                      properties:
                        logTypesToDisable:
                          description: LogTypesToDisable is list of log types that
                            are in the process of being enabled. After they are enabled,
                            these log types are exported to CloudWatch Logs.
                          items:
                            type: string
                          type: array
                        logTypesToEnable:
                          description: LogTypesToEnable is the log types that are
                            in the process of being deactivated. After they are deactivated,
                            these log types aren't exported to CloudWatch Logs.
                          items:
                            type: string
                          type: array
                      type: object
                    port:
                      description: Port specifies the pending port for the DB instance.
                      type: integer
                    processorFeatures:
                      description: ProcessorFeatures is the number of CPU cores and
                        the number of threads per core for the DB instance class of
                        the DB instance.
                      items:
                        description: ProcessorFeature is a processor feature entry.
                          For more information, see Configuring the Processor of the
                          DB Instance Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                          in the Amazon RDS User Guide. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ProcessorFeature
                        properties:
                          name:
                            description: Name of the processor feature. Valid names
                              are coreCount and threadsPerCore.
                            type: string
                          value:
                            description: Value of a processor feature name.
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    storageType:
                      description: StorageType specifies the storage type to be associated
                        with the DB instance.
                      type: string
                  type: object
                performanceInsightsEnabled:
                  description: PerformanceInsightsEnabled is true if Performance Insights
                    is enabled for the DB instance, and otherwise false.
                  type: boolean
                readReplicaDBClusterIdentifiers:
                  description: ReadReplicaDBClusterIdentifiers contains one or more
                    identifiers of Aurora DB clusters to which the RDS DB instance
                    is replicated as a Read Replica. For example, when you create
                    an Aurora Read Replica of an RDS MySQL DB instance, the Aurora
                    MySQL DB cluster for the Aurora Read Replica is shown. This output
                    does not contain information about cross region Aurora Read Replicas.
                  items:
                    type: string
                  type: array
                readReplicaDBInstanceIdentifiers:
                  description: ReadReplicaDBInstanceIdentifiers contains one or more
                    identifiers of the Read Replicas associated with this DB instance.
                  items:
                    type: string
                  type: array
                readReplicaSourceDBInstanceIdentifier:
                  description: ReadReplicaSourceDBInstanceIdentifier contains the
                    identifier of the source DB instance if this DB instance is a
                    Read Replica.
                  type: string
                secondaryAvailabilityZone:
                  description: SecondaryAvailabilityZone specifies the name of the
                    secondary Availability Zone for a DB instance with multi-AZ support
                    when it is present.
                  type: string
                statusInfos:
                  description: StatusInfos is the status of a Read Replica. If the
                    instance is not a Read Replica, this is blank.
                  items:
                    description: DBInstanceStatusInfo provides a list of status information
                      for a DB instance. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DBInstanceStatusInfo
                    properties:
                      message:
                        description: Message is the details of the error if there
                          is an error for the instance. If the instance is not in
                          an error state, this value is blank.
                        type: string
                      normal:
                        description: Normal is true if the instance is operating normally,
                          or false if the instance is in an error state.
                        type: boolean
                      status:
                        description: Status of the DB instance. For a StatusType of
                          read replica, the values can be replicating, replication
                          stop point set, replication stop point reached, error, stopped,
                          or terminated.
                        type: string
                      statusType:
                        description: StatusType is currently "read replication."
                        type: string
                    type: object
                  type: array
                vpcSecurityGroups:
                  description: VPCSecurityGroups provides a list of VPC security group
                    elements that the DB instance belongs to.
                  items:
                    description: VPCSecurityGroupMembership is used as a response
                      element for queries on VPC security group membership. Please
                      also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/VpcSecurityGroupMembership
                    properties:
                      status:
                        description: Status is the status of the VPC security group.
                        type: string
                      vpcSecurityGroupId:
                        description: VPCSecurityGroupID is the name of the VPC security
                          group.
                        type: string
                    type: object
                  type: array
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: replicationgroups.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.atProvider.status
    name: STATE
    type: string
  - JSONPath: .spec.forProvider.engineVersion
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ReplicationGroup
    listKind: ReplicationGroupList
    plural: replicationgroups
    singular: replicationgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A ReplicationGroup is a managed resource that represents an AWS
        ElastiCache Replication Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ReplicationGroupSpec defines the desired state of a ReplicationGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: 'ReplicationGroupParameters define the desired state of
                an AWS ElastiCache Replication Group. Most fields map directly to
                an AWS ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters'
              properties:
                applyModificationsImmediately:
                  description: "If true, this parameter causes the modifications in
                    this request and any pending modifications to be applied, asynchronously
                    and as soon as possible, regardless of the PreferredMaintenanceWindow
                    setting for the replication group. \n If false, changes to the
                    nodes in the replication group are applied on the next maintenance
                    reboot, or the next failure reboot, whichever occurs first."
                  type: boolean
                atRestEncryptionEnabled:
                  description: "AtRestEncryptionEnabled enables encryption at rest
                    when set to true. \n You cannot modify the value of AtRestEncryptionEnabled
                    after the replication group is created. To enable encryption at
                    rest on a replication group you must set AtRestEncryptionEnabled
                    to true when you create the replication group. \n Only available
                    when creating a replication group in an Amazon VPC using redis
                    version 3.2.6 or 4.x."
                  type: boolean
                authEnabled:
                  description: "AuthEnabled enables mandatory authentication when
                    connecting to the managed replication group. AuthEnabled requires
                    TransitEncryptionEnabled to be true. \n While ReplicationGroupSpec
                    mirrors the fields of the upstream replication group object as
                    closely as possible, we expose a boolean here rather than requiring
                    the operator pass in a string authentication token. Crossplane
                    will generate a token automatically and expose it via a Secret."
                  type: boolean
                automaticFailoverEnabled:
                  description: "AutomaticFailoverEnabled specifies whether a read-only
                    replica is automatically promoted to read/write primary if the
                    existing primary fails. If true, Multi-AZ is enabled for this
                    replication group. If false, Multi-AZ is disabled for this replication
                    group. \n AutomaticFailoverEnabled must be enabled for Redis (cluster
                    mode enabled) replication groups. \n Amazon ElastiCache for Redis
                    does not support Multi-AZ with automatic failover on: * Redis
                    versions earlier than 2.8.6. * Redis (cluster mode disabled):
                    T1 and T2 cache node types. * Redis (cluster mode enabled): T1
                    node types."
                  type: boolean
                cacheNodeType:
                  description: 'CacheNodeType specifies the compute and memory capacity
                    of the nodes in the node group (shard). For a complete listing
                    of node types and specifications, see: * Amazon ElastiCache Product
                    Features and Details (http://aws.amazon.com/elasticache/details)
                    * Cache Node Type-Specific Parameters for Memcached (http://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/ParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific)
                    * Cache Node Type-Specific Parameters for Redis (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific)'
                  type: string
                cacheParameterGroupName:
                  description: "CacheParameterGroupName specifies the name of the
                    parameter group to associate with this replication group. If this
                    argument is omitted, the default cache parameter group for the
                    specified engine is used. \n If you are running Redis version
                    3.2.4 or later, only one node group (shard), and want to use a
                    default parameter group, we recommend that you specify the parameter
                    group by name. * To create a Redis (cluster mode disabled) replication
                    group, use CacheParameterGroupName=default.redis3.2. * To create
                    a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on."
                  type: string
                cacheSecurityGroupNameRefs:
                  description: CacheSecurityGroupNameRefs are references to SecurityGroups
                    used to set the CacheSecurityGroupNames.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                cacheSecurityGroupNameSelector:
                  description: CacheSecurityGroupNameSelector selects references to
                    SecurityGroups.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                cacheSecurityGroupNames:
                  description: CacheSecurityGroupNames specifies a list of cache security
                    group names to associate with this replication group. Only for
                    EC2-Classic mode.
                  items:
                    type: string
                  type: array
                cacheSubnetGroupName:
                  description: CacheSubnetGroupName specifies the name of the cache
                    subnet group to be used for the replication group. If you're going
                    to launch your cluster in an Amazon VPC, you need to create a
                    subnet group before you start creating a cluster. For more information,
                    see Subnets and Subnet Groups (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
                  type: string
                engine:
                  description: Engine is the name of the cache engine (memcached or
                    redis) to be used for the clusters in this replication group.
                  type: string
                engineVersion:
                  description: "EngineVersion specifies the version number of the
                    cache engine to be used for the clusters in this replication group.
                    To view the supported cache engine versions, use the DescribeCacheEngineVersions
                    operation. \n Important: You can upgrade to a newer engine version
                    (see Selecting a Cache Engine and Version (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement))
                    in the ElastiCache User Guide, but you cannot downgrade to an
                    earlier engine version. If you want to use an earlier engine version,
                    you must delete the existing cluster or replication group and
                    create it anew with the earlier engine version."
                  type: string
                nodeGroupConfiguration:
                  description: "NodeGroupConfigurationSpec specifies a list of node
                    group (shard) configuration options. \n If you're creating a Redis
                    (cluster mode disabled) or a Redis (cluster mode enabled) replication
                    group, you can use this parameter to individually configure each
                    node group (shard), or you can omit this parameter. However, when
                    seeding a Redis (cluster mode enabled) cluster from a S3 rdb file,
                    you must configure each node group (shard) using this parameter
                    because you must specify the slots for each node group."
                  items:
                    description: A NodeGroupConfigurationSpec specifies the desired
                      state of a node group.
                    properties:
                      primaryAvailabilityZone:
                        description: PrimaryAvailabilityZone specifies the Availability
                          Zone where the primary node of this node group (shard) is
                          launched.
                        type: string
                      replicaAvailabilityZones:
                        description: ReplicaAvailabilityZones specifies a list of
                          Availability Zones to be used for the read replicas. The
                          number of Availability Zones in this list must match the
                          value of ReplicaCount or ReplicasPerNodeGroup if not specified.
                        items:
                          type: string
                        type: array
                      replicaCount:
                        description: ReplicaCount specifies the number of read replica
                          nodes in this node group (shard).
                        type: integer
                      slots:
                        description: "Slots specifies the keyspace for a particular
                          node group. Keyspaces range from 0 to 16,383. The string
                          is in the format startkey-endkey. \n Example: \"0-3999\""
                        type: string
                    type: object
                  type: array
                notificationTopicArn:
                  description: NotificationTopicARN specifies the Amazon Resource
                    Name (ARN) of the Amazon Simple Notification Service (SNS) topic
                    to which notifications are sent. The Amazon SNS topic owner must
                    be the same as the cluster owner.
                  type: string
                notificationTopicStatus:
                  description: "NotificationTopicStatus is the status of the Amazon
                    SNS notification topic for the replication group. Notifications
                    are sent only if the status is active. \n Valid values: active
                    | inactive"
                  type: string
                numCacheClusters:
                  description: "NumCacheClusters specifies the number of clusters
                    this replication group initially has. This parameter is not used
                    if there is more than one node group (shard). You should use ReplicasPerNodeGroup
                    instead. \n If AutomaticFailoverEnabled is true, the value of
                    this parameter must be at least 2. If AutomaticFailoverEnabled
                    is false you can omit this parameter (it will default to 1), or
                    you can explicitly set it to a value between 2 and 6. \n The maximum
                    permitted value for NumCacheClusters is 6 (1 primary plus 5 replicas)."
                  type: integer
                numNodeGroups:
                  description: "NumNodeGroups specifies the number of node groups
                    (shards) for this Redis (cluster mode enabled) replication group.
                    For Redis (cluster mode disabled) either omit this parameter or
                    set it to 1. \n Default: 1"
                  type: integer
                port:
                  description: Port number on which each member of the replication
                    group accepts connections.
                  type: integer
                preferredCacheClusterAzs:
                  description: "PreferredCacheClusterAZs specifies a list of EC2 Availability
                    Zones in which the replication group's clusters are created. The
                    order of the Availability Zones in the list is the order in which
                    clusters are allocated. The primary cluster is created in the
                    first AZ in the list. \n This parameter is not used if there is
                    more than one node group (shard). You should use NodeGroupConfigurationSpec
                    instead. \n If you are creating your replication group in an Amazon
                    VPC (recommended), you can only locate clusters in Availability
                    Zones associated with the subnets in the selected subnet group.
                    \n The number of Availability Zones listed must equal the value
                    of NumCacheClusters. \n Default: system chosen Availability Zones."
                  items:
                    type: string
                  type: array
                preferredMaintenanceWindow:
                  description: "PreferredMaintenanceWindow specifies the weekly time
                    range during which maintenance on the cluster is performed. It
                    is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
                    (24H Clock UTC). The minimum maintenance window is a 60 minute
                    period. \n Example: sun:23:00-mon:01:30"
                  type: string
                primaryClusterId:
                  description: "PrimaryClusterId is the identifier of the cluster
                    that serves as the primary for this replication group. This cluster
                    must already exist and have a status of available. \n This parameter
                    is not required if NumCacheClusters, NumNodeGroups or ReplicasPerNodeGroup
                    is specified."
                  type: string
                replicasPerNodeGroup:
                  description: ReplicasPerNodeGroup specifies the number of replica
                    nodes in each node group (shard). Valid values are 0 to 5.
                  type: integer
                replicationGroupDescription:
                  description: ReplicationGroupDescription is the description for
                    the replication group.
                  type: string
                securityGroupIdRefs:
                  description: SecurityGroupIDRefs are references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIdSelector:
                  description: SecurityGroupIDSelector selects references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: SecurityGroupIDs specifies one or more Amazon VPC security
                    groups associated with this replication group. Use this parameter
                    only when you are creating a replication group in an Amazon VPC.
                  items:
                    type: string
                  type: array
                snapshotArns:
                  description: 'SnapshotARNs specifies a list of Amazon Resource Names
                    (ARN) that uniquely identify the Redis RDB snapshot files stored
                    in Amazon S3. The snapshot files are used to populate the new
                    replication group. The Amazon S3 object name in the ARN cannot
                    contain any commas. The new replication group will have the number
                    of node groups (console: shards) specified by the parameter NumNodeGroups
                    or the number of node groups configured by NodeGroupConfigurationSpec
                    regardless of the number of ARNs specified here.'
                  items:
                    type: string
                  type: array
                snapshotName:
                  description: SnapshotName specifies the name of a snapshot from
                    which to restore data into the new replication group. The snapshot
                    status changes to restoring while the new replication group is
                    being created.
                  type: string
                snapshotRetentionLimit:
                  description: 'SnapshotRetentionLimit specifies the number of days
                    for which ElastiCache retains automatic snapshots before deleting
                    them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
                    that was taken today is retained for 5 days before being deleted.
                    Default: 0 (i.e., automatic backups are disabled for this cluster).'
                  type: integer
                snapshotWindow:
                  description: "SnapshotWindow specifies the daily time range (in
                    UTC) during which ElastiCache begins taking a daily snapshot of
                    your node group (shard). \n Example: 05:00-09:00 \n If you do
                    not specify this parameter, ElastiCache automatically chooses
                    an appropriate time range."
                  type: string
                snapshottingClusterID:
                  description: SnapshottingClusterID is used as the daily snapshot
                    source for the replication group. This parameter cannot be set
                    for Redis (cluster mode enabled) replication groups.
                  type: string
                tags:
                  description: A list of cost allocation tags to be added to this
                    resource. A tag is a key-value pair.
                  items:
                    description: A Tag is used to tag the ElastiCache resources in
                      AWS.
                    properties:
                      key:
                        description: Key for the tag.
                        type: string
                      value:
                        description: Value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                transitEncryptionEnabled:
                  description: "TransitEncryptionEnabled enables in-transit encryption
                    when set to true. \n You cannot modify the value of TransitEncryptionEnabled
                    after the cluster is created. To enable in-transit encryption
                    on a cluster you must TransitEncryptionEnabled to true when you
                    create a cluster. \n This parameter is valid only if the Engine
                    parameter is redis, the EngineVersion parameter is 3.2.6 or 4.x,
                    and the cluster is being created in an Amazon VPC. \n If you enable
                    in-transit encryption, you must also specify a value for CacheSubnetGroup.
                    \n Required: Only available when creating a replication group
                    in an Amazon VPC using redis version 3.2.6 or 4.x. \n Default:
                    false \n For HIPAA compliance, you must specify TransitEncryptionEnabled
                    as true, an AuthToken, and a CacheSubnetGroup."
                  type: boolean
              required:
              - applyModificationsImmediately
              - cacheNodeType
              - engine
              - replicationGroupDescription
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A ReplicationGroupStatus defines the observed state of a ReplicationGroup.
          properties:
            atProvider:
              description: ReplicationGroupObservation contains the observation of
                the status of the given ReplicationGroup.
              properties:
                automaticFailoverStatus:
                  description: AutomaticFailover indicates the status of Multi-AZ
                    with automatic failover for this Redis replication group.
                  type: string
                clusterEnabled:
                  description: 'ClusterEnabled is a flag indicating whether or not
                    this replication group is cluster enabled; i.e., whether its data
                    can be partitioned across multiple shards (API/CLI: node groups).'
                  type: boolean
                configurationEndpoint:
                  description: ConfigurationEndpoint for this replication group. Use
                    the configuration endpoint to connect to this replication group.
                  properties:
                    address:
                      description: Address is the DNS hostname of the cache node.
                      type: string
                    port:
                      description: Port number that the cache engine is listening
                        on.
                      type: integer
                  type: object
                memberClusters:
                  description: MemberClusters is the list of names of all the cache
                    clusters that are part of this replication group.
                  items:
                    type: string
                  type: array
                nodeGroups:
                  description: NodeGroups is a list of node groups in this replication
                    group. For Redis (cluster mode disabled) replication groups, this
                    is a single-element list. For Redis (cluster mode enabled) replication
                    groups, the list contains an entry for each node group (shard).
                  items:
                    description: NodeGroup represents a collection of cache nodes
                      in a replication group. One node in the node group is the read/write
                      primary node. All the other nodes are read-only Replica nodes.
                      Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticache-2015-02-02/NodeGroup
                    properties:
                      nodeGroupMembers:
                        description: NodeGroupMembers is a list containing information
                          about individual nodes within the node group (shard).
                        items:
                          description: NodeGroupMember represents a single node within
                            a node group (shard). Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticache-2015-02-02/NodeGroupMember
                          properties:
                            cacheClusterId:
                              description: CacheClusterID is the ID of the cluster
                                to which the node belongs.
                              type: string
                            cacheNodeId:
                              description: CacheNodeID is the ID of the node within
                                its cluster. A node ID is a numeric identifier (0001,
                                0002, etc.).
                              type: string
                            currentRole:
                              description: CurrentRole is the role that is currently
                                assigned to the node - primary or replica. This member
                                is only applicable for Redis (cluster mode disabled)
                                replication groups.
                              type: string
                            preferredAvailabilityZone:
                              description: PreferredAvailabilityZone is the name of
                                the Availability Zone in which the node is located.
                              type: string
                            readEndpoint:
                              description: ReadEndpoint is the information required
                                for client programs to connect to a node for read
                                operations. The read endpoint is only applicable on
                                Redis (cluster mode disabled) clusters.
                              properties:
                                address:
                                  description: Address is the DNS hostname of the
                                    cache node.
                                  type: string
                                port:
                                  description: Port number that the cache engine is
                                    listening on.
                                  type: integer
                              type: object
                          type: object
                        type: array
                      port:
                        description: NodeGroupID is the identifier for the node group
                          (shard). A Redis (cluster mode disabled) replication group
                          contains only 1 node group; therefore, the node group ID
                          is 0001. A Redis (cluster mode enabled) replication group
                          contains 1 to 15 node groups numbered 0001 to 0015.
                        type: string
                      primaryEndpoint:
                        description: PrimaryEndpoint is the endpoint of the primary
                          node in this node group (shard).
                        properties:
                          address:
                            description: Address is the DNS hostname of the cache
                              node.
                            type: string
                          port:
                            description: Port number that the cache engine is listening
                              on.
                            type: integer
                        type: object
                      slots:
                        description: Slots is the keyspace for this node group (shard).
                        type: string
                      status:
                        description: Status of this replication group - creating,
                          available, etc.
                        type: string
                    type: object
                  type: array
                pendingModifiedValues:
                  description: PendingModifiedValues is a group of settings to be
                    applied to the replication group, either immediately or during
                    the next maintenance window.
                  properties:
                    automaticFailoverStatus:
                      description: AutomaticFailoverStatus indicates the status of
                        Multi-AZ with automatic failover for this Redis replication
                        group.
                      type: string
                    primaryClusterId:
                      description: PrimaryClusterID that is applied immediately or
                        during the next maintenance window.
                      type: string
                    resharding:
                      description: Resharding is the status of an online resharding
                        operation.
                      properties:
                        slotMigration:
                          description: Represents the progress of an online resharding
                            operation.
                          properties:
                            progressPercentage:
                              description: ProgressPercentage is the percentage of
                                the slot migration that is complete.
                              type: integer
                          required:
                          - progressPercentage
                          type: object
                      required:
                      - slotMigration
                      type: object
                  type: object
                status:
                  description: Status is the current state of this replication group
                    - creating, available, modifying, deleting, create-failed, snapshotting.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: rdsinstanceclasses.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: RDSInstanceClass
    listKind: RDSInstanceClassList
    plural: rdsinstanceclasses
    singular: rdsinstanceclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An RDSInstanceClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            RDSInstance.
          properties:
            forProvider:
              description: RDSInstanceParameters define the desired state of an AWS
                Relational Database Service instance.
              properties:
                allocatedStorage:
                  description: 'AllocatedStorage is the amount of storage (in gibibytes)
                    to allocate for the DB instance. Type: Integer Amazon Aurora Not
                    applicable. Aurora cluster volumes automatically grow as the amount
                    of data in your database increases, though you are only charged
                    for the space that you use in an Aurora cluster volume. MySQL
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Must
                    be an integer from 20 to 16384.    * Provisioned IOPS storage
                    (io1): Must be an integer from 100 to 16384.    * Magnetic storage
                    (standard): Must be an integer from 5 to 3072. MariaDB Constraints
                    to the amount of storage for each storage type are the following:    *
                    General Purpose (SSD) storage (gp2): Must be an integer from 20
                    to 16384.    * Provisioned IOPS storage (io1): Must be an integer
                    from 100 to 16384.    * Magnetic storage (standard): Must be an
                    integer from 5 to 3072. PostgreSQL Constraints to the amount of
                    storage for each storage type are the following:    * General
                    Purpose (SSD) storage (gp2): Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Must be an integer from 100 to
                    16384.    * Magnetic storage (standard): Must be an integer from
                    5 to 3072. Oracle Constraints to the amount of storage for each
                    storage type are the following:    * General Purpose (SSD) storage
                    (gp2): Must be an integer from 20 to 16384.    * Provisioned IOPS
                    storage (io1): Must be an integer from 100 to 16384.    * Magnetic
                    storage (standard): Must be an integer from 10 to 3072. SQL Server
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Enterprise
                    and Standard editions: Must be an integer from 200 to 16384. Web
                    and Express editions: Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Enterprise and Standard editions:
                    Must be an integer from 200 to 16384. Web and Express editions:
                    Must be an integer from 100 to 16384.    * Magnetic storage (standard):
                    Enterprise and Standard editions: Must be an integer from 200
                    to 1024. Web and Express editions: Must be an integer from 20
                    to 1024.'
                  type: integer
                allowMajorVersionUpgrade:
                  description: 'AllowMajorVersionUpgrade indicates that major version
                    upgrades are allowed. Changing this parameter doesn''t result
                    in an outage and the change is asynchronously applied as soon
                    as possible. Constraints: This parameter must be set to true when
                    specifying a value for the EngineVersion parameter that is a different
                    major version than the DB instance''s current version.'
                  type: boolean
                applyModificationsImmediately:
                  description: 'ApplyModificationsImmediately specifies whether the
                    modifications in this request and any pending modifications are
                    asynchronously applied as soon as possible, regardless of the
                    PreferredMaintenanceWindow setting for the DB instance. If this
                    parameter is set to false, changes to the DB instance are applied
                    during the next maintenance window. Some parameter changes can
                    cause an outage and are applied on the next call to RebootDBInstance,
                    or the next failure reboot. Review the table of parameters in
                    Modifying a DB Instance and Using the Apply Immediately Parameter
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
                    in the Amazon RDS User Guide. to see the impact that setting ApplyImmediately
                    to true or false has for each modified parameter and to determine
                    when the changes are applied. Default: false'
                  type: boolean
                autoMinorVersionUpgrade:
                  description: 'AutoMinorVersionUpgrade indicates that minor engine
                    upgrades are applied automatically to the DB instance during the
                    maintenance window. Default: true'
                  type: boolean
                availabilityZone:
                  description: 'AvailabilityZone is the EC2 Availability Zone that
                    the DB instance is created in. For information on AWS Regions
                    and Availability Zones, see Regions and Availability Zones (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    Default: A random, system-chosen Availability Zone in the endpoint''s
                    AWS Region. Example: us-east-1d Constraint: The AvailabilityZone
                    parameter can''t be specified if the MultiAZ parameter is set
                    to true. The specified Availability Zone must be in the same AWS
                    Region as the current endpoint.'
                  type: string
                backupRetentionPeriod:
                  description: 'BackupRetentionPeriod is the number of days for which
                    automated backups are retained. Setting this parameter to a positive
                    number enables backups. Setting this parameter to 0 disables automated
                    backups. Amazon Aurora Not applicable. The retention period for
                    automated backups is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: 1 Constraints:    * Must be a value
                    from 0 to 35    * Cannot be set to 0 if the DB instance is a source
                    to Read Replicas'
                  type: integer
                caCertificateIdentifier:
                  description: CACertificateIdentifier indicates the certificate that
                    needs to be associated with the instance.
                  type: string
                characterSetName:
                  description: CharacterSetName indicates that the DB instance should
                    be associated with the specified CharacterSet for supported engines,
                    Amazon Aurora Not applicable. The character set is managed by
                    the DB cluster. For more information, see CreateDBCluster.
                  type: string
                cloudwatchLogsExportConfiguration:
                  description: CloudwatchLogsExportConfiguration is the configuration
                    setting for the log types to be enabled for export to CloudWatch
                    Logs for a specific DB instance.
                  properties:
                    disableLogTypes:
                      description: DisableLogTypes is the list of log types to disable.
                      items:
                        type: string
                      type: array
                    enableLogTypes:
                      description: EnableLogTypes is the list of log types to enable.
                      items:
                        type: string
                      type: array
                  type: object
                copyTagsToSnapshot:
                  description: CopyTagsToSnapshot should be true to copy all tags
                    from the DB instance to snapshots of the DB instance, and otherwise
                    false. The default is false.
                  type: boolean
                dbClusterIdentifier:
                  description: 'DBClusterIdentifier is the identifier of the DB cluster
                    that the instance will belong to. For information on creating
                    a DB cluster, see CreateDBCluster. Type: String'
                  type: string
                dbClusterParameterGroupName:
                  description: DBClusterParameterGroupName is the name of the DB cluster
                    parameter group to use for the DB cluster.
                  type: string
                dbInstanceClass:
                  description: DBInstanceClass is the compute and memory capacity
                    of the DB instance, for example, db.m4.large. Not all DB instance
                    classes are available in all AWS Regions, or for all database
                    engines. For the full list of DB instance classes, and availability
                    for your engine, see DB Instance Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                    in the Amazon RDS User Guide.
                  type: string
                dbName:
                  description: 'DBName is the meaning of this parameter differs according
                    to the database engine you use. Type: String MySQL The name of
                    the database to create when the DB instance is created. If this
                    parameter is not specified, no database is created in the DB instance.
                    Constraints:    * Must contain 1 to 64 letters or numbers.    *
                    Cannot be a word reserved by the specified database engine MariaDB
                    The name of the database to create when the DB instance is created.
                    If this parameter is not specified, no database is created in
                    the DB instance. Constraints:    * Must contain 1 to 64 letters
                    or numbers.    * Cannot be a word reserved by the specified database
                    engine PostgreSQL The name of the database to create when the
                    DB instance is created. If this parameter is not specified, the
                    default "postgres" database is created in the DB instance. Constraints:    *
                    Must contain 1 to 63 letters, numbers, or underscores.    * Must
                    begin with a letter or an underscore. Subsequent characters can    be
                    letters, underscores, or digits (0-9).    * Cannot be a word reserved
                    by the specified database engine Oracle The Oracle System ID (SID)
                    of the created DB instance. If you specify null, the default value
                    ORCL is used. You can''t specify the string NULL, or any other
                    reserved word, for DBName. Default: ORCL Constraints:    * Cannot
                    be longer than 8 characters SQL Server Not applicable. Must be
                    null. Amazon Aurora The name of the database to create when the
                    primary instance of the DB cluster is created. If this parameter
                    is not specified, no database is created in the DB instance. Constraints:    *
                    Must contain 1 to 64 letters or numbers.    * Cannot be a word
                    reserved by the specified database engine'
                  type: string
                dbParameterGroupName:
                  description: 'DBParameterGroupName is the name of the DB parameter
                    group to associate with this DB instance. If this argument is
                    omitted, the default DBParameterGroup for the specified engine
                    is used. Constraints:    * Must be 1 to 255 letters, numbers,
                    or hyphens.    * First character must be a letter    * Cannot
                    end with a hyphen or contain two consecutive hyphens'
                  type: string
                dbSecurityGroups:
                  description: 'DBSecurityGroups is a list of DB security groups to
                    associate with this DB instance. Default: The default DB security
                    group for the database engine.'
                  items:
                    type: string
                  type: array
                dbSubnetGroupName:
                  description: DBSubnetGroupName is a DB subnet group to associate
                    with this DB instance. If there is no DB subnet group, then it
                    is a non-VPC DB instance.
                  type: string
                dbSubnetGroupNameRef:
                  description: DBSubnetGroupNameRef is a reference to a DBSubnetGroup
                    used to set DBSubnetGroupName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                dbSubnetGroupNameSelector:
                  description: DBSubnetGroupNameSelector selects a reference to a
                    DBSubnetGroup used to set DBSubnetGroupName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                deletionProtection:
                  description: DeletionProtection indicates if the DB instance should
                    have deletion protection enabled. The database can't be deleted
                    when this value is set to true. The default is false. For more
                    information, see  Deleting a DB Instance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
                  type: boolean
                domain:
                  description: Domain specifies the Active Directory Domain to create
                    the instance in.
                  type: string
                domainIAMRoleName:
                  description: DomainIAMRoleName specifies the name of the IAM role
                    to be used when making API calls to the Directory Service.
                  type: string
                domainIAMRoleNameRef:
                  description: DomainIAMRoleNameRef is a reference to an IAMRole used
                    to set DomainIAMRoleName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                domainIAMRoleNameSelector:
                  description: DomainIAMRoleNameSelector selects a reference to an
                    IAMRole used to set DomainIAMRoleName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                enableCloudwatchLogsExports:
                  description: EnableCloudwatchLogsExports is the list of log types
                    that need to be enabled for exporting to CloudWatch Logs. The
                    values in the list depend on the DB engine being used. For more
                    information, see Publishing Database Logs to Amazon CloudWatch
                    Logs  (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                    in the Amazon Relational Database Service User Guide.
                  items:
                    type: string
                  type: array
                enableIAMDatabaseAuthentication:
                  description: 'EnableIAMDatabaseAuthentication should be true to
                    enable mapping of AWS Identity and Access Management (IAM) accounts
                    to database accounts, and otherwise false. You can enable IAM
                    database authentication for the following database engines: Amazon
                    Aurora Not applicable. Mapping AWS IAM accounts to database accounts
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    MySQL    * For MySQL 5.6, minor version 5.6.34 or higher    *
                    For MySQL 5.7, minor version 5.7.16 or higher Default: false'
                  type: boolean
                enablePerformanceInsights:
                  description: EnablePerformanceInsights should be true to enable
                    Performance Insights for the DB instance, and otherwise false.
                    For more information, see Using Amazon Performance Insights (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                    in the Amazon Relational Database Service User Guide.
                  type: boolean
                engine:
                  description: 'Engine is the name of the database engine to be used
                    for this instance. Not every database engine is available for
                    every AWS Region. Valid Values:    * aurora (for MySQL 5.6-compatible
                    Aurora)    * aurora-mysql (for MySQL 5.7-compatible Aurora)    *
                    aurora-postgresql    * mariadb    * mysql    * oracle-ee    *
                    oracle-se2    * oracle-se1    * oracle-se    * postgres    * sqlserver-ee    *
                    sqlserver-se    * sqlserver-ex    * sqlserver-web Engine is a
                    required field'
                  type: string
                engineVersion:
                  description: EngineVersion is the version number of the database
                    engine to use. For a list of valid engine versions, call DescribeDBEngineVersions.
                    The following are the database engines and links to information
                    about the major and minor versions that are available with Amazon
                    RDS. Not every database engine is available for every AWS Region.
                    Amazon Aurora Not applicable. The version number of the database
                    engine to be used by the DB instance is managed by the DB cluster.
                    For more information, see CreateDBCluster. MariaDB See MariaDB
                    on Amazon RDS Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Microsoft SQL Server See Version
                    and Feature Support on Amazon RDS (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport)
                    in the Amazon RDS User Guide. MySQL See MySQL on Amazon RDS Versions
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Oracle See Oracle Database Engine
                    Release Notes (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
                    in the Amazon RDS User Guide. PostgreSQL See Supported PostgreSQL
                    Database Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions)
                    in the Amazon RDS User Guide.
                  type: string
                finalDBSnapshotIdentifier:
                  description: 'The DBSnapshotIdentifier of the new DBSnapshot created
                    when SkipFinalSnapshot is set to false. Specifying this parameter
                    and also setting the SkipFinalShapshot parameter to true results
                    in an error. Constraints:    * Must be 1 to 255 letters or numbers.    *
                    First character must be a letter    * Cannot end with a hyphen
                    or contain two consecutive hyphens    * Cannot be specified when
                    deleting a Read Replica.'
                  type: string
                iops:
                  description: 'IOPS is the amount of Provisioned IOPS (input/output
                    operations per second) to be initially allocated for the DB instance.
                    For information about valid IOPS values, see see Amazon RDS Provisioned
                    IOPS Storage to Improve Performance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS)
                    in the Amazon RDS User Guide. Constraints: Must be a multiple
                    between 1 and 50 of the storage amount for the DB instance. Must
                    also be an integer multiple of 1000. For example, if the size
                    of your DB instance is 500 GiB, then your IOPS value can be 2000,
                    3000, 4000, or 5000.'
                  type: integer
                kmsKeyId:
                  description: KMSKeyID for an encrypted DB instance. The KMS key
                    identifier is the Amazon Resource Name (ARN) for the KMS encryption
                    key. If you are creating a DB instance with the same AWS account
                    that owns the KMS encryption key used to encrypt the new DB instance,
                    then you can use the KMS key alias instead of the ARN for the
                    KM encryption key. Amazon Aurora Not applicable. The KMS key identifier
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    If the StorageEncrypted parameter is true, and you do not specify
                    a value for the KMSKeyID parameter, then Amazon RDS will use your
                    default encryption key. AWS KMS creates the default encryption
                    key for your AWS account. Your AWS account has a different default
                    encryption key for each AWS Region.
                  type: string
                licenseModel:
                  description: 'LicenseModel information for this DB instance. Valid
                    values: license-included | bring-your-own-license | general-public-license'
                  type: string
                masterUsername:
                  description: 'MasterUsername is the name for the master user. Amazon
                    Aurora Not applicable. The name for the master user is managed
                    by the DB cluster. For more information, see CreateDBCluster.
                    MariaDB Constraints:    * Required for MariaDB.    * Must be 1
                    to 16 letters or numbers.    * Cannot be a reserved word for the
                    chosen database engine. Microsoft SQL Server Constraints:    *
                    Required for SQL Server.    * Must be 1 to 128 letters or numbers.    *
                    The first character must be a letter.    * Cannot be a reserved
                    word for the chosen database engine. MySQL Constraints:    * Required
                    for MySQL.    * Must be 1 to 16 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. Oracle Constraints:    * Required
                    for Oracle.    * Must be 1 to 30 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. PostgreSQL Constraints:    * Required
                    for PostgreSQL.    * Must be 1 to 63 letters or numbers.    *
                    First character must be a letter.    * Cannot be a reserved word
                    for the chosen database engine.'
                  type: string
                monitoringInterval:
                  description: 'MonitoringInterval is the interval, in seconds, between
                    points when Enhanced Monitoring metrics are collected for the
                    DB instance. To disable collecting Enhanced Monitoring metrics,
                    specify 0. The default is 0. If MonitoringRoleARN is specified,
                    then you must also set MonitoringInterval to a value other than
                    0. Valid Values: 0, 1, 5, 10, 15, 30, 60'
                  type: integer
                monitoringRoleArn:
                  description: MonitoringRoleARN is the ARN for the IAM role that
                    permits RDS to send enhanced monitoring metrics to Amazon CloudWatch
                    Logs. For example, arn:aws:iam:123456789012:role/emaccess. For
                    information on creating a monitoring role, go to Setting Up and
                    Enabling Enhanced Monitoring (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                    in the Amazon RDS User Guide. If MonitoringInterval is set to
                    a value other than 0, then you must supply a MonitoringRoleARN
                    value.
                  type: string
                monitoringRoleArnRef:
                  description: MonitoringRoleARNRef is a reference to an IAMRole used
                    to set MonitoringRoleARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                monitoringRoleArnSelector:
                  description: MonitoringRoleARNSelector selects a reference to an
                    IAMRole used to set MonitoringRoleARN.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                multiAZ:
                  description: MultiAZ specifies if the DB instance is a Multi-AZ
                    deployment. You can't set the AvailabilityZone parameter if the
                    MultiAZ parameter is set to true.
                  type: boolean
                optionGroupName:
                  description: OptionGroupName indicates that the DB instance should
                    be associated with the specified option group. Permanent options,
                    such as the TDE option for Oracle Advanced Security TDE, can't
                    be removed from an option group, and that option group can't be
                    removed from a DB instance once it is associated with a DB instance
                  type: string
                performanceInsightsKMSKeyId:
                  description: PerformanceInsightsKMSKeyID is the AWS KMS key identifier
                    for encryption of Performance Insights data. The KMS key ID is
                    the Amazon Resource Name (ARN), KMS key identifier, or the KMS
                    key alias for the KMS encryption key.
                  type: string
                performanceInsightsRetentionPeriod:
                  description: PerformanceInsightsRetentionPeriod is the amount of
                    time, in days, to retain Performance Insights data. Valid values
                    are 7 or 731 (2 years).
                  type: integer
                port:
                  description: 'Port number on which the database accepts connections.
                    MySQL Default: 3306 Valid Values: 1150-65535 Type: Integer MariaDB
                    Default: 3306 Valid Values: 1150-65535 Type: Integer PostgreSQL
                    Default: 5432 Valid Values: 1150-65535 Type: Integer Oracle Default:
                    1521 Valid Values: 1150-65535 SQL Server Default: 1433 Valid Values:
                    1150-65535 except for 1434, 3389, 47001, 49152, and 49152 through
                    49156. Amazon Aurora Default: 3306 Valid Values: 1150-65535 Type:
                    Integer'
                  type: integer
                preferredBackupWindow:
                  description: 'PreferredBackupWindow is the daily time range during
                    which automated backups are created if automated backups are enabled,
                    using the BackupRetentionPeriod parameter. For more information,
                    see The Backup Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
                    in the Amazon RDS User Guide. Amazon Aurora Not applicable. The
                    daily time range for creating automated backups is managed by
                    the DB cluster. For more information, see CreateDBCluster. The
                    default is a 30-minute window selected at random from an 8-hour
                    block of time for each AWS Region. To see the time blocks available,
                    see  Adjusting the Preferred DB Instance Maintenance Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
                    in the Amazon RDS User Guide. Constraints:    * Must be in the
                    format hh24:mi-hh24:mi.    * Must be in Universal Coordinated
                    Time (UTC).    * Must not conflict with the preferred maintenance
                    window.    * Must be at least 30 minutes.'
                  type: string
                preferredMaintenanceWindow:
                  description: 'PreferredMaintenanceWindow is the time range each
                    week during which system maintenance can occur, in Universal Coordinated
                    Time (UTC). For more information, see Amazon RDS Maintenance Window
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance).
                    Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window
                    selected at random from an 8-hour block of time for each AWS Region,
                    occurring on a random day of the week. Valid Days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window.'
                  type: string
                processorFeatures:
                  description: ProcessorFeatures is the number of CPU cores and the
                    number of threads per core for the DB instance class of the DB
                    instance.
                  items:
                    description: ProcessorFeature is a processor feature entry. For
                      more information, see Configuring the Processor of the DB Instance
                      Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                      in the Amazon RDS User Guide. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ProcessorFeature
                    properties:
                      name:
                        description: Name of the processor feature. Valid names are
                          coreCount and threadsPerCore.
                        type: string
                      value:
                        description: Value of a processor feature name.
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                promotionTier:
                  description: 'PromotionTier specifies the order in which an Aurora
                    Replica is promoted to the primary instance after a failure of
                    the existing primary instance. For more information, see  Fault
                    Tolerance for an Aurora DB Cluster (http://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance)
                    in the Amazon Aurora User Guide. Default: 1 Valid Values: 0 -
                    15'
                  type: integer
                publiclyAccessible:
                  description: 'PubliclyAccessible specifies the accessibility options
                    for the DB instance. A value of true specifies an Internet-facing
                    instance with a publicly resolvable DNS name, which resolves to
                    a public IP address. A value of false specifies an internal instance
                    with a DNS name that resolves to a private IP address. Default:
                    The default behavior varies depending on whether DBSubnetGroupName
                    is specified. If DBSubnetGroupName is not specified, and PubliclyAccessible
                    is not specified, the following applies:    * If the default VPC
                    in the target region doesn’t have an Internet gateway    attached
                    to it, the DB instance is private.    * If the default VPC in
                    the target region has an Internet gateway attached    to it, the
                    DB instance is public. If DBSubnetGroupName is specified, and
                    PubliclyAccessible is not specified, the following applies:    *
                    If the subnets are part of a VPC that doesn’t have an Internet
                    gateway    attached to it, the DB instance is private.    * If
                    the subnets are part of a VPC that has an Internet gateway attached    to
                    it, the DB instance is public.'
                  type: boolean
                scalingConfiguration:
                  description: ScalingConfiguration is the scaling properties of the
                    DB cluster. You can only modify scaling properties for DB clusters
                    in serverless DB engine mode.
                  properties:
                    autoPause:
                      description: AutoPause specifies whether to allow or disallow
                        automatic pause for an Aurora DB cluster in serverless DB
                        engine mode. A DB cluster can be paused only when it's idle
                        (it has no connections). If a DB cluster is paused for more
                        than seven days, the DB cluster might be backed up with a
                        snapshot. In this case, the DB cluster is restored when there
                        is a request to connect to it.
                      type: boolean
                    maxCapacity:
                      description: MaxCapacity is the maximum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The maximum capacity
                        must be greater than or equal to the minimum capacity.
                      type: integer
                    minCapacity:
                      description: MinCapacity is the minimum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The minimum capacity
                        must be less than or equal to the maximum capacity.
                      type: integer
                    secondsUntilAutoPause:
                      description: SecondsUntilAutoPause is the time, in seconds,
                        before an Aurora DB cluster in serverless mode is paused.
                      type: integer
                  type: object
                skipFinalSnapshotBeforeDeletion:
                  description: 'Determines whether a final DB snapshot is created
                    before the DB instance is deleted. If true is specified, no DBSnapshot
                    is created. If false is specified, a DB snapshot is created before
                    the DB instance is deleted. Note that when a DB instance is in
                    a failure state and has a status of ''failed'', ''incompatible-restore'',
                    or ''incompatible-network'', it can only be deleted when the SkipFinalSnapshotBeforeDeletion
                    parameter is set to "true". Specify true when deleting a Read
                    Replica. The FinalDBSnapshotIdentifier parameter must be specified
                    if SkipFinalSnapshotBeforeDeletion is false. Default: false'
                  type: boolean
                storageEncrypted:
                  description: 'StorageEncrypted specifies whether the DB instance
                    is encrypted. Amazon Aurora Not applicable. The encryption for
                    DB instances is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: false'
                  type: boolean
                storageType:
                  description: 'StorageType specifies the storage type to be associated
                    with the DB instance. Valid values: standard | gp2 | io1 If you
                    specify io1, you must also include a value for the IOPS parameter.
                    Default: io1 if the IOPS parameter is specified, otherwise standard'
                  type: string
                tags:
                  description: Tags. For more information, see Tagging Amazon RDS
                    Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                    in the Amazon RDS User Guide.
                  items:
                    description: Tag is a metadata assigned to an Amazon RDS resource
                      consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
                    properties:
                      key:
                        description: 'A key is the required name of the tag. The string
                          value can be from 1 to 128 Unicode characters in length
                          and can''t be prefixed with "aws:" or "rds:". The string
                          can only contain only the set of Unicode letters, digits,
                          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
                          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                      value:
                        description: 'A value is the optional value of the tag. The
                          string value can be from 1 to 256 Unicode characters in
                          length and can''t be prefixed with "aws:" or "rds:". The
                          string can only contain only the set of Unicode letters,
                          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'',
                          ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                    type: object
                  type: array
                timezone:
                  description: Timezone of the DB instance. The time zone parameter
                    is currently supported only by Microsoft SQL Server (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
                  type: string
                useDefaultProcessorFeatures:
                  description: A value that specifies that the DB instance class of
                    the DB instance uses its default processor features.
                  type: boolean
                vpcSecurityGroupIDRefs:
                  description: VPCSecurityGroupIDRefs are references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                vpcSecurityGroupIDSelector:
                  description: VPCSecurityGroupIDSelector selects references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                vpcSecurityGroupIds:
                  description: 'VPCSecurityGroupIDs is a list of EC2 VPC security
                    groups to associate with this DB instance. Amazon Aurora Not applicable.
                    The associated list of EC2 VPC security groups is managed by the
                    DB cluster. For more information, see CreateDBCluster. Default:
                    The default EC2 VPC security group for the DB subnet group''s
                    VPC.'
                  items:
                    type: string
                  type: array
              required:
              - dbInstanceClass
              - engine
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamrolepolicyattachments.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.forProvider.roleName
    name: ROLENAME
    type: string
  - JSONPath: .spec.forProvider.policyArn
    name: POLICYARN
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMRolePolicyAttachment
    listKind: IAMRolePolicyAttachmentList
    plural: iamrolepolicyattachments
    singular: iamrolepolicyattachment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMRolePolicyAttachment is a managed resource that represents
        an AWS IAM Role policy attachment.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMRolePolicyAttachmentSpec defines the desired state of
            an IAMRolePolicyAttachment.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMRolePolicyAttachmentParameters define the desired state
                of an AWS IAM Role policy attachment.
              properties:
                policyArn:
                  description: PolicyARN is the Amazon Resource Name (ARN) of the
                    IAM policy you want to attach.
                  type: string
                roleName:
                  description: RoleName presents the name of the IAM role.
                  type: string
                roleNameRef:
                  description: RoleNameRef references an IAMRole to retrieve its Name
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                roleNameSelector:
                  description: RoleNameSelector selects a reference to an IAMRole
                    to retrieve its Name
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - policyArn
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMRolePolicyAttachmentStatus represents the observed state
            of an IAMRolePolicyAttachment.
          properties:
            atProvider:
              description: IAMRolePolicyAttachmentExternalStatus keeps the state for
                the external resource
              properties:
                attachedPolicyArn:
                  description: AttachedPolicyARN is the arn for the attached policy.
                    If nil, the policy is not yet attached
                  type: string
              required:
              - attachedPolicyArn
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: cachesubnetgroups.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.vpcId
    name: VPCID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CacheSubnetGroup
    listKind: CacheSubnetGroupList
    plural: cachesubnetgroups
    singular: cachesubnetgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A CacheSubnetGroup is a managed resource that represents an AWS
        Subnet Group for ElasticCache.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A CacheSubnetGroupSpec defines the desired state of a CacheSubnetGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: CacheSubnetGroupParameters define the desired state of
                an AWS ElasticCache Subnet Group.
              properties:
                description:
                  description: A description for the cache subnet group.
                  type: string
                subnetIdRefs:
                  description: SubnetIDRefs references to a Subnet to and retrieves
                    its SubnetID
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                subnetIdSelector:
                  description: SubnetIDSelector selects a set of references that each
                    retrieve the subnetID from the referenced Subnet
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                subnetIds:
                  description: A list of  Subnet IDs for the cache subnet group.
                  items:
                    type: string
                  type: array
              required:
              - description
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A CacheSubnetGroupStatus represents the observed state of a
            Subnet Group.
          properties:
            atProvider:
              description: CacheSubnetGroupExternalStatus keeps the state for the
                external resource
              properties:
                vpcId:
                  description: The Amazon Virtual Private Cloud identifier (VPC ID)
                    of the cache subnet group.
                  type: string
              required:
              - vpcId
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
