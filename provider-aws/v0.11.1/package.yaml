apiVersion: meta.pkg.crossplane.io/v1alpha1
kind: Provider
metadata:
  name: provider-aws
spec:
  controller:
    image: crossplane/provider-aws:v0.11.1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: replicationgroupclasses.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: ReplicationGroupClass
    listKind: ReplicationGroupClassList
    plural: replicationgroupclasses
    singular: replicationgroupclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A ReplicationGroupClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            ReplicationGroup.
          properties:
            forProvider:
              description: 'ReplicationGroupParameters define the desired state of
                an AWS ElastiCache Replication Group. Most fields map directly to
                an AWS ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters'
              properties:
                applyModificationsImmediately:
                  description: "If true, this parameter causes the modifications in
                    this request and any pending modifications to be applied, asynchronously
                    and as soon as possible, regardless of the PreferredMaintenanceWindow
                    setting for the replication group. \n If false, changes to the
                    nodes in the replication group are applied on the next maintenance
                    reboot, or the next failure reboot, whichever occurs first."
                  type: boolean
                atRestEncryptionEnabled:
                  description: "AtRestEncryptionEnabled enables encryption at rest
                    when set to true. \n You cannot modify the value of AtRestEncryptionEnabled
                    after the replication group is created. To enable encryption at
                    rest on a replication group you must set AtRestEncryptionEnabled
                    to true when you create the replication group. \n Only available
                    when creating a replication group in an Amazon VPC using redis
                    version 3.2.6 or 4.x."
                  type: boolean
                authEnabled:
                  description: "AuthEnabled enables mandatory authentication when
                    connecting to the managed replication group. AuthEnabled requires
                    TransitEncryptionEnabled to be true. \n While ReplicationGroupSpec
                    mirrors the fields of the upstream replication group object as
                    closely as possible, we expose a boolean here rather than requiring
                    the operator pass in a string authentication token. Crossplane
                    will generate a token automatically and expose it via a Secret."
                  type: boolean
                automaticFailoverEnabled:
                  description: "AutomaticFailoverEnabled specifies whether a read-only
                    replica is automatically promoted to read/write primary if the
                    existing primary fails. If true, Multi-AZ is enabled for this
                    replication group. If false, Multi-AZ is disabled for this replication
                    group. \n AutomaticFailoverEnabled must be enabled for Redis (cluster
                    mode enabled) replication groups. \n Amazon ElastiCache for Redis
                    does not support Multi-AZ with automatic failover on: * Redis
                    versions earlier than 2.8.6. * Redis (cluster mode disabled):
                    T1 and T2 cache node types. * Redis (cluster mode enabled): T1
                    node types."
                  type: boolean
                cacheNodeType:
                  description: 'CacheNodeType specifies the compute and memory capacity
                    of the nodes in the node group (shard). For a complete listing
                    of node types and specifications, see: * Amazon ElastiCache Product
                    Features and Details (http://aws.amazon.com/elasticache/details)
                    * Cache Node Type-Specific Parameters for Memcached (http://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/ParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific)
                    * Cache Node Type-Specific Parameters for Redis (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific)'
                  type: string
                cacheParameterGroupName:
                  description: "CacheParameterGroupName specifies the name of the
                    parameter group to associate with this replication group. If this
                    argument is omitted, the default cache parameter group for the
                    specified engine is used. \n If you are running Redis version
                    3.2.4 or later, only one node group (shard), and want to use a
                    default parameter group, we recommend that you specify the parameter
                    group by name. * To create a Redis (cluster mode disabled) replication
                    group, use CacheParameterGroupName=default.redis3.2. * To create
                    a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on."
                  type: string
                cacheSecurityGroupNameRefs:
                  description: CacheSecurityGroupNameRefs are references to SecurityGroups
                    used to set the CacheSecurityGroupNames.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                cacheSecurityGroupNameSelector:
                  description: CacheSecurityGroupNameSelector selects references to
                    SecurityGroups.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                cacheSecurityGroupNames:
                  description: CacheSecurityGroupNames specifies a list of cache security
                    group names to associate with this replication group. Only for
                    EC2-Classic mode.
                  items:
                    type: string
                  type: array
                cacheSubnetGroupName:
                  description: CacheSubnetGroupName specifies the name of the cache
                    subnet group to be used for the replication group. If you're going
                    to launch your cluster in an Amazon VPC, you need to create a
                    subnet group before you start creating a cluster. For more information,
                    see Subnets and Subnet Groups (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
                  type: string
                engine:
                  description: Engine is the name of the cache engine (memcached or
                    redis) to be used for the clusters in this replication group.
                  type: string
                engineVersion:
                  description: "EngineVersion specifies the version number of the
                    cache engine to be used for the clusters in this replication group.
                    To view the supported cache engine versions, use the DescribeCacheEngineVersions
                    operation. \n Important: You can upgrade to a newer engine version
                    (see Selecting a Cache Engine and Version (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement))
                    in the ElastiCache User Guide, but you cannot downgrade to an
                    earlier engine version. If you want to use an earlier engine version,
                    you must delete the existing cluster or replication group and
                    create it anew with the earlier engine version."
                  type: string
                nodeGroupConfiguration:
                  description: "NodeGroupConfigurationSpec specifies a list of node
                    group (shard) configuration options. \n If you're creating a Redis
                    (cluster mode disabled) or a Redis (cluster mode enabled) replication
                    group, you can use this parameter to individually configure each
                    node group (shard), or you can omit this parameter. However, when
                    seeding a Redis (cluster mode enabled) cluster from a S3 rdb file,
                    you must configure each node group (shard) using this parameter
                    because you must specify the slots for each node group."
                  items:
                    description: A NodeGroupConfigurationSpec specifies the desired
                      state of a node group.
                    properties:
                      primaryAvailabilityZone:
                        description: PrimaryAvailabilityZone specifies the Availability
                          Zone where the primary node of this node group (shard) is
                          launched.
                        type: string
                      replicaAvailabilityZones:
                        description: ReplicaAvailabilityZones specifies a list of
                          Availability Zones to be used for the read replicas. The
                          number of Availability Zones in this list must match the
                          value of ReplicaCount or ReplicasPerNodeGroup if not specified.
                        items:
                          type: string
                        type: array
                      replicaCount:
                        description: ReplicaCount specifies the number of read replica
                          nodes in this node group (shard).
                        type: integer
                      slots:
                        description: "Slots specifies the keyspace for a particular
                          node group. Keyspaces range from 0 to 16,383. The string
                          is in the format startkey-endkey. \n Example: \"0-3999\""
                        type: string
                    type: object
                  type: array
                notificationTopicArn:
                  description: NotificationTopicARN specifies the Amazon Resource
                    Name (ARN) of the Amazon Simple Notification Service (SNS) topic
                    to which notifications are sent. The Amazon SNS topic owner must
                    be the same as the cluster owner.
                  type: string
                notificationTopicStatus:
                  description: "NotificationTopicStatus is the status of the Amazon
                    SNS notification topic for the replication group. Notifications
                    are sent only if the status is active. \n Valid values: active
                    | inactive"
                  type: string
                numCacheClusters:
                  description: "NumCacheClusters specifies the number of clusters
                    this replication group initially has. This parameter is not used
                    if there is more than one node group (shard). You should use ReplicasPerNodeGroup
                    instead. \n If AutomaticFailoverEnabled is true, the value of
                    this parameter must be at least 2. If AutomaticFailoverEnabled
                    is false you can omit this parameter (it will default to 1), or
                    you can explicitly set it to a value between 2 and 6. \n The maximum
                    permitted value for NumCacheClusters is 6 (1 primary plus 5 replicas)."
                  type: integer
                numNodeGroups:
                  description: "NumNodeGroups specifies the number of node groups
                    (shards) for this Redis (cluster mode enabled) replication group.
                    For Redis (cluster mode disabled) either omit this parameter or
                    set it to 1. \n Default: 1"
                  type: integer
                port:
                  description: Port number on which each member of the replication
                    group accepts connections.
                  type: integer
                preferredCacheClusterAzs:
                  description: "PreferredCacheClusterAZs specifies a list of EC2 Availability
                    Zones in which the replication group's clusters are created. The
                    order of the Availability Zones in the list is the order in which
                    clusters are allocated. The primary cluster is created in the
                    first AZ in the list. \n This parameter is not used if there is
                    more than one node group (shard). You should use NodeGroupConfigurationSpec
                    instead. \n If you are creating your replication group in an Amazon
                    VPC (recommended), you can only locate clusters in Availability
                    Zones associated with the subnets in the selected subnet group.
                    \n The number of Availability Zones listed must equal the value
                    of NumCacheClusters. \n Default: system chosen Availability Zones."
                  items:
                    type: string
                  type: array
                preferredMaintenanceWindow:
                  description: "PreferredMaintenanceWindow specifies the weekly time
                    range during which maintenance on the cluster is performed. It
                    is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
                    (24H Clock UTC). The minimum maintenance window is a 60 minute
                    period. \n Example: sun:23:00-mon:01:30"
                  type: string
                primaryClusterId:
                  description: "PrimaryClusterId is the identifier of the cluster
                    that serves as the primary for this replication group. This cluster
                    must already exist and have a status of available. \n This parameter
                    is not required if NumCacheClusters, NumNodeGroups or ReplicasPerNodeGroup
                    is specified."
                  type: string
                replicasPerNodeGroup:
                  description: ReplicasPerNodeGroup specifies the number of replica
                    nodes in each node group (shard). Valid values are 0 to 5.
                  type: integer
                replicationGroupDescription:
                  description: ReplicationGroupDescription is the description for
                    the replication group.
                  type: string
                securityGroupIdRefs:
                  description: SecurityGroupIDRefs are references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIdSelector:
                  description: SecurityGroupIDSelector selects references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: SecurityGroupIDs specifies one or more Amazon VPC security
                    groups associated with this replication group. Use this parameter
                    only when you are creating a replication group in an Amazon VPC.
                  items:
                    type: string
                  type: array
                snapshotArns:
                  description: 'SnapshotARNs specifies a list of Amazon Resource Names
                    (ARN) that uniquely identify the Redis RDB snapshot files stored
                    in Amazon S3. The snapshot files are used to populate the new
                    replication group. The Amazon S3 object name in the ARN cannot
                    contain any commas. The new replication group will have the number
                    of node groups (console: shards) specified by the parameter NumNodeGroups
                    or the number of node groups configured by NodeGroupConfigurationSpec
                    regardless of the number of ARNs specified here.'
                  items:
                    type: string
                  type: array
                snapshotName:
                  description: SnapshotName specifies the name of a snapshot from
                    which to restore data into the new replication group. The snapshot
                    status changes to restoring while the new replication group is
                    being created.
                  type: string
                snapshotRetentionLimit:
                  description: 'SnapshotRetentionLimit specifies the number of days
                    for which ElastiCache retains automatic snapshots before deleting
                    them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
                    that was taken today is retained for 5 days before being deleted.
                    Default: 0 (i.e., automatic backups are disabled for this cluster).'
                  type: integer
                snapshotWindow:
                  description: "SnapshotWindow specifies the daily time range (in
                    UTC) during which ElastiCache begins taking a daily snapshot of
                    your node group (shard). \n Example: 05:00-09:00 \n If you do
                    not specify this parameter, ElastiCache automatically chooses
                    an appropriate time range."
                  type: string
                snapshottingClusterID:
                  description: SnapshottingClusterID is used as the daily snapshot
                    source for the replication group. This parameter cannot be set
                    for Redis (cluster mode enabled) replication groups.
                  type: string
                tags:
                  description: A list of cost allocation tags to be added to this
                    resource. A tag is a key-value pair.
                  items:
                    description: A Tag is used to tag the ElastiCache resources in
                      AWS.
                    properties:
                      key:
                        description: Key for the tag.
                        type: string
                      value:
                        description: Value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                transitEncryptionEnabled:
                  description: "TransitEncryptionEnabled enables in-transit encryption
                    when set to true. \n You cannot modify the value of TransitEncryptionEnabled
                    after the cluster is created. To enable in-transit encryption
                    on a cluster you must TransitEncryptionEnabled to true when you
                    create a cluster. \n This parameter is valid only if the Engine
                    parameter is redis, the EngineVersion parameter is 3.2.6 or 4.x,
                    and the cluster is being created in an Amazon VPC. \n If you enable
                    in-transit encryption, you must also specify a value for CacheSubnetGroup.
                    \n Required: Only available when creating a replication group
                    in an Amazon VPC using redis version 3.2.6 or 4.x. \n Default:
                    false \n For HIPAA compliance, you must specify TransitEncryptionEnabled
                    as true, an AuthToken, and a CacheSubnetGroup."
                  type: boolean
              required:
              - applyModificationsImmediately
              - cacheNodeType
              - engine
              - replicationGroupDescription
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: nodegroups.eks.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.forProvider.clusterName
    name: CLUSTER
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: eks.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: NodeGroup
    listKind: NodeGroupList
    plural: nodegroups
    singular: nodegroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A NodeGroup is a managed resource that represents an AWS Elastic
        Kubernetes Service NodeGroup.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A NodeGroupSpec defines the desired state of an EKS NodeGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: NodeGroupParameters define the desired state of an AWS
                Elastic Kubernetes Service NodeGroup.
              properties:
                amiType:
                  description: The AMI type for your node group. GPU instance types
                    should use the AL2_x86_64_GPU AMI type, which uses the Amazon
                    EKS-optimized Linux AMI with GPU support. Non-GPU instances should
                    use the AL2_x86_64 AMI type, which uses the Amazon EKS-optimized
                    Linux AMI.
                  type: string
                clusterName:
                  description: "The name of the cluster to create the node group in.
                    \n ClusterName is a required field"
                  type: string
                clusterNameRef:
                  description: ClusterNameRef is a reference to a Cluster used to
                    set the ClusterName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                clusterNameSelector:
                  description: ClusterNameSelector selects references to a Cluster
                    used to set the ClusterName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                diskSize:
                  description: The root device disk size (in GiB) for your node group
                    instances. The default disk size is 20 GiB.
                  format: int64
                  type: integer
                instanceTypes:
                  description: The instance type to use for your node group. Currently,
                    you can specify a single instance type for a node group. The default
                    value for this parameter is t3.medium. If you choose a GPU instance
                    type, be sure to specify the AL2_x86_64_GPU with the amiType parameter.
                  items:
                    type: string
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: The Kubernetes labels to be applied to the nodes in
                    the node group when they are created.
                  type: object
                nodeRole:
                  description: "The Amazon Resource Name (ARN) of the IAM role to
                    associate with your node group. The Amazon EKS worker node kubelet
                    daemon makes calls to AWS APIs on your behalf. Worker nodes receive
                    permissions for these API calls through an IAM instance profile
                    and associated policies. Before you can launch worker nodes and
                    register them into a cluster, you must create an IAM role for
                    those worker nodes to use when they are launched. For more information,
                    see Amazon EKS Worker Node IAM Role (https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html)
                    in the Amazon EKS User Guide . \n NodeRole is a required field"
                  type: string
                nodeRoleRef:
                  description: NodeRoleRef is a reference to a Cluster used to set
                    the NodeRole.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                nodeRoleSelector:
                  description: NodeRoleSelector selects references to a Cluster used
                    to set the NodeRole.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                releaseVersion:
                  description: The AMI version of the Amazon EKS-optimized AMI to
                    use with your node group. By default, the latest available AMI
                    version for the node group's current Kubernetes version is used.
                    For more information, see Amazon EKS-Optimized Linux AMI Versions
                    (https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html)
                    in the Amazon EKS User Guide.
                  type: string
                remoteAccess:
                  description: The remote access (SSH) configuration to use with your
                    node group.
                  properties:
                    ec2SSHKey:
                      description: The Amazon EC2 SSH key that provides access for
                        SSH communication with the worker nodes in the managed node
                        group. For more information, see Amazon EC2 Key Pairs (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html)
                        in the Amazon Elastic Compute Cloud User Guide for Linux Instances.
                      type: string
                    sourceSecurityGroupRefs:
                      description: SourceSecurityGroupRefs are references to SecurityGroups
                        used to set the SourceSecurityGroups.
                      items:
                        description: A Reference to a named object.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    sourceSecurityGroupSelector:
                      description: SourceSecurityGroupSelector selects references
                        to SecurityGroups used to set the SourceSecurityGroups.
                      properties:
                        matchControllerRef:
                          description: MatchControllerRef ensures an object with the
                            same controller reference as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching
                            labels is selected.
                          type: object
                      type: object
                    sourceSecurityGroups:
                      description: The security groups that are allowed SSH access
                        (port 22) to the worker nodes. If you specify an Amazon EC2
                        SSH key but do not specify a source security group when you
                        create a managed node group, then port 22 on the worker nodes
                        is opened to the internet (0.0.0.0/0). For more information,
                        see Security Groups for Your VPC (https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html)
                        in the Amazon Virtual Private Cloud User Guide.
                      items:
                        type: string
                      type: array
                  type: object
                scalingConfig:
                  description: The scaling configuration details for the Auto Scaling
                    group that is created for your node group.
                  properties:
                    desiredSize:
                      description: The current number of worker nodes that the managed
                        node group should maintain.
                      format: int64
                      type: integer
                    maxSize:
                      description: The maximum number of worker nodes that the managed
                        node group can scale out to. Managed node groups can support
                        up to 100 nodes by default.
                      format: int64
                      type: integer
                    minSize:
                      description: The minimum number of worker nodes that the managed
                        node group can scale in to. This number must be greater than
                        zero.
                      format: int64
                      type: integer
                  type: object
                subnetRefs:
                  description: SubnetRefs are references to Subnets used to set the
                    Subnets.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                subnetSelector:
                  description: SubnetSelector selects references to Subnets used to
                    set the Subnets.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                subnets:
                  description: "The subnets to use for the Auto Scaling group that
                    is created for your node group. These subnets must have the tag
                    key kubernetes.io/cluster/CLUSTER_NAME with a value of shared,
                    where CLUSTER_NAME is replaced with the name of your cluster.
                    \n Subnets is a required field"
                  items:
                    type: string
                  type: array
                tags:
                  additionalProperties:
                    type: string
                  description: The metadata to apply to the node group to assist with
                    categorization and organization. Each tag consists of a key and
                    an optional value, both of which you define. Node group tags do
                    not propagate to any other resources associated with the node
                    group, such as the Amazon EC2 instances or subnets.
                  type: object
                version:
                  description: The Kubernetes version to use for your managed nodes.
                    By default, the Kubernetes version of the cluster is used, and
                    this is the only accepted specified value.
                  type: string
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A NodeGroupStatus represents the observed state of an EKS NodeGroup.
          properties:
            atProvider:
              description: NodeGroupObservation is the observed state of a NodeGroup.
              properties:
                createdAt:
                  description: The Unix epoch timestamp in seconds for when the managed
                    node group was created.
                  format: date-time
                  type: string
                modifiedAt:
                  description: The Unix epoch timestamp in seconds for when the managed
                    node group was last modified.
                  format: date-time
                  type: string
                nodeGroupArn:
                  description: The Amazon Resource Name (ARN) associated with the
                    managed node group.
                  type: string
                nodeGroupHealth:
                  description: The health status of the node group. If there are issues
                    with your node group's health, they are listed here.
                  properties:
                    issues:
                      description: Any issues that are associated with the node group.
                      items:
                        description: Issue is an issue with a NodeGroup.
                        properties:
                          code:
                            description: "A brief description of the error. \n    *
                              AutoScalingGroupNotFound: We couldn't find the Auto
                              Scaling group associated    with the managed node group.
                              You may be able to recreate an Auto Scaling    group
                              with the same settings to recover. \n    * Ec2SecurityGroupNotFound:
                              We couldn't find the cluster security group    for the
                              cluster. You must recreate your cluster. \n    * Ec2SecurityGroupDeletionFailure:
                              We could not delete the remote access    security group
                              for your managed node group. Remove any dependencies
                              from    the security group. \n    * Ec2LaunchTemplateNotFound:
                              We couldn't find the Amazon EC2 launch template    for
                              your managed node group. You may be able to recreate
                              a launch template    with the same settings to recover.
                              \n    * Ec2LaunchTemplateVersionMismatch: The Amazon
                              EC2 launch template version    for your managed node
                              group does not match the version that Amazon EKS    created.
                              You may be able to revert to the version that Amazon
                              EKS created    to recover. \n    * IamInstanceProfileNotFound:
                              We couldn't find the IAM instance profile    for your
                              managed node group. You may be able to recreate an instance
                              profile    with the same settings to recover. \n    *
                              IamNodeRoleNotFound: We couldn't find the IAM role for
                              your managed    node group. You may be able to recreate
                              an IAM role with the same settings    to recover. \n
                              \   * AsgInstanceLaunchFailures: Your Auto Scaling group
                              is experiencing failures    while attempting to launch
                              instances. \n    * NodeCreationFailure: Your launched
                              instances are unable to register    with your Amazon
                              EKS cluster. Common causes of this failure are insufficient
                              \   worker node IAM role (https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html)
                              \   permissions or lack of outbound internet access
                              for the nodes. \n    * InstanceLimitExceeded: Your AWS
                              account is unable to launch any more    instances of
                              the specified instance type. You may be able to request
                              an    Amazon EC2 instance limit increase to recover.
                              \n    * InsufficientFreeAddresses: One or more of the
                              subnets associated with    your managed node group does
                              not have enough available IP addresses for    new nodes.
                              \n    * AccessDenied: Amazon EKS or one or more of your
                              managed nodes is unable    to communicate with your
                              cluster API server. \n    * InternalFailure: These errors
                              are usually caused by an Amazon EKS server-side    issue."
                            type: string
                          message:
                            description: The error message associated with the issue.
                            type: string
                          resourceIds:
                            description: The AWS resources that are afflicted by this
                              issue.
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  type: object
                resources:
                  description: The resources associated with the node group, such
                    as Auto Scaling groups and security groups for remote access.
                  properties:
                    autoScalingGroup:
                      description: The Auto Scaling groups associated with the node
                        group.
                      items:
                        description: AutoScalingGroup is an autoscaling group associated
                          with a NodeGroup.
                        properties:
                          name:
                            description: The name of the Auto Scaling group associated
                              with an Amazon EKS managed node group.
                            type: string
                        type: object
                      type: array
                    remoteAccessSecurityGroup:
                      description: The remote access security group associated with
                        the node group. This security group controls SSH access to
                        the worker nodes.
                      type: string
                  type: object
                status:
                  description: The current status of the managed node group.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: vpcs.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.cidrBlock
    name: CIDR
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VPC
    listKind: VPCList
    plural: vpcs
    singular: vpc
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A VPC is a managed resource that represents an AWS Virtual Private
        Cloud.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A VPCSpec defines the desired state of a VPC.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: VPCParameters define the desired state of an AWS Virtual
                Private Cloud.
              properties:
                cidrBlock:
                  description: CIDRBlock is the IPv4 network range for the VPC, in
                    CIDR notation. For example, 10.0.0.0/16.
                  type: string
                enableDnsHostNames:
                  description: Indicates whether the instances launched in the VPC
                    get DNS hostnames.
                  type: boolean
                enableDnsSupport:
                  description: A boolean flag to enable/disable DNS support in the
                    VPC
                  type: boolean
                instanceTenancy:
                  description: The allowed tenancy of instances launched into the
                    VPC.
                  type: string
                tags:
                  description: Tags are used as identification helpers between AWS
                    resources.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
              required:
              - cidrBlock
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A VPCStatus represents the observed state of a VPC.
          properties:
            atProvider:
              description: VPCObservation keeps the state for the external resource
              properties:
                cidrBlockAssociationSet:
                  description: Information about the IPv4 CIDR blocks associated with
                    the VPC.
                  items:
                    description: VPCCIDRBlockAssociation represents the association
                      of IPv4 CIDR blocks with the VPC.
                    properties:
                      associationId:
                        description: The association ID for the IPv4 CIDR block.
                        type: string
                      cidrBlock:
                        description: The IPv4 CIDR block.
                        type: string
                      cidrBlockState:
                        description: Information about the state of the CIDR block.
                        properties:
                          state:
                            description: The state of the CIDR block.
                            type: string
                          statusMessage:
                            description: A message about the status of the CIDR block,
                              if applicable.
                            type: string
                        type: object
                    type: object
                  type: array
                dhcpOptionsId:
                  description: The ID of the set of DHCP options you've associated
                    with the VPC.
                  type: string
                ipv6CidrBlockAssociationSet:
                  description: Information about the IPv6 CIDR blocks associated with
                    the VPC.
                  items:
                    description: VPCIPv6CidrBlockAssociation represents the association
                      of IPv6 CIDR blocks with the VPC.
                    properties:
                      associationId:
                        description: The association ID for the IPv6 CIDR block.
                        type: string
                      ipv6CidrBlock:
                        description: The IPv6 CIDR block.
                        type: string
                      ipv6CidrBlockState:
                        description: Information about the state of the CIDR block.
                        properties:
                          state:
                            description: The state of the CIDR block.
                            type: string
                          statusMessage:
                            description: A message about the status of the CIDR block,
                              if applicable.
                            type: string
                        type: object
                      ipv6Pool:
                        description: The ID of the IPv6 address pool from which the
                          IPv6 CIDR block is allocated.
                        type: string
                      networkBorderGroup:
                        description: The name of the location from which we advertise
                          the IPV6 CIDR block.
                        type: string
                    type: object
                  type: array
                isDefault:
                  description: Indicates whether the VPC is the default VPC.
                  type: boolean
                ownerId:
                  description: The ID of the AWS account that owns the VPC.
                  type: string
                vpcState:
                  description: VPCState is the current state of the VPC.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: s3buckets.storage.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.cannedACL
    name: PREDEFINED-ACL
    type: string
  - JSONPath: .spec.localPermission
    name: LOCAL-PERMISSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: S3Bucket
    listKind: S3BucketList
    plural: s3buckets
    singular: s3bucket
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An S3Bucket is a managed resource that represents an AWS S3 Bucket.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: S3BucketSpec defines the desired state of S3Bucket
          properties:
            cannedACL:
              description: CannedACL applies a standard AWS built-in ACL for common
                bucket use cases.
              enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - log-delivery-write
              - aws-exec-read
              type: string
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            iamUsername:
              description: IAMUsername is the name of an IAM user that is automatically
                created and granted access to this bucket by Crossplane at bucket
                creation time.
              type: string
            localPermission:
              description: LocalPermission is the permissions granted on the bucket
                for the provider specific bucket service account that is available
                in a secret after provisioning.
              enum:
              - Read
              - Write
              - ReadWrite
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region of the bucket.
              type: string
            versioning:
              description: Versioning enables versioning of objects stored in this
                bucket.
              type: boolean
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - localPermission
          - providerRef
          - region
          type: object
        status:
          description: S3BucketStatus defines the observed state of S3Bucket
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            lastLocalPermission:
              description: LastLocalPermission is the most recent local permission
                that was set for this bucket.
              type: string
            lastUserPolicyVersion:
              description: LastUserPolicyVersion is the most recent version of the
                policy associated with this bucket's IAMUser.
              type: integer
            providerID:
              description: ProviderID is the AWS identifier for this bucket.
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamroles.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMRole
    listKind: IAMRoleList
    plural: iamroles
    singular: iamrole
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMRole is a managed resource that represents an AWS IAM Role.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMRoleSpec defines the desired state of an IAMRole.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMRoleParameters define the desired state of an AWS IAM
                Role.
              properties:
                assumeRolePolicyDocument:
                  description: AssumeRolePolicyDocument is the the trust relationship
                    policy document that grants an entity permission to assume the
                    role.
                  type: string
                description:
                  description: Description is a description of the role.
                  type: string
                maxSessionDuration:
                  description: 'MaxSessionDuration is the duration (in seconds) that
                    you want to set for the specified role. The default maximum of
                    one hour is applied. This setting can have a value from 1 hour
                    to 12 hours. Default: 3600'
                  format: int64
                  type: integer
                path:
                  description: 'Path is the path to the role. Default: /'
                  type: string
                permissionsBoundary:
                  description: PermissionsBoundary is the ARN of the policy that is
                    used to set the permissions boundary for the role.
                  type: string
                tags:
                  description: Tags. For more information about tagging, see Tagging
                    IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                    in the IAM User Guide.
                  items:
                    description: Tag represents user-provided metadata that can be
                      associated with a IAM role. For more information about tagging,
                      see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                      in the IAM User Guide.
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value. For example, Department or Cost Center
                          are common choices.
                        type: string
                      value:
                        description: "The value associated with this tag. For example,
                          tags with a key name of Department could have values such
                          as Human Resources, Accounting, and Support. Tags with a
                          key name of Cost Center might have values that consist of
                          the number associated with the different cost centers in
                          your company. Typically, many resources have tags with the
                          same key name but with different values. \n AWS always interprets
                          the tag Value as a single string. If you need to store an
                          array, you can store comma-separated values in the string.
                          However, you must interpret the value in your code."
                        type: string
                    required:
                    - key
                    type: object
                  type: array
              required:
              - assumeRolePolicyDocument
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMRoleStatus represents the observed state of an IAMRole.
          properties:
            atProvider:
              description: IAMRoleExternalStatus keeps the state for the external
                resource
              properties:
                arn:
                  description: ARN is the Amazon Resource Name (ARN) specifying the
                    role. For more information about ARNs and how to use them in policies,
                    see IAM Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                    in the IAM User Guide guide.
                  type: string
                roleID:
                  description: RoleID is the stable and unique string identifying
                    the role. For more information about IDs, see IAM Identifiers
                    (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                    in the Using IAM guide.
                  type: string
              required:
              - arn
              - roleID
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamgroups.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.atProvider.groupId
    name: ID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMGroup
    listKind: IAMGroupList
    plural: iamgroups
    singular: iamgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMGroup is a managed resource that represents an AWS IAM IAMGroup.
        An IAMUser is a managed resource that represents an AWS IAM IAMUser.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMGroupSpec defines the desired state of an IAM Group.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMGroupParameters define the desired state of an AWS IAM
                Group.
              properties:
                path:
                  description: The path for the group name.
                  type: string
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: An IAMGroupStatus represents the observed state of an IAM Group.
          properties:
            atProvider:
              description: IAMGroupObservation keeps the state for the external resource
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) that identifies the
                    group.
                  type: string
                groupId:
                  description: The stable and unique string identifying the group.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: certificateauthoritypermissions.acmpca.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: acmpca.aws.crossplane.io
  names:
    kind: CertificateAuthorityPermission
    listKind: CertificateAuthorityPermissionList
    plural: certificateauthoritypermissions
    singular: certificateauthoritypermission
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CertificateAuthorityPermission is a managed resource that represents
        an AWS CertificateAuthorityPermission Manager.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CertificateAuthorityPermissionSpec defines the desired state
            of CertificateAuthorityPermission
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: CertificateAuthorityPermissionParameters defines the desired
                state of an AWS CertificateAuthority.
              properties:
                actions:
                  description: The actions that the specified AWS service principal
                    can use.
                  items:
                    type: string
                  type: array
                certificateAuthorityARN:
                  description: The Amazon Resource Name (ARN) of the private certificate
                    authority (CA)that will be used to issue the certificate.
                  type: string
                certificateAuthorityARNRef:
                  description: CertificateAuthorityARNRef references an CertificateAuthority
                    to retrieve its Arn
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                certificateAuthorityARNSelector:
                  description: CertificateAuthorityARNSelector selects a reference
                    to an CertificateAuthority to retrieve its Arn
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                principal:
                  description: The AWS Service or identity
                  type: string
                sourceAccount:
                  description: Calling Account ID
                  type: string
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An CertificateAuthorityPermissionStatus represents the observed
            state of an Certificate Authority Permission manager.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: dynamotables.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.tableName
    name: TABLE-NAME
    type: string
  - JSONPath: .status.atProvider.tableStatus
    name: TABLE-STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: DynamoTable
    listKind: DynamoTableList
    plural: dynamotables
    singular: dynamotable
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A DynamoTable is a managed resource that represents an AWS DynamoDB
        Table
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A DynamoTableSpec defines the desired state of a DynamoDB Table.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: DynamoTableParameters define the desired state of an AWS
                DynomoDBTable
              properties:
                attributeDefinitions:
                  description: An array of attributes that describe the key schema
                    for the table and indexes.
                  items:
                    description: AttributeDefinition  represents an attribute for
                      describing the key schema for the table and indexes.
                    properties:
                      attributeName:
                        description: A name for the attribute.
                        type: string
                      attributeType:
                        description: "The data type for the attribute, where: \n    *
                          S - the attribute is of type String \n    * N - the attribute
                          is of type Number \n    * B - the attribute is of type Binary"
                        type: string
                    required:
                    - attributeName
                    - attributeType
                    type: object
                  type: array
                globalSecondaryIndexes:
                  description: One or more global secondary indexes (the maximum is
                    20) to be created on the table.
                  items:
                    description: GlobalSecondaryIndex represents the properties of
                      a global secondary index.
                    properties:
                      indexName:
                        description: The name of the global secondary index. The name
                          must be unique among all
                        type: string
                      keySchema:
                        description: The complete key schema for a global secondary
                          index, which consists of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the global secondary index. These are
                          in addition to the primary key attributes and index key
                          attributes, which are automatically projected.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                      provisionedThroughput:
                        description: Represents the provisioned throughput settings
                          for the specified global secondary index.
                        properties:
                          readCapacityUnits:
                            description: The maximum number of strongly consistent
                              reads consumed per second before
                            format: int64
                            type: integer
                          writeCapacityUnits:
                            description: The maximum number of writes consumed per
                              second before DynamoDB returns a ThrottlingException.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  type: array
                keySchema:
                  description: KeySchema specifies the attributes that make up the
                    primary key for a table or an index.
                  items:
                    description: KeySchemaElement represents a single element of a
                      key schema which make up the primary key.
                    properties:
                      attributeName:
                        description: The name of a key attribute.
                        type: string
                      keyType:
                        description: 'The role that this key attribute will assume:'
                        type: string
                    required:
                    - attributeName
                    - keyType
                    type: object
                  type: array
                localSecondaryIndexes:
                  description: One or more local secondary indexes (the maximum is
                    5) to be created on the table.
                  items:
                    description: LocalSecondaryIndex represents the properties of
                      a local secondary index.
                    properties:
                      indexName:
                        description: The name of the local secondary index. The name
                          must be unique among all other indexes on this table.
                        type: string
                      keySchema:
                        description: The complete key schema for the local secondary
                          index, consisting of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the local secondary index.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                    type: object
                  type: array
                provisionedThroughput:
                  description: Represents the provisioned throughput settings for
                    a specified table or index.
                  properties:
                    readCapacityUnits:
                      description: The maximum number of strongly consistent reads
                        consumed per second before
                      format: int64
                      type: integer
                    writeCapacityUnits:
                      description: The maximum number of writes consumed per second
                        before DynamoDB returns a ThrottlingException.
                      format: int64
                      type: integer
                  type: object
                sseSpecification:
                  description: Represents the settings used to enable server-side
                    encryption.
                  properties:
                    SSEType:
                      description: Server-side encryption type.
                      type: string
                    enabled:
                      description: Indicates whether server-side encryption is done
                        using an AWS managed CMK or an AWS owned CMK.
                      type: boolean
                    kmsMasterKeyId:
                      description: The AWS KMS customer master key (CMK) that should
                        be used for the AWS KMS encryption.
                      type: string
                  type: object
                streamSpecification:
                  description: 'The stream settings for DynamoDB Streams on the table.
                    These settings consist of:'
                  properties:
                    StreamViewType:
                      description: When an item in the table is modified, StreamViewType
                        determines what information is written to the stream for this
                        table.
                      type: string
                    streamEnabled:
                      description: Indicates whether DynamoDB Streams is enabled (true)
                        or disabled (false) on the table.
                      type: boolean
                  type: object
                tag:
                  description: A list of key-value pairs to label the table.
                  items:
                    description: Tag represetnt a key-pair metadata assigned to a
                      DynamoDB Table
                    properties:
                      tag:
                        description: The key of the tag.
                        type: string
                      value:
                        description: The value of the tag.
                        type: string
                    required:
                    - tag
                    - value
                    type: object
                  type: array
              required:
              - attributeDefinitions
              - keySchema
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A DynamoTableStatus represents the observed state of a DynamoDB
            Table.
          properties:
            atProvider:
              description: DynamoTableObservation keeps the state for the external
                resource
              properties:
                attributeDefinitions:
                  description: An array of AttributeDefinition objects. Each of these
                    objects describes one attribute in the table and index key schema.
                  items:
                    description: AttributeDefinition  represents an attribute for
                      describing the key schema for the table and indexes.
                    properties:
                      attributeName:
                        description: A name for the attribute.
                        type: string
                      attributeType:
                        description: "The data type for the attribute, where: \n    *
                          S - the attribute is of type String \n    * N - the attribute
                          is of type Number \n    * B - the attribute is of type Binary"
                        type: string
                    required:
                    - attributeName
                    - attributeType
                    type: object
                  type: array
                globalSecondaryIndexes:
                  description: The global secondary indexes, if any, on the table.
                    Each index is scoped to a given partition key value.
                  items:
                    description: GlobalSecondaryIndex represents the properties of
                      a global secondary index.
                    properties:
                      indexName:
                        description: The name of the global secondary index. The name
                          must be unique among all
                        type: string
                      keySchema:
                        description: The complete key schema for a global secondary
                          index, which consists of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the global secondary index. These are
                          in addition to the primary key attributes and index key
                          attributes, which are automatically projected.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                      provisionedThroughput:
                        description: Represents the provisioned throughput settings
                          for the specified global secondary index.
                        properties:
                          readCapacityUnits:
                            description: The maximum number of strongly consistent
                              reads consumed per second before
                            format: int64
                            type: integer
                          writeCapacityUnits:
                            description: The maximum number of writes consumed per
                              second before DynamoDB returns a ThrottlingException.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  type: array
                globalTableVersion:
                  description: Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html)
                    in use, if the table is replicated across AWS Regions.
                  type: string
                itemCount:
                  description: The number of items in the specified table.
                  format: int64
                  type: integer
                keySchema:
                  description: 'The primary key structure for the table. Each KeySchemaElement
                    consists of:'
                  items:
                    description: KeySchemaElement represents a single element of a
                      key schema which make up the primary key.
                    properties:
                      attributeName:
                        description: The name of a key attribute.
                        type: string
                      keyType:
                        description: 'The role that this key attribute will assume:'
                        type: string
                    required:
                    - attributeName
                    - keyType
                    type: object
                  type: array
                localSecondaryIndexes:
                  description: Represents one or more local secondary indexes on the
                    table.
                  items:
                    description: LocalSecondaryIndex represents the properties of
                      a local secondary index.
                    properties:
                      indexName:
                        description: The name of the local secondary index. The name
                          must be unique among all other indexes on this table.
                        type: string
                      keySchema:
                        description: The complete key schema for the local secondary
                          index, consisting of one
                        items:
                          description: KeySchemaElement represents a single element
                            of a key schema which make up the primary key.
                          properties:
                            attributeName:
                              description: The name of a key attribute.
                              type: string
                            keyType:
                              description: 'The role that this key attribute will
                                assume:'
                              type: string
                          required:
                          - attributeName
                          - keyType
                          type: object
                        type: array
                      projection:
                        description: Represents attributes that are copied (projected)
                          from the table into the local secondary index.
                        properties:
                          keyType:
                            description: Represents the non-key attribute names which
                              will be projected into the index.
                            items:
                              type: string
                            type: array
                          projectionType:
                            description: 'The set of attributes that are projected
                              into the index:'
                            type: string
                        required:
                        - keyType
                        - projectionType
                        type: object
                    type: object
                  type: array
                provisionedThroughput:
                  description: The provisioned throughput settings for the table,
                    consisting of read and write capacity units, along with data about
                    increases and decreases.
                  properties:
                    readCapacityUnits:
                      description: The maximum number of strongly consistent reads
                        consumed per second before
                      format: int64
                      type: integer
                    writeCapacityUnits:
                      description: The maximum number of writes consumed per second
                        before DynamoDB returns a ThrottlingException.
                      format: int64
                      type: integer
                  type: object
                tableArn:
                  description: The Amazon Resource Name (ARN) that uniquely identifies
                    the table.
                  type: string
                tableId:
                  description: Unique identifier for the table for which the backup
                    was created.
                  type: string
                tableName:
                  description: Unique identifier for the table for which the backup
                    was created.
                  type: string
                tableStatus:
                  description: 'The current state of the table:'
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamuserpolicyattachments.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.userName
    name: USERNAME
    type: string
  - JSONPath: .spec.forProvider.policyArn
    name: POLICYARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMUserPolicyAttachment
    listKind: IAMUserPolicyAttachmentList
    plural: iamuserpolicyattachments
    singular: iamuserpolicyattachment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMUserPolicyAttachment is a managed resource that represents
        an AWS IAM User policy attachment.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMUserPolicyAttachmentSpec defines the desired state of
            an IAMUserPolicyAttachment.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMUserPolicyAttachmentParameters define the desired state
                of an AWS IAMUserPolicyAttachment.
              properties:
                policyArn:
                  description: PolicyARN is the Amazon Resource Name (ARN) of the
                    IAM policy you want to attach.
                  type: string
                policyArnRef:
                  description: PolicyARNRef references an IAMPolicy to retrieve its
                    Policy ARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                policyArnSelector:
                  description: PolicyARNSelector selects a reference to an IAMPolicy
                    to retrieve its Policy ARN
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                userName:
                  description: UserName presents the name of the IAMUser.
                  type: string
                userNameRef:
                  description: UserNameRef references to an IAMUser to retrieve its
                    userName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                userNameSelector:
                  description: UserNameSelector selects a reference to an IAMUser
                    to retrieve its userName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMUserPolicyAttachmentStatus represents the observed state
            of an IAMUserPolicyAttachment.
          properties:
            atProvider:
              description: IAMUserPolicyAttachmentObservation keeps the state for
                the external resource
              properties:
                attachedPolicyArn:
                  description: AttachedPolicyARN is the arn for the attached policy.
                    If nil, the policy is not yet attached
                  type: string
              required:
              - attachedPolicyArn
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: certificates.acm.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.domainName
    name: DOMAINNAME
    type: string
  - JSONPath: .status.atProvider.status
    name: STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: acm.aws.crossplane.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Certificate is a managed resource that represents an AWS Certificate
        Manager.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CertificateSpec defines the desired state of Certificate
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: CertificateParameters defines the desired state of an AWS
                Certificate.
              properties:
                certificateAuthorityARN:
                  description: The Amazon Resource Name (ARN) of the private certificate
                    authority (CA)that will be used to issue the certificate.
                  type: string
                certificateAuthorityARNRef:
                  description: CertificateAuthorityARNRef references an AWS ACMPCA
                    CertificateAuthority to retrieve its Arn
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                certificateAuthorityARNSelector:
                  description: CertificateAuthorityARNSelector selects a reference
                    to an AWS ACMPCA CertificateAuthority to retrieve its Arn
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                certificateTransparencyLoggingPreference:
                  description: Parameter add the certificate to a certificate transparency
                    log.
                  type: string
                domainName:
                  description: Fully qualified domain name (FQDN),that to secure with
                    an ACM certificate.
                  type: string
                domainValidationOptions:
                  description: The domain name that you want ACM to use to send you
                    emails so that you can validate domain ownership.
                  items:
                    description: DomainValidationOption validate domain ownership.
                    properties:
                      domainName:
                        description: Additinal Fully qualified domain name (FQDN),that
                          to secure with an ACM certificate.
                        type: string
                      validationDomain:
                        description: Method to validate certificate
                        type: string
                    required:
                    - domainName
                    - validationDomain
                    type: object
                  type: array
                renewCertificate:
                  description: Flag to renew the certificate
                  type: boolean
                subjectAlternativeNames:
                  description: Subject Alternative Name extension of the ACM certificate.
                  items:
                    type: string
                  type: array
                tags:
                  description: One or more resource tags to associate with the certificate.
                  items:
                    description: Tag represents user-provided metadata that can be
                      associated
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value.
                        type: string
                      value:
                        description: The value associated with this tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                validationMethod:
                  description: Method to validate certificate.
                  type: string
              required:
              - domainName
              - tags
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An CertificateStatus represents the observed state of an Certificate
            manager.
          properties:
            atProvider:
              description: CertificateExternalStatus keeps the state of external resource
              properties:
                certificateARN:
                  description: String that contains the ARN of the issued certificate.
                    This must be of the
                  type: string
                renewalEligibility:
                  description: Flag to check eligibility for renewal status
                  enum:
                  - ELIGIBLE
                  - INELIGIBLE
                  type: string
                status:
                  description: Status of the certificate
                  enum:
                  - PENDING_VALIDATION
                  - ISSUED
                  - INACTIVE
                  - EXPIRED
                  - VALIDATION_TIMED_OUT
                  - REVOKED
                  - FAILED
                  type: string
                type:
                  description: Type of the certificate
                  enum:
                  - IMPORTED
                  - AMAZON_ISSUED
                  - PRIVATE
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamgrouppolicyattachments.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.groupName
    name: GROUPNAME
    type: string
  - JSONPath: .spec.forProvider.policyArn
    name: POLICYARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    kind: IAMGroupPolicyAttachment
    listKind: IAMGroupPolicyAttachmentList
    plural: iamgrouppolicyattachments
    singular: iamgrouppolicyattachment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMGroupPolicyAttachment is a managed resource that represents
        an AWS IAM Group policy attachment.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMGroupPolicyAttachmentSpec defines the desired state of
            an IAMGroupPolicyAttachment.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMGroupPolicyAttachmentParameters define the desired state
                of an AWS IAMGroupPolicyAttachment.
              properties:
                groupName:
                  description: GroupName presents the name of the IAMGroup.
                  type: string
                groupNameRef:
                  description: GroupNameRef references to an IAMGroup to retrieve
                    its groupName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                groupNameSelector:
                  description: GroupNameSelector selects a reference to an IAMGroup
                    to retrieve its groupName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                policyArn:
                  description: PolicyARN is the Amazon Resource Name (ARN) of the
                    IAM policy you want to attach.
                  type: string
                policyArnRef:
                  description: PolicyARNRef references an IAMPolicy to retrieve its
                    Policy ARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                policyArnSelector:
                  description: PolicyARNSelector selects a reference to an IAMPolicy
                    to retrieve its Policy ARN
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMGroupPolicyAttachmentStatus represents the observed state
            of an IAMGroupPolicyAttachment.
          properties:
            atProvider:
              description: IAMGroupPolicyAttachmentObservation keeps the state for
                the external resource
              properties:
                attachedPolicyArn:
                  description: AttachedPolicyARN is the arn for the attached policy.
                    If nil, the policy is not yet attached
                  type: string
              required:
              - attachedPolicyArn
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: elbs.elasticloadbalancing.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ELBNAME
    type: string
  - JSONPath: .status.atProvider.dnsName
    name: DNSNAME
    type: string
  - JSONPath: .status.atProvider.vpcId
    name: VPCID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: elasticloadbalancing.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ELB
    listKind: ELBList
    plural: elbs
    singular: elb
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An ELB is a managed resource that represents an AWS Classic Load
        Balancer.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An ELBSpec defines the desired state of an ELB.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: ELBParameters define the desired state of an AWS ELB.
              properties:
                availabilityZones:
                  description: One or more Availability Zones from the same region
                    as the load balancer.
                  items:
                    type: string
                  type: array
                healthCheck:
                  description: Information about the health checks conducted on the
                    load balancer.
                  properties:
                    healthyThreshold:
                      description: The number of consecutive health checks successes
                        required before moving the instance to the Healthy state.
                      format: int64
                      type: integer
                    interval:
                      description: The approximate interval, in seconds, between health
                        checks of an individual instance.
                      format: int64
                      type: integer
                    target:
                      description: The instance being checked.
                      type: string
                    timeout:
                      description: The amount of time, in seconds, during which no
                        response means a failed health check.
                      format: int64
                      type: integer
                    unhealthyThreshold:
                      description: The number of consecutive health check failures
                        required before moving the instance to the Unhealthy state.
                      format: int64
                      type: integer
                  required:
                  - healthyThreshold
                  - interval
                  - target
                  - timeout
                  - unhealthyThreshold
                  type: object
                listeners:
                  description: The listeners for this ELB.
                  items:
                    description: Listener represents the port binding(s) between the
                      ELB and EC2 instances.
                    properties:
                      instancePort:
                        description: The port on which the instance is listening.
                        format: int64
                        type: integer
                      instanceProtocol:
                        description: 'The protocol to use for routing traffic to instances:
                          HTTP, HTTPS, TCP, or SSL. If not specified, the value is
                          same as for Protocol.'
                        type: string
                      loadBalancerPort:
                        description: The port on which the load balancer is listening.
                        format: int64
                        type: integer
                      protocol:
                        description: 'The load balancer transport protocol to use
                          for routing: HTTP, HTTPS, TCP, or SSL.'
                        type: string
                      sslCertificateId:
                        description: The Amazon Resource Name (ARN) of the server
                          certificate.
                        type: string
                    required:
                    - instancePort
                    - loadBalancerPort
                    - protocol
                    type: object
                  type: array
                scheme:
                  description: The type of a load balancer. Valid only for load balancers
                    in a VPC.
                  type: string
                securityGroupIdRefs:
                  description: SecurityGroupIDRefs references to a SecurityGroup and
                    retrieves its SecurityGroupID
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIdSelector:
                  description: SecurityGroupIDSelector selects a set of references
                    that each retrieve the SecurityGroupID from the referenced SecurityGroup
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: The IDs of the security groups to assign to the load
                    balancer.
                  items:
                    type: string
                  type: array
                subnetIdRefs:
                  description: SubnetRefs references to a Subnet to and retrieves
                    its SubnetID
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                subnetIdSelector:
                  description: SubnetSelector selects a set of references that each
                    retrieve the subnetID from the referenced Subnet
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                subnetIds:
                  description: The IDs of the subnets in your VPC to attach to the
                    load balancer. Specify one subnet per Availability Zone specified
                    in AvailabilityZones.
                  items:
                    type: string
                  type: array
                tags:
                  description: A list of tags to assign to the load balancer.
                  items:
                    description: Tag defines a key value pair that can be attached
                      to an ELB
                    properties:
                      key:
                        description: The key of the tag.
                        type: string
                      value:
                        description: The value of the tag.
                        type: string
                    required:
                    - key
                    type: object
                  type: array
              required:
              - listeners
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An ELBStatus represents the observed state of an ELB.
          properties:
            atProvider:
              description: ELBObservation keeps the state for the external resource
              properties:
                backendServerDescriptions:
                  description: Information about the EC2 instances for this ELB.
                  items:
                    description: BackendServerDescription provides information about
                      the instances attached to the ELB.
                    properties:
                      instancePort:
                        description: The port on which the EC2 instance is listening.
                        format: int64
                        type: integer
                      policyNames:
                        description: The names of the policies enabled for the EC2
                          instance.
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                canonicalHostedZoneName:
                  description: The DNS name of the load balancer.
                  type: string
                canonicalHostedZoneNameId:
                  description: The ID of the Amazon Route 53 hosted zone for the load
                    balancer.
                  type: string
                dnsName:
                  description: The DNS name of the load balancer.
                  type: string
                vpcId:
                  description: The ID of the VPC for the load balancer.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusters.redshift.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.atProvider.clusterStatus
    name: STATE
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: redshift.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Cluster is a managed resource that represents an AWS Redshift
        cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of an AWS Redshift Cluster.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: ClusterParameters define the parameters available for an
                AWS Redshift cluster
              properties:
                allowVersionUpgrade:
                  description: AllowVersionUpgrade indicates that major engine upgrades
                    are applied automatically to the cluster during the maintenance
                    window. default=true
                  type: boolean
                automatedSnapshotRetentionPeriod:
                  description: AutomatedSnapshotRetentionPeriod is the number of days
                    for which automated backups are retained. Setting this parameter
                    to a positive number enables backups. Setting this parameter to  0
                    disables automated backups. default=1
                  format: int64
                  maximum: 35
                  minimum: 0
                  type: integer
                availabilityZone:
                  description: 'AvailabilityZone is the EC2 Availability Zone in which
                    you want Amazon Redshift to provision the cluster. Default: A
                    random, system-chosen Availability Zone in the region that is
                    specified by the endpoint. Example: us-east-2d Constraint: The
                    specified Availability Zone must be in the same region as the
                    current endpoint. The Availability Zone parameter can''t be specified
                    if the MultiAZ parameter is set to true. The specified Availability
                    Zone must be in the same AWS Region as the current endpoint.'
                  type: string
                clusterParameterGroupName:
                  description: 'ClusterParameterGroupName is the name of the cluster
                    parameter group to use for the cluster. Default: The default Amazon
                    Redshift cluster parameter group. For information about the default
                    parameter group, go to Working with Amazon Redshift Parameter
                    Groups (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)'
                  type: string
                clusterSecurityGroupRefs:
                  description: ClusterSecurityGroupRefs are references to ClusterSecurityGroups
                    used to set the ClusterSecurityGroups.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                clusterSecurityGroupSelector:
                  description: ClusterSecurityGroupSelector selects references to
                    ClusterSecurityGroups used to set the ClusterSecurityGroups.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                clusterSecurityGroups:
                  description: 'SecurityGroups is a list of security groups to associate
                    with this cluster. Default: The default cluster security group
                    for Amazon Redshift.'
                  items:
                    type: string
                  type: array
                clusterSubnetGroupName:
                  description: ClusterSubnetGroupName is the name of a cluster subnet
                    group to be associated with this cluster. If this parameter is
                    not provided the resulting cluster will be deployed outside virtual
                    private cloud (VPC).
                  type: string
                clusterType:
                  description: ClusterType is the type of the cluster you want. When
                    cluster type is specified as    * single-node, the NumberOfNodes
                    parameter is not required.    * multi-node, the NumberOfNodes
                    parameter is required. default=multi-node
                  enum:
                  - multi-node
                  - single-node
                  type: string
                clusterVersion:
                  description: 'ClusterVersion is the version of the Amazon Redshift
                    engine software that you want to deploy on the cluster. The version
                    selected runs on all the nodes in the cluster. Constraints: Only
                    version 1.0 is currently available.'
                  type: string
                dbName:
                  description: 'DBName is the name of the first database to be created
                    when the cluster is created. To create additional databases after
                    the cluster is created, connect to the cluster with a SQL client
                    and use SQL commands to create a database. For more information,
                    go to Create a Database (https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html)
                    in the Amazon Redshift Database Developer Guide. Constraints:    *
                    Must contain 1 to 64 alphanumeric characters.    * Must contain
                    only lowercase letters.    * Cannot be a word that is reserved
                    by the service. A list of reserved    words can be found in Reserved
                    Words (https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html)    in
                    the Amazon Redshift Database Developer Guide. default=dev'
                  type: string
                elasticIP:
                  description: 'The Elastic IP (EIP) address for the cluster. Constraints:
                    The cluster must be provisioned in EC2-VPC and publicly-accessible
                    through an Internet gateway. For more information about provisioning
                    clusters in EC2-VPC, go to Supported Platforms to Launch Your
                    Cluster (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms)
                    in the Amazon Redshift Cluster Management Guide.'
                  type: string
                encrypted:
                  description: Encrypted defines whether your data in the cluster
                    will be encrypted at rest or not. default=false
                  type: boolean
                enhancedVPCRouting:
                  description: EnhancedVPCRouting specifies whether to create the
                    cluster with enhanced VPC routing enabled. To create a cluster
                    that uses enhanced VPC routing, the cluster must be in a VPC.
                    For more information, see Enhanced VPC Routing (https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html)
                    in the Amazon Redshift Cluster Management Guide. If this option
                    is true, enhanced VPC routing is enabled. default=false
                  type: boolean
                finalClusterSnapshotIdentifier:
                  description: 'FinalClusterSnapshotIdentifier is the identifier of
                    the final snapshot that is to be created immediately before deleting
                    the cluster. If this parameter is provided, SkipFinalClusterSnapshot
                    must be false. Constraints:    * Must be 1 to 255 alphanumeric
                    characters.    * First character must be a letter.    * Cannot
                    end with a hyphen or contain two consecutive hyphens.'
                  type: string
                finalClusterSnapshotRetentionPeriod:
                  description: FinalClusterSnapshotRetentionPeriod is the number of
                    days that a manual snapshot is retained. If the value is -1, the
                    manual snapshot is retained indefinitely. The value must be either
                    -1 or an integer between 1 and 3,653. default -1
                  format: int64
                  type: integer
                hsmClientCertificateIdentifier:
                  description: HSMClientCertificateIdentifier specifies the name of
                    the HSM client certificate the Amazon Redshift cluster uses to
                    retrieve the data encryption keys stored in an HSM.
                  type: string
                hsmConfigurationIdentifier:
                  description: HSMConfigurationIdentifier specifies the name of the
                    HSM configuration that contains the information the Amazon Redshift
                    cluster can use to retrieve and store keys in an HSM.
                  type: string
                iamRoleRefs:
                  description: IAMRoleRefs are references to IAMRoles used to set
                    the IAMRoles.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                iamRoleSelector:
                  description: IAMRoleSelector selects references to IAMRoles used
                    to set the IAMRoles.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                iamRoles:
                  description: IAMRoles is a list of AWS Identity and Access Management
                    (IAM) roles that can be used by the cluster to access other AWS
                    services. You must supply the IAM roles in their Amazon Resource
                    Name (ARN) format. You can supply up to 10 IAM roles in a single
                    request. A cluster can have up to 10 IAM roles associated with
                    it at any time. kubebuilder:validation:MaxItems=10
                  items:
                    type: string
                  type: array
                kmsKeyID:
                  description: KMSKeyID is the Amazon Resource Name (ARN) for the
                    KMS encryption key. If you are creating a cluster with the same
                    AWS account that owns the KMS encryption key used to encrypt the
                    new cluster, then you can use the KMS key alias instead of the
                    ARN for the KM encryption key.
                  type: string
                maintenanceTrackName:
                  description: MaintenanceTrackName an optional parameter for the
                    name of the maintenance track for the cluster.
                  type: string
                manualSnapshotRetentionPeriod:
                  description: ManualSnapshotRetentionPeriod is the default number
                    of days to retain a manual snapshot. If the value is -1, the snapshot
                    is retained indefinitely. This setting doesn't change the retention
                    period of existing snapshots. default=1
                  format: int64
                  maximum: 3653
                  type: integer
                masterUsername:
                  description: 'MasterUsername is the user name associated with the
                    master user account for the cluster that is being created. Constraints:    *
                    Must be 1 - 128 alphanumeric characters. The user name can''t
                    be PUBLIC.    * First character must be a letter.    * Cannot
                    be a reserved word. A list of reserved words can be found in    Reserved
                    Words (https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html)    in
                    the Amazon Redshift Database Developer Guide.'
                  type: string
                newClusterIdentifier:
                  description: NewClusterIdentifier is the new identifier you want
                    to use for the cluster.
                  type: string
                newMasterUserPassword:
                  description: 'NewMasterUserPassword is the new password to be associated
                    with the master user account for the cluster that has being created.
                    Set this value if you want to change the existing password of
                    the cluster. Constraints:    * Must be between 8 and 64 characters
                    in length.    * Must contain at least one uppercase letter.    *
                    Must contain at least one lowercase letter.    * Must contain
                    one number.    * Can be any printable ASCII character (ASCII code
                    33 to 126) except ''    (single quote), " (double quote), \, /,
                    @, or space.'
                  type: string
                nodeType:
                  description: NodeType is the node type defining it's size and compute
                    capacity to be provisioned for the cluster. For information about
                    node types, go to Working with Clusters (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes)
                    in the Amazon Redshift Cluster Management Guide.
                  enum:
                  - ds2.xlarge
                  - ds2.8xlarge
                  - dc1.large
                  - dc1.8xlarge
                  - dc2.large
                  - dc2.8xlarge
                  - ra3.4xlarge
                  - ra3.16xlarge
                  type: string
                numberOfNodes:
                  description: NumberOfNodes defines the number of compute nodes in
                    the cluster. This parameter is required when the ClusterType parameter
                    is specified as multi-node. For information about determining
                    how many nodes you need, go to Working with Clusters (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes)
                    in the Amazon Redshift Cluster Management Guide. If you don't
                    specify this parameter, you get a single-node cluster. When requesting
                    a multi-node cluster, you must specify the number of nodes that
                    you want in the cluster. default=1
                  format: int64
                  maximum: 100
                  minimum: 1
                  type: integer
                port:
                  description: Port specifies the port number on which the cluster
                    accepts incoming connections. The cluster is accessible only via
                    the JDBC and ODBC connection strings. Part of the connection string
                    requires the port on which the cluster will listen for incoming
                    connections. default=5439
                  format: int64
                  maximum: 65535
                  minimum: 1150
                  type: integer
                preferredMaintenanceWindow:
                  description: 'PreferredMaintenanceWindow is the weekly time range
                    (in UTC) during which automated cluster maintenance can occur.
                    Default: A 30-minute window selected at random from an 8-hour
                    block of time per region, occurring on a random day of the week.
                    For more information about the time blocks for each region, see
                    Maintenance Windows (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows)
                    in Amazon Redshift Cluster Management Guide. Constraints: Minimum
                    30-minute window.'
                  type: string
                publiclyAccessible:
                  description: PubliclyAccessible is to specify if the cluster can
                    be accessed from a public network.
                  type: boolean
                skipFinalClusterSnapshot:
                  description: 'SkipFinalClusterSnapshot determines whether a final
                    snapshot of the cluster is created before Amazon Redshift deletes
                    the cluster. If true, a final cluster snapshot is not created.
                    If false, a final cluster snapshot is created before the cluster
                    is deleted. The FinalClusterSnapshotIdentifier parameter must
                    be specified if SkipFinalClusterSnapshot is false. Default: false'
                  type: boolean
                snapshotScheduleIdentifier:
                  description: SnapshotScheduleIdentifier is a unique identifier for
                    the snapshot schedule.
                  type: string
                tags:
                  description: Tags indicates a list of tags for the clusters.
                  items:
                    description: Tag represetnt a key-pair metadata assigned to a
                      Redshift Cluster
                    properties:
                      tag:
                        description: The key of the tag.
                        type: string
                      value:
                        description: The value of the tag.
                        type: string
                    required:
                    - tag
                    - value
                    type: object
                  type: array
                vpcSecurityGroupIDRefs:
                  description: VPCSecurityGroupIDRefs are references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                vpcSecurityGroupIDSelector:
                  description: VPCSecurityGroupIDSelector selects references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                vpcSecurityGroupIds:
                  description: VPCSecurityGroupIDs a list of Virtual Private Cloud
                    (VPC) security groups to be associated with the cluster.
                  items:
                    type: string
                  type: array
              required:
              - masterUsername
              - nodeType
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: ClusterStatus represents the observed state of an AWS Redshift
            Cluster.
          properties:
            atProvider:
              description: ClusterObservation is the representation of the current
                state that is observed.
              properties:
                clusterAvailabilityStatus:
                  description: ClusterAvailabilityStatus is the availability status
                    of the cluster.
                  type: string
                clusterCreateTime:
                  description: ClusterCreateTime is the date and time that the cluster
                    was created.
                  format: date-time
                  type: string
                clusterNodes:
                  description: The nodes in the cluster.
                  items:
                    description: ClusterNode is the identifier of a node in a cluster.
                    properties:
                      nodeRole:
                        description: Whether the node is a leader node or a compute
                          node.
                        type: string
                      privateIPAddress:
                        description: The private IP address of a node within a cluster.
                        type: string
                      publicIPAddress:
                        description: The public IP address of a node within a cluster.
                        type: string
                    type: object
                  type: array
                clusterParameterGroups:
                  description: The list of cluster parameter groups that are associated
                    with this cluster. Each parameter group in the list is returned
                    with its status.
                  items:
                    description: ClusterParameterGroupStatus is the status of the
                      Cluster parameter group.
                    properties:
                      clusterParameterStatusList:
                        description: "The list of parameter statuses. \n For more
                          information about parameters and parameter groups, go to
                          Amazon Redshift Parameter Groups (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)
                          in the Amazon Redshift Cluster Management Guide."
                        items:
                          description: ClusterParameterStatus describes the status
                            of a Cluster parameter.
                          properties:
                            parameterApplyErrorDescription:
                              description: The error that prevented the parameter
                                from being applied to the database.
                              type: string
                            parameterApplyStatus:
                              description: "The status of the parameter that indicates
                                whether the parameter is in sync with the database,
                                waiting for a cluster reboot, or encountered an error
                                when being applied. \n The following are possible
                                statuses and descriptions. \n    * in-sync: The parameter
                                value is in sync with the database. \n    * pending-reboot:
                                The parameter value will be applied after the cluster
                                \   reboots. \n    * applying: The parameter value
                                is being applied to the database. \n    * invalid-parameter:
                                Cannot apply the parameter value because it has an
                                \   invalid value or syntax. \n    * apply-deferred:
                                The parameter contains static property changes. The
                                \   changes are deferred until the cluster reboots.
                                \n    * apply-error: Cannot connect to the cluster.
                                The parameter change will    be applied after the
                                cluster reboots. \n    * unknown-error: Cannot apply
                                the parameter change right now. The change    will
                                be applied after the cluster reboots."
                              type: string
                            parameterName:
                              description: The name of the parameter.
                              type: string
                          type: object
                        type: array
                      parameterApplyStatus:
                        description: The status of parameter updates.
                        type: string
                      parameterGroupName:
                        description: The name of the cluster parameter group.
                        type: string
                    type: object
                  type: array
                clusterPublicKey:
                  description: The public key for the cluster.
                  type: string
                clusterRevisionNumber:
                  description: The specific revision number of the database in the
                    cluster.
                  type: string
                clusterSnapshotCopyStatus:
                  description: A value that returns the destination region and retention
                    period that are configured for cross-region snapshot copy.
                  properties:
                    destinationRegion:
                      description: The destination region that snapshots are automatically
                        copied to when cross-region snapshot copy is enabled.
                      type: string
                    manualSnapshotRetentionPeriod:
                      description: "The number of days that automated snapshots are
                        retained in the destination region after they are copied from
                        a source region. If the value is -1, the manual snapshot is
                        retained indefinitely. \n The value must be either -1 or an
                        integer between 1 and 3,653."
                      format: int64
                      type: integer
                    retentionPeriod:
                      description: The number of days that automated snapshots are
                        retained in the destination region after they are copied from
                        a source region.
                      format: int64
                      type: integer
                    snapshotCopyGrantName:
                      description: The name of the snapshot copy grant.
                      type: string
                  type: object
                clusterStatus:
                  description: ClusterStatus is the current state of the cluster.
                  type: string
                dataTransferProgress:
                  description: Describes the status of a cluster while it is in the
                    process of resizing with an incremental resize.
                  properties:
                    currentRateInMegaBytesPerSecond:
                      description: Describes the data transfer rate in MB's per second.
                      type: integer
                    dataTransferredInMegaBytes:
                      description: Describes the total amount of data that has been
                        transferred in MB's.
                      format: int64
                      type: integer
                    elapsedTimeInSeconds:
                      description: Describes the number of seconds that have elapsed
                        during the data transfer.
                      format: int64
                      type: integer
                    estimatedTimeToCompletionInSeconds:
                      description: Describes the estimated number of seconds remaining
                        to complete the transfer.
                      format: int64
                      type: integer
                    status:
                      description: Describes the status of the cluster. While the
                        transfer is in progress the status is transferringdata.
                      type: string
                    totalDataInMegaBytes:
                      description: Describes the total amount of data to be transferred
                        in megabytes.
                      format: int64
                      type: integer
                  type: object
                deferredMaintenanceWindows:
                  description: Describes a group of DeferredMaintenanceWindow objects.
                  items:
                    description: DeferredMaintenanceWindow describes a deferred maintenance
                      window
                    properties:
                      deferMaintenanceEndTime:
                        description: A timestamp for the end of the time period when
                          we defer maintenance.
                        format: date-time
                        type: string
                      deferMaintenanceIdentifier:
                        description: A unique identifier for the maintenance window.
                        type: string
                      deferMaintenanceStartTime:
                        description: A timestamp for the beginning of the time period
                          when we defer maintenance.
                        format: date-time
                        type: string
                    type: object
                  type: array
                elasticIPStatus:
                  description: The status of the elastic IP (EIP) address.
                  properties:
                    elasticIP:
                      description: The elastic IP (EIP) address for the cluster.
                      type: string
                    status:
                      description: The status of the elastic IP (EIP) address.
                      type: string
                  type: object
                elasticResizeNumberOfNodeOptions:
                  description: The number of nodes that you can resize the cluster
                    to with the elastic resize method.
                  type: string
                endpoint:
                  description: Endpoint specifies the connection endpoint.
                  properties:
                    address:
                      description: Address specifies the DNS address of the cluster.
                      type: string
                    port:
                      description: Port specifies the port that the database engine
                        is listening on.
                      format: int64
                      type: integer
                  type: object
                expectedNextSnapshotScheduleTime:
                  description: The date and time when the next snapshot is expected
                    to be taken for clusters with a valid snapshot schedule and backups
                    enabled.
                  format: date-time
                  type: string
                expectedNextSnapshotScheduleTimeStatus:
                  description: "The status of next expected snapshot for clusters
                    having a valid snapshot schedule and backups enabled. Possible
                    values are the following: \n    * OnTrack - The next snapshot
                    is expected to be taken on time. \n    * Pending - The next snapshot
                    is pending to be taken."
                  type: string
                hsmStatus:
                  description: "A value that reports whether the Amazon Redshift cluster
                    has finished applying any hardware security module (HSM) settings
                    changes specified in a modify cluster command. \n Values: active,
                    applying"
                  properties:
                    hsmClientCertificateIdentifier:
                      description: Specifies the name of the HSM client certificate
                        the Amazon Redshift cluster uses to retrieve the data encryption
                        keys stored in an HSM.
                      type: string
                    hsmConfigurationIdentifier:
                      description: Specifies the name of the HSM configuration that
                        contains the information the Amazon Redshift cluster can use
                        to retrieve and store keys in an HSM.
                      type: string
                    status:
                      description: "Reports whether the Amazon Redshift cluster has
                        finished applying any HSM settings changes specified in a
                        modify cluster command. \n Values: active, applying"
                      type: string
                  type: object
                modifyStatus:
                  description: The status of a modify operation, if any, initiated
                    for the cluster.
                  type: string
                nextMaintenanceWindowStartTime:
                  description: The date and time in UTC when system maintenance can
                    begin.
                  format: date-time
                  type: string
                pendingActions:
                  description: Cluster operations that are waiting to be started.
                  items:
                    type: string
                  type: array
                snapshotScheduleState:
                  description: The current state of the cluster snapshot schedule.
                  type: string
                vpcId:
                  description: The identifier of the VPC the cluster is in, if the
                    cluster is in a VPC.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: queues.applicationintegration.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: QUEUENAME
    type: string
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: applicationintegration.aws.crossplane.io
  names:
    kind: Queue
    listKind: QueueList
    plural: queues
    singular: queue
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Queue is a managed resource that represents a AWS Simple Queue
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: QueueSpec defines the desired state of a Queue.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: QueueParameters define the desired state of an AWS Queue
              properties:
                delaySeconds:
                  description: The length of time, in seconds, for which the delivery
                    of all messages in the queue is delayed.
                  format: int64
                  type: integer
                fifoQueue:
                  description: Designates a queue as FIFO.
                  type: boolean
                kmsDataKeyReusePeriodSeconds:
                  description: The length of time, in seconds, for which Amazon SQS
                    can reuse a data key to encrypt or decrypt messages before calling
                    AWS KMS again.
                  format: int64
                  type: integer
                kmsMasterKeyId:
                  description: The ID of an AWS-managed customer master key (CMK)
                    for Amazon SQS or a custom CMK.
                  type: string
                maximumMessageSize:
                  description: The limit of how many bytes a message can contain before
                    Amazon SQS rejects it.
                  format: int64
                  type: integer
                messageRetentionPeriod:
                  description: The length of time, in seconds, for which Amazon SQS
                    retains a message.
                  format: int64
                  type: integer
                receiveMessageWaitTimeSeconds:
                  description: The length of time, in seconds, for which a ReceiveMessage
                    action waits for a message to arrive.
                  format: int64
                  type: integer
                redrivePolicy:
                  description: RedrivePolicy includes the parameters for the dead-letter
                    queue functionality of the source queue.
                  properties:
                    deadLetterQueueARN:
                      description: The Amazon Resource Name (ARN) of the dead-letter
                        queue to which Amazon SQS moves messages after the value of
                        maxReceiveCount is exceeded.
                      type: string
                    maxReceiveCount:
                      description: The number of times a message is delivered to the
                        source queue before being moved to the dead-letter queue.
                      format: int64
                      type: integer
                  type: object
                tags:
                  description: Tags add cost allocation tags to the specified Amazon
                    SQS queue.
                  items:
                    description: Tag is a key value pairs attached to a Amazon SQS
                      queue.
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value.
                        type: string
                      value:
                        description: The value associated with a key in a tag.
                        type: string
                    required:
                    - key
                    type: object
                  type: array
                visibilityTimeout:
                  description: The visibility timeout for the queue, in seconds.
                  format: int64
                  type: integer
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: QueueStatus represents the observed state of a Queue.
          properties:
            atProvider:
              description: QueueObservation is the representation of the current state
                that is observed
              properties:
                arn:
                  description: The Amazon resource name (ARN) of the queue.
                  type: string
                url:
                  description: The URL of the created Amazon SQS queue.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: providers.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.region
    name: REGION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  - JSONPath: .spec.credentialsSecretRef.name
    name: SECRET-NAME
    priority: 1
    type: string
  group: aws.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - aws
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A Provider configures an AWS 'provider', i.e. a connection to a
        particular AWS account using a particular AWS IAM role.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ProviderSpec defines the desired state of a Provider.
          properties:
            credentialsSecretRef:
              description: CredentialsSecretRef references a specific secret's key
                that contains the credentials that are used to connect to the provider.
              properties:
                key:
                  description: The key to select.
                  type: string
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - key
              - name
              - namespace
              type: object
            region:
              description: Region for managed resources created using this AWS provider.
              type: string
            useServiceAccount:
              description: "UseServiceAccount indicates to use an IAM Role associated
                Kubernetes ServiceAccount for authentication instead of a credentials
                Secret. https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
                \n If set to true, credentialsSecretRef will be ignored."
              type: boolean
          required:
          - region
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusters.eks.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: eks.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Cluster is a managed resource that represents an AWS Elastic
        Kubernetes Service cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ClusterSpec defines the desired state of an EKS Cluster.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: ClusterParameters define the desired state of an AWS Elastic
                Kubernetes Service cluster.
              properties:
                encryptionConfig:
                  description: The encryption configuration for the cluster.
                  items:
                    description: EncryptionConfig is the encryption configuration
                      for a cluster.
                    properties:
                      provider:
                        description: AWS Key Management Service (AWS KMS) customer
                          master key (CMK). Either the ARN or the alias can be used.
                        properties:
                          keyArn:
                            description: Amazon Resource Name (ARN) or alias of the
                              customer master key (CMK). The CMK must be symmetric,
                              created in the same region as the cluster, and if the
                              CMK was created in a different account, the user must
                              have access to the CMK. For more information, see Allowing
                              Users in Other Accounts to Use a CMK (https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html)
                              in the AWS Key Management Service Developer Guide.
                            type: string
                        required:
                        - keyArn
                        type: object
                      resources:
                        description: Specifies the resources to be encrypted. The
                          only supported value is "secrets".
                        items:
                          type: string
                        type: array
                    required:
                    - provider
                    - resources
                    type: object
                  type: array
                logging:
                  description: "Enable or disable exporting the Kubernetes control
                    plane logs for your cluster to CloudWatch Logs. By default, cluster
                    control plane logs aren't exported to CloudWatch Logs. For more
                    information, see Amazon EKS Cluster Control Plane Logs (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
                    in the Amazon EKS User Guide . \n CloudWatch Logs ingestion, archive
                    storage, and data scanning rates apply to exported control plane
                    logs. For more information, see Amazon CloudWatch Pricing (http://aws.amazon.com/cloudwatch/pricing/)."
                  properties:
                    clusterLogging:
                      description: The cluster control plane logging configuration
                        for your cluster.
                      items:
                        description: LogSetup specifies the logging types that are
                          enabled.
                        properties:
                          enabled:
                            description: If a log type is enabled, that log type exports
                              its control plane logs to CloudWatch Logs. If a log
                              type isn't enabled, that log type doesn't export its
                              control plane logs. Each individual log type can be
                              enabled or disabled independently.
                            type: boolean
                          types:
                            description: The available cluster control plane log types.
                            items:
                              description: LogType is a type of logging.
                              type: string
                            type: array
                        type: object
                      type: array
                  required:
                  - clusterLogging
                  type: object
                resourcesVpcConfig:
                  description: "The VPC configuration used by the cluster control
                    plane. Amazon EKS VPC resources have specific requirements to
                    work properly with Kubernetes. For more information, see Cluster
                    VPC Considerations (https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html)
                    and Cluster Security Group Considerations (https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
                    in the Amazon EKS User Guide. You must specify at least two subnets.
                    You can specify up to five security groups, but we recommend that
                    you use a dedicated security group for your cluster control plane.
                    \n ResourcesVpcConfig is a required field"
                  properties:
                    endpointPrivateAccess:
                      description: Set this value to true to enable private access
                        for your cluster's Kubernetes API server endpoint. If you
                        enable private access, Kubernetes API requests from within
                        your cluster's VPC use the private VPC endpoint. The default
                        value for this parameter is false, which disables private
                        access for your Kubernetes API server. For more information,
                        see Amazon EKS Cluster Endpoint Access Control (https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
                        in the Amazon EKS User Guide.
                      type: boolean
                    endpointPublicAccess:
                      description: Set this value to false to disable public access
                        for your cluster's Kubernetes API server endpoint. If you
                        disable public access, your cluster's Kubernetes API server
                        can receive only requests from within the cluster VPC. The
                        default value for this parameter is true, which enables public
                        access for your Kubernetes API server. For more information,
                        see Amazon EKS Cluster Endpoint Access Control (https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
                        in the Amazon EKS User Guide.
                      type: boolean
                    publicAccessCidrs:
                      description: The CIDR blocks that are allowed access to your
                        cluster's public Kubernetes API server endpoint. Communication
                        to the endpoint from addresses outside of the CIDR blocks
                        that you specify is denied. The default value is 0.0.0.0/0.
                        If you've disabled private endpoint access and you have worker
                        nodes or AWS Fargate pods in the cluster, then ensure that
                        you specify the necessary CIDR blocks. For more information,
                        see Amazon EKS Cluster Endpoint Access Control (https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
                        in the Amazon EKS User Guide.
                      items:
                        type: string
                      type: array
                    securityGroupIdRefs:
                      description: SecurityGroupIDRefs are references to SecurityGroups
                        used to set the SecurityGroupIDs.
                      items:
                        description: A Reference to a named object.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    securityGroupIdSelector:
                      description: SecurityGroupIDSelector selects references to SecurityGroups
                        used to set the SecurityGroupIDs.
                      properties:
                        matchControllerRef:
                          description: MatchControllerRef ensures an object with the
                            same controller reference as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching
                            labels is selected.
                          type: object
                      type: object
                    securityGroupIds:
                      description: Specify one or more security groups for the cross-account
                        elastic network interfaces that Amazon EKS creates to use
                        to allow communication between your worker nodes and the Kubernetes
                        control plane. If you don't specify a security group, the
                        default security group for your VPC is used.
                      items:
                        type: string
                      type: array
                    subnetIdRefs:
                      description: SubnetIDRefs are references to Subnets used to
                        set the SubnetIDs.
                      items:
                        description: A Reference to a named object.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    subnetIdSelector:
                      description: SubnetIDSelector selects references to Subnets
                        used to set the SubnetIDs.
                      properties:
                        matchControllerRef:
                          description: MatchControllerRef ensures an object with the
                            same controller reference as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching
                            labels is selected.
                          type: object
                      type: object
                    subnetIds:
                      description: Specify subnets for your Amazon EKS worker nodes.
                        Amazon EKS creates cross-account elastic network interfaces
                        in these subnets to allow communication between your worker
                        nodes and the Kubernetes control plane.
                      items:
                        type: string
                      type: array
                  type: object
                roleArn:
                  description: "The Amazon Resource Name (ARN) of the IAM role that
                    provides permissions for Amazon EKS to make calls to other AWS
                    API operations on your behalf. For more information, see Amazon
                    EKS Service IAM Role (https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html)
                    in the Amazon EKS User Guide . \n RoleArn is a required field"
                  type: string
                roleArnRef:
                  description: RoleArnRef is a reference to an IAMRole used to set
                    the RoleArn.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                roleArnSelector:
                  description: RoleArnSelector selects references to IAMRole used
                    to set the RoleArn.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                tags:
                  additionalProperties:
                    type: string
                  description: The metadata to apply to the cluster to assist with
                    categorization and organization. Each tag consists of a key and
                    an optional value, both of which you define.
                  type: object
                version:
                  description: 'The desired Kubernetes version for your cluster. If
                    you don''t specify a value here, the latest version available
                    in Amazon EKS is used. Example: 1.15'
                  type: string
              required:
              - resourcesVpcConfig
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A ClusterStatus represents the observed state of an EKS Cluster.
          properties:
            atProvider:
              description: ClusterObservation is the observed state of a cluster.
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) of the cluster.
                  type: string
                createdAt:
                  description: The Unix epoch timestamp in seconds for when the cluster
                    was created.
                  format: date-time
                  type: string
                endpoint:
                  description: The endpoint for your Kubernetes API server.
                  type: string
                identity:
                  description: The identity provider information for the cluster.
                  properties:
                    oidc:
                      description: The OpenID Connect (https://openid.net/connect/)
                        identity provider information for the cluster.
                      properties:
                        issuer:
                          description: The issuer URL for the OpenID Connect identity
                            provider.
                          type: string
                      type: object
                  type: object
                platformVersion:
                  description: The platform version of your Amazon EKS cluster. For
                    more information, see Platform Versions (https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html)
                    in the Amazon EKS User Guide .
                  type: string
                resourcesVpcConfig:
                  description: The VPC configuration used by the cluster control plane.
                    Amazon EKS VPC resources have specific requirements to work properly
                    with Kubernetes. For more information, see Cluster VPC Considerations
                    (https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html)
                    and Cluster Security Group Considerations (https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
                    in the Amazon EKS User Guide.
                  properties:
                    clusterSecurityGroupId:
                      description: The cluster security group that was created by
                        Amazon EKS for the cluster. Managed node groups use this security
                        group for control-plane-to-data-plane communication.
                      type: string
                    vpcId:
                      description: The VPC associated with your cluster.
                      type: string
                  type: object
                status:
                  description: The current status of the cluster.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: elbattachments.elasticloadbalancing.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.elbName
    name: ELBNAME
    type: string
  - JSONPath: .spec.forProvider.instanceId
    name: INSTANCEID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: elasticloadbalancing.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ELBAttachment
    listKind: ELBAttachmentList
    plural: elbattachments
    singular: elbattachment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An ELBAttachment is a managed resource that represents attachment
        of an AWS Classic Load Balancer and an AWS EC2 instance.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An ELBAttachmentSpec defines the desired state of an ELBAttachment.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: ELBAttachmentParameters define the desired state of an
                AWS ELBAttachment.
              properties:
                elbName:
                  description: Name of the Elastic Load Balancer to which the instances
                    will attach.
                  type: string
                elbNameRef:
                  description: ELBNameRef references an ELB to and retrieves its external-name.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                elbNameSelector:
                  description: ELBNameSelector selects a reference to a ELB to and
                    retrieves its external-name.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                instanceId:
                  description: List of identities of the instances to be attached.
                  type: string
              required:
              - instanceId
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An ELBAttachmentStatus represents the observed state of an
            ELBAttachmentAttachment.
          properties:
            atProvider:
              description: ELBAttachmentObservation keeps the state for the external
                resource
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamusers.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.atProvider.userId
    name: ID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMUser
    listKind: IAMUserList
    plural: iamusers
    singular: iamuser
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMUser is a managed resource that represents an AWS IAM IAMUser.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMUserSpec defines the desired state of an IAM User.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMUserParameters define the desired state of an AWS IAM
                User.
              properties:
                path:
                  description: The path for the user name.
                  type: string
                permissionsBoundary:
                  description: The ARN of the policy that is used to set the permissions
                    boundary for the user.
                  type: string
                tags:
                  description: A list of tags that you want to attach to the newly
                    created user.
                  items:
                    description: Tag represents a tag attached to a v1alpha1.User
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value.
                        type: string
                      value:
                        description: The value associated with this tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMUserStatus represents the observed state of an IAM User.
          properties:
            atProvider:
              description: IAMUserObservation keeps the state for the external resource
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) that identifies the
                    user.
                  type: string
                userId:
                  description: The stable and unique string identifying the user.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: eksclusterclasses.compute.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: EKSClusterClass
    listKind: EKSClusterClassList
    plural: eksclusterclasses
    singular: eksclusterclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An EKSClusterClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            EKSCluster.
          properties:
            cloudformationStackId:
              description: CloudFormationStackID of the Stack used to create node
                groups.
              type: string
            clusterVersion:
              description: 'ClusterVersion: The desired Kubernetes version of this
                EKS Cluster. If you do not specify a value here, the latest version
                available is used.'
              type: string
            mapRoles:
              description: MapRoles map AWS roles to one or more Kubernetes groups.
                A Default role that allows nodes access to communicate with master
                is autogenerated when a node pool comes online.
              items:
                description: MapRole maps an AWS IAM role to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the RoleARN should map to.
                    items:
                      type: string
                    type: array
                  rolearn:
                    description: RoleARN to match, e.g. 'arn:aws:iam::000000000000:role/KubernetesNode'.
                    type: string
                  username:
                    description: Username (in Kubernetes) the RoleARN should map to.
                    type: string
                required:
                - groups
                - rolearn
                - username
                type: object
              type: array
            mapUsers:
              description: MapUsers map AWS users to one or more Kubernetes groups.
              items:
                description: MapUser maps an AWS IAM user to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the UserARN should map to.
                    items:
                      type: string
                    type: array
                  userarn:
                    description: UserARN to match, e.g. 'arn:aws:iam::000000000000:user/Alice'
                    type: string
                  username:
                    description: Username (in Kubernetes) the UserARN should map to.
                    type: string
                required:
                - groups
                - userarn
                - username
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region for this EKS Cluster.
              type: string
            roleARN:
              description: 'RoleARN: The Amazon Resource Name (ARN) of the IAM role
                that provides permis sions for Amazon EKS to make calls to other AWS  API  operations
                on your behalf. For more information, see ''Amazon EKS Service IAM
                Role'' in the Amazon EKS User Guide.'
              type: string
            roleARNRef:
              description: RoleARNRef references to an IAMRole to retrieve its ARN
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            roleARNSelector:
              description: RoleARNSelector selects a reference to an IAMRole
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIdRefs:
              description: SecurityGroupIDRefs is a set of referencers that each retrieve
                the ID from the referenced SecurityGroup
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            securityGroupIdSelector:
              description: SecurityGroupIDSelector selects a set of references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIds:
              description: SecurityGroupIDs of this EKS cluster.
              items:
                type: string
              type: array
            subnetIdRefs:
              description: SubnetIDRefs is a set of referencers that each retrieve
                the subnetID from the referenced Subnet
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            subnetIdSelector:
              description: SubnetIDSelector selects a set of Subnet references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            subnetIds:
              description: SubnetIDs of this EKS cluster.
              items:
                type: string
              type: array
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references to a VPC to retrieve its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            workerNodes:
              description: WorkerNodes configuration for cloudformation
              properties:
                bootstrapArguments:
                  description: BootstrapArguments to pass to the bootstrap script.
                    See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
                  type: string
                clusterControlPlaneSecurityGroup:
                  description: ClusterControlPlaneSecurityGroup configures the security
                    group of the cluster control plane in order to allow communication
                    to this node group.
                  type: string
                clusterControlPlaneSecurityGroupRef:
                  description: ClusterControlPlaneSecurityGroupRef references a SecurityGroup
                    to retrieve its ID
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                clusterControlPlaneSecurityGroupSelector:
                  description: ClusterControlPlaneSecurityGroupSelector selects a
                    SecurityGroup
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                keyName:
                  description: KeyName of the EC2 Key Pair to allow SSH access to
                    the EC2 instances.
                  type: string
                nodeAutoScalingGroupMaxSize:
                  description: NodeAutoScalingGroupMaxSize configures the maximum
                    size of this node group's Autoscaling Group. Defaults to 3.
                  type: integer
                nodeAutoScalingGroupMinSize:
                  description: NodeAutoScalingGroupMinSize configures the minimum
                    size of this node group's Autoscaling Group. Defaults to 1.
                  type: integer
                nodeGroupName:
                  description: NodeGroupName is a unique identifier for the Node Group.
                  type: string
                nodeImageId:
                  description: NodeImageId that the EC2 instances should run. Defaults
                    to the region's standard AMI.
                  type: string
                nodeInstanceType:
                  description: NodeInstanceType of the EC2 instances.
                  enum:
                  - t2.small
                  - t2.medium
                  - t2.large
                  - t2.xlarge
                  - t2.2xlarge
                  - t3.nano
                  - t3.micro
                  - t3.small
                  - t3.medium
                  - t3.large
                  - t3.xlarge
                  - t3.2xlarge
                  - m3.medium
                  - m3.large
                  - m3.xlarge
                  - m3.2xlarge
                  - m4.large
                  - m4.xlarge
                  - m4.2xlarge
                  - m4.4xlarge
                  - m4.10xlarge
                  - m5.large
                  - m5.xlarge
                  - m5.2xlarge
                  - m5.4xlarge
                  - m5.12xlarge
                  - m5.24xlarge
                  - c4.large
                  - c4.xlarge
                  - c4.2xlarge
                  - c4.4xlarge
                  - c4.8xlarge
                  - c5.large
                  - c5.xlarge
                  - c5.2xlarge
                  - c5.4xlarge
                  - c5.9xlarge
                  - c5.18xlarge
                  - i3.large
                  - i3.xlarge
                  - i3.2xlarge
                  - i3.4xlarge
                  - i3.8xlarge
                  - i3.16xlarge
                  - r3.xlarge
                  - r3.2xlarge
                  - r3.4xlarge
                  - r3.8xlarge
                  - r4.large
                  - r4.xlarge
                  - r4.2xlarge
                  - r4.4xlarge
                  - r4.8xlarge
                  - r4.16xlarge
                  - x1.16xlarge
                  - x1.32xlarge
                  - p2.xlarge
                  - p2.8xlarge
                  - p2.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p3.16xlarge
                  - r5.large
                  - r5.xlarge
                  - r5.2xlarge
                  - r5.4xlarge
                  - r5.12xlarge
                  - r5.24xlarge
                  - r5d.large
                  - r5d.xlarge
                  - r5d.2xlarge
                  - r5d.4xlarge
                  - r5d.12xlarge
                  - r5d.24xlarge
                  - z1d.large
                  - z1d.xlarge
                  - z1d.2xlarge
                  - z1d.3xlarge
                  - z1d.6xlarge
                  - z1d.12xlarge
                  type: string
                nodeVolumeSize:
                  description: NodeVolumeSize configures the volume size in GB. Defaults
                    to 20.
                  type: integer
              required:
              - nodeInstanceType
              type: object
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - providerRef
          - region
          - workerNodes
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: securitygroups.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.vpcId
    name: VPC
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: SecurityGroup
    listKind: SecurityGroupList
    plural: securitygroups
    singular: securitygroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A SecurityGroup is a managed resource that represents an AWS VPC
        Security Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SecurityGroupSpec defines the desired state of a SecurityGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: SecurityGroupParameters define the desired state of an
                AWS VPC Security Group.
              properties:
                description:
                  description: A description of the security group.
                  type: string
                egress:
                  description: '[EC2-VPC] One or more outbound rules associated with
                    the security group.'
                  items:
                    description: IPPermission Describes a set of permissions for a
                      security group rule.
                    properties:
                      fromPort:
                        description: The start of port range for the TCP and UDP protocols,
                          or an ICMP/ICMPv6 type number. A value of -1 indicates all
                          ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types,
                          you must specify all codes.
                        format: int64
                        type: integer
                      ipProtocol:
                        description: "The IP protocol name (tcp, udp, icmp, icmpv6)
                          or number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).
                          \n [VPC only] Use -1 to specify all protocols. When authorizing
                          security group rules, specifying -1 or a protocol number
                          other than tcp, udp, icmp, or icmpv6 allows traffic on all
                          ports, regardless of any port range you specify. For tcp,
                          udp, and icmp, you must specify a port range. For icmpv6,
                          the port range is optional; if you omit the port range,
                          traffic for all types and codes is allowed."
                        type: string
                      ipRanges:
                        description: The IPv4 ranges.
                        items:
                          description: IPRange describes an IPv4 range.
                          properties:
                            cidrIp:
                              description: The IPv4 CIDR range. You can either specify
                                a CIDR range or a source security group, not both.
                                To specify a single IPv4 address, use the /32 prefix
                                length.
                              type: string
                            description:
                              description: "A description for the security group rule
                                that references this IPv4 address range. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                              type: string
                          required:
                          - cidrIp
                          type: object
                        type: array
                      ipv6Ranges:
                        description: "The IPv6 ranges. \n [VPC only]"
                        items:
                          description: IPv6Range describes an IPv6 range.
                          properties:
                            cidrIPv6:
                              description: The IPv6 CIDR range. You can either specify
                                a CIDR range or a source security group, not both.
                                To specify a single IPv6 address, use the /128 prefix
                                length.
                              type: string
                            description:
                              description: "A description for the security group rule
                                that references this IPv6 address range. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                              type: string
                          required:
                          - cidrIPv6
                          type: object
                        type: array
                      prefixListIds:
                        description: "PrefixListIDs for an AWS service. With outbound
                          rules, this is the AWS service to access through a VPC endpoint
                          from instances associated with the security group. \n [VPC
                          only]"
                        items:
                          description: PrefixListID describes a prefix list ID.
                          properties:
                            description:
                              description: "A description for the security group rule
                                that references this prefix list ID. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                              type: string
                            prefixListId:
                              description: The ID of the prefix.
                              type: string
                          required:
                          - prefixListId
                          type: object
                        type: array
                      toPort:
                        description: The end of port range for the TCP and UDP protocols,
                          or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6
                          codes. If you specify all ICMP/ICMPv6 types, you must specify
                          all codes.
                        format: int64
                        type: integer
                      userIdGroupPairs:
                        description: UserIDGroupPairs are the source security group
                          and AWS account ID pairs. It contains one or more accounts
                          and security groups to allow flows from security groups
                          of other accounts.
                        items:
                          description: UserIDGroupPair describes a security group
                            and AWS account ID pair.
                          properties:
                            description:
                              description: "A description for the security group rule
                                that references this user ID group pair. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                              type: string
                            groupId:
                              description: The ID of the security group.
                              type: string
                            groupName:
                              description: "The name of the security group. In a request,
                                use this parameter for a security group in EC2-Classic
                                or a default VPC only. For a security group in a nondefault
                                VPC, use the security group ID. \n For a referenced
                                security group in another VPC, this value is not returned
                                if the referenced security group is deleted."
                              type: string
                            userId:
                              description: "The ID of an AWS account. \n For a referenced
                                security group in another VPC, the account ID of the
                                referenced security group is returned in the response.
                                If the referenced security group is deleted, this
                                value is not returned. \n [EC2-Classic] Required when
                                adding or removing rules that reference a security
                                group in another AWS account."
                              type: string
                            vpcId:
                              description: The ID of the VPC for the referenced security
                                group, if applicable.
                              type: string
                            vpcPeeringConnectionId:
                              description: The ID of the VPC peering connection, if
                                applicable.
                              type: string
                          type: object
                        type: array
                    required:
                    - ipProtocol
                    type: object
                  type: array
                groupName:
                  description: The name of the security group.
                  type: string
                ingress:
                  description: One or more inbound rules associated with the security
                    group.
                  items:
                    description: IPPermission Describes a set of permissions for a
                      security group rule.
                    properties:
                      fromPort:
                        description: The start of port range for the TCP and UDP protocols,
                          or an ICMP/ICMPv6 type number. A value of -1 indicates all
                          ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types,
                          you must specify all codes.
                        format: int64
                        type: integer
                      ipProtocol:
                        description: "The IP protocol name (tcp, udp, icmp, icmpv6)
                          or number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)).
                          \n [VPC only] Use -1 to specify all protocols. When authorizing
                          security group rules, specifying -1 or a protocol number
                          other than tcp, udp, icmp, or icmpv6 allows traffic on all
                          ports, regardless of any port range you specify. For tcp,
                          udp, and icmp, you must specify a port range. For icmpv6,
                          the port range is optional; if you omit the port range,
                          traffic for all types and codes is allowed."
                        type: string
                      ipRanges:
                        description: The IPv4 ranges.
                        items:
                          description: IPRange describes an IPv4 range.
                          properties:
                            cidrIp:
                              description: The IPv4 CIDR range. You can either specify
                                a CIDR range or a source security group, not both.
                                To specify a single IPv4 address, use the /32 prefix
                                length.
                              type: string
                            description:
                              description: "A description for the security group rule
                                that references this IPv4 address range. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                              type: string
                          required:
                          - cidrIp
                          type: object
                        type: array
                      ipv6Ranges:
                        description: "The IPv6 ranges. \n [VPC only]"
                        items:
                          description: IPv6Range describes an IPv6 range.
                          properties:
                            cidrIPv6:
                              description: The IPv6 CIDR range. You can either specify
                                a CIDR range or a source security group, not both.
                                To specify a single IPv6 address, use the /128 prefix
                                length.
                              type: string
                            description:
                              description: "A description for the security group rule
                                that references this IPv6 address range. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*"
                              type: string
                          required:
                          - cidrIPv6
                          type: object
                        type: array
                      prefixListIds:
                        description: "PrefixListIDs for an AWS service. With outbound
                          rules, this is the AWS service to access through a VPC endpoint
                          from instances associated with the security group. \n [VPC
                          only]"
                        items:
                          description: PrefixListID describes a prefix list ID.
                          properties:
                            description:
                              description: "A description for the security group rule
                                that references this prefix list ID. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                              type: string
                            prefixListId:
                              description: The ID of the prefix.
                              type: string
                          required:
                          - prefixListId
                          type: object
                        type: array
                      toPort:
                        description: The end of port range for the TCP and UDP protocols,
                          or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6
                          codes. If you specify all ICMP/ICMPv6 types, you must specify
                          all codes.
                        format: int64
                        type: integer
                      userIdGroupPairs:
                        description: UserIDGroupPairs are the source security group
                          and AWS account ID pairs. It contains one or more accounts
                          and security groups to allow flows from security groups
                          of other accounts.
                        items:
                          description: UserIDGroupPair describes a security group
                            and AWS account ID pair.
                          properties:
                            description:
                              description: "A description for the security group rule
                                that references this user ID group pair. \n Constraints:
                                Up to 255 characters in length. Allowed characters
                                are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*"
                              type: string
                            groupId:
                              description: The ID of the security group.
                              type: string
                            groupName:
                              description: "The name of the security group. In a request,
                                use this parameter for a security group in EC2-Classic
                                or a default VPC only. For a security group in a nondefault
                                VPC, use the security group ID. \n For a referenced
                                security group in another VPC, this value is not returned
                                if the referenced security group is deleted."
                              type: string
                            userId:
                              description: "The ID of an AWS account. \n For a referenced
                                security group in another VPC, the account ID of the
                                referenced security group is returned in the response.
                                If the referenced security group is deleted, this
                                value is not returned. \n [EC2-Classic] Required when
                                adding or removing rules that reference a security
                                group in another AWS account."
                              type: string
                            vpcId:
                              description: The ID of the VPC for the referenced security
                                group, if applicable.
                              type: string
                            vpcPeeringConnectionId:
                              description: The ID of the VPC peering connection, if
                                applicable.
                              type: string
                          type: object
                        type: array
                    required:
                    - ipProtocol
                    type: object
                  type: array
                tags:
                  description: Tags represents to current ec2 tags.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                vpcId:
                  description: VPCID is the ID of the VPC.
                  type: string
                vpcIdRef:
                  description: VPCIDRef references a VPC to and retrieves its vpcId
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                vpcIdSelector:
                  description: VPCIDSelector selects a reference to a VPC to and retrieves
                    its vpcId
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - description
              - groupName
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A SecurityGroupStatus represents the observed state of a SecurityGroup.
          properties:
            atProvider:
              description: SecurityGroupObservation keeps the state for the external
                resource
              properties:
                ownerId:
                  description: The AWS account ID of the owner of the security group.
                  type: string
                securityGroupID:
                  description: SecurityGroupID is the ID of the SecurityGroup.
                  type: string
              required:
              - ownerId
              - securityGroupID
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: dbsubnetgroups.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: DBSubnetGroup
    listKind: DBSubnetGroupList
    plural: dbsubnetgroups
    singular: dbsubnetgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A DBSubnetGroup is a managed resource that represents an AWS VPC
        Database Subnet Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A DBSubnetGroupSpec defines the desired state of a DBSubnetGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: DBSubnetGroupParameters define the desired state of an
                AWS VPC Database Subnet Group.
              properties:
                description:
                  description: The description for the DB subnet group.
                  type: string
                subnetIdRefs:
                  description: SubnetIDRefs is a set of references that each retrieve
                    the subnetID from the referenced Subnet
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                subnetIdSelector:
                  description: SubnetIDSelector selects a set of references that each
                    retrieve the subnetID from the referenced Subnet
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                subnetIds:
                  description: The EC2 Subnet IDs for the DB subnet group.
                  items:
                    type: string
                  type: array
                tags:
                  description: A list of tags. For more information, see Tagging Amazon
                    RDS Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                    in the Amazon RDS User Guide.
                  items:
                    description: Tag is a metadata assigned to an Amazon RDS resource
                      consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
                    properties:
                      key:
                        description: 'A key is the required name of the tag. The string
                          value can be from 1 to 128 Unicode characters in length
                          and can''t be prefixed with "aws:" or "rds:". The string
                          can only contain only the set of Unicode letters, digits,
                          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
                          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                      value:
                        description: 'A value is the optional value of the tag. The
                          string value can be from 1 to 256 Unicode characters in
                          length and can''t be prefixed with "aws:" or "rds:". The
                          string can only contain only the set of Unicode letters,
                          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'',
                          ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                    type: object
                  type: array
              required:
              - description
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: A DBSubnetGroupStatus represents the observed state of a DBSubnetGroup.
          properties:
            atProvider:
              description: DBSubnetGroupObservation is the representation of the current
                state that is observed
              properties:
                arn:
                  description: ARN is the Amazon Resource Name (ARN) for this DB subnet
                    group.
                  type: string
                state:
                  description: State specifies the current state of this DB subnet
                    group.
                  type: string
                subnets:
                  description: Subnets contains a list of Subnet elements.
                  items:
                    description: Subnet represents a aws subnet
                    properties:
                      subnetID:
                        description: Specifies the identifier of the subnet.
                        type: string
                      subnetStatus:
                        description: Specifies the status of the subnet.
                        type: string
                    required:
                    - subnetID
                    - subnetStatus
                    type: object
                  type: array
                vpcId:
                  description: VPCID provides the VPCID of the DB subnet group.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: s3bucketclasses.storage.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: S3BucketClass
    listKind: S3BucketClassList
    plural: s3bucketclasses
    singular: s3bucketclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An S3BucketClass is a resource class. It defines the desired spec
        of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            S3Bucket.
          properties:
            cannedACL:
              description: CannedACL applies a standard AWS built-in ACL for common
                bucket use cases.
              enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - log-delivery-write
              - aws-exec-read
              type: string
            iamUsername:
              description: IAMUsername is the name of an IAM user that is automatically
                created and granted access to this bucket by Crossplane at bucket
                creation time.
              type: string
            localPermission:
              description: LocalPermission is the permissions granted on the bucket
                for the provider specific bucket service account that is available
                in a secret after provisioning.
              enum:
              - Read
              - Write
              - ReadWrite
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region of the bucket.
              type: string
            versioning:
              description: Versioning enables versioning of objects stored in this
                bucket.
              type: boolean
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - localPermission
          - providerRef
          - region
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iampolicies.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.arn
    name: ARN
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMPolicy
    listKind: IAMPolicyList
    plural: iampolicies
    singular: iampolicy
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMPolicy is a managed resource that represents an AWS IAM IAMPolicy.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMPolicySpec defines the desired state of an IAMPolicy.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMPolicyParameters define the desired state of an AWS
                IAM Policy.
              properties:
                description:
                  description: A description of the policy.
                  type: string
                document:
                  description: The JSON policy document that is the content for the
                    policy.
                  type: string
                name:
                  description: The name of the policy.
                  type: string
                path:
                  description: The path to the policy.
                  type: string
              required:
              - document
              - name
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMPolicyStatus represents the observed state of an IAMPolicy.
          properties:
            atProvider:
              description: IAMPolicyObservation keeps the state for the external resource
              properties:
                arn:
                  description: The Amazon PolicyObservation Name (ARN) of the policy
                  type: string
                attachmentCount:
                  description: The number of entities (users, groups, and roles) that
                    the policy is attached to.
                  format: int64
                  type: integer
                defaultVersionId:
                  description: The identifier for the version of the policy that is
                    set as the default version.
                  type: string
                isAttachable:
                  description: Specifies whether the policy can be attached to an
                    IAM user, group, or role.
                  type: boolean
                permissionsBoundaryUsageCount:
                  description: The number of entities (users and roles) for which
                    the policy is used to set the permissions boundary.
                  format: int64
                  type: integer
                policyId:
                  description: The stable and unique string identifying the policy.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamgroupusermemberships.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.userName
    name: USERNAME
    type: string
  - JSONPath: .spec.forProvider.groupName
    name: GROUPNAME
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    kind: IAMGroupUserMembership
    listKind: IAMGroupUserMembershipList
    plural: iamgroupusermemberships
    singular: iamgroupusermembership
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMGroupUserMembership is a managed resource that represents
        an AWS IAM User group membership.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMGroupUserMembershipSpec defines the desired state of
            an IAMGroupUserMembership.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMGroupUserMembershipParameters define the desired state
                of an AWS IAMGroupUserMembership.
              properties:
                groupName:
                  description: GroupName is the Amazon IAM Group Name (IAMGroup) of
                    the IAM group you want to add User to.
                  type: string
                groupNameRef:
                  description: GroupNameRef references to an IAMGroup to retrieve
                    its groupName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                groupNameSelector:
                  description: GroupNameSelector selects a reference to an IAMGroup
                    to retrieve its groupName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                userName:
                  description: UserName presents the name of the IAMUser.
                  type: string
                userNameRef:
                  description: UserNameRef references to an IAMUser to retrieve its
                    userName
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                userNameSelector:
                  description: UserNameSelector selects a reference to an IAMUser
                    to retrieve its userName
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMGroupUserMembershipStatus represents the observed state
            of an IAMGroupUserMembership.
          properties:
            atProvider:
              description: IAMGroupUserMembershipObservation keeps the state for the
                external resource
              properties:
                attachedGroupArn:
                  description: AttachedGroupARN is the arn for the attached group.
                    If nil, the group is not yet attached
                  type: string
              required:
              - attachedGroupArn
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: eksclusters.compute.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.state
    name: STATE
    type: string
  - JSONPath: .status.clusterName
    name: CLUSTER-NAME
    type: string
  - JSONPath: .status.endpoint
    name: ENDPOINT
    type: string
  - JSONPath: .spec.location
    name: LOCATION
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: EKSCluster
    listKind: EKSClusterList
    plural: eksclusters
    singular: ekscluster
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An EKSCluster is a managed resource that represents an AWS Elastic
        Kubernetes Service cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An EKSClusterSpec defines the desired state of an EKSCluster.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            cloudformationStackId:
              description: CloudFormationStackID of the Stack used to create node
                groups.
              type: string
            clusterVersion:
              description: 'ClusterVersion: The desired Kubernetes version of this
                EKS Cluster. If you do not specify a value here, the latest version
                available is used.'
              type: string
            mapRoles:
              description: MapRoles map AWS roles to one or more Kubernetes groups.
                A Default role that allows nodes access to communicate with master
                is autogenerated when a node pool comes online.
              items:
                description: MapRole maps an AWS IAM role to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the RoleARN should map to.
                    items:
                      type: string
                    type: array
                  rolearn:
                    description: RoleARN to match, e.g. 'arn:aws:iam::000000000000:role/KubernetesNode'.
                    type: string
                  username:
                    description: Username (in Kubernetes) the RoleARN should map to.
                    type: string
                required:
                - groups
                - rolearn
                - username
                type: object
              type: array
            mapUsers:
              description: MapUsers map AWS users to one or more Kubernetes groups.
              items:
                description: MapUser maps an AWS IAM user to one or more Kubernetes
                  groups. See https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
                  and https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md
                properties:
                  groups:
                    description: Groups (in Kubernetes) the UserARN should map to.
                    items:
                      type: string
                    type: array
                  userarn:
                    description: UserARN to match, e.g. 'arn:aws:iam::000000000000:user/Alice'
                    type: string
                  username:
                    description: Username (in Kubernetes) the UserARN should map to.
                    type: string
                required:
                - groups
                - userarn
                - username
                type: object
              type: array
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            region:
              description: Region for this EKS Cluster.
              type: string
            roleARN:
              description: 'RoleARN: The Amazon Resource Name (ARN) of the IAM role
                that provides permis sions for Amazon EKS to make calls to other AWS  API  operations
                on your behalf. For more information, see ''Amazon EKS Service IAM
                Role'' in the Amazon EKS User Guide.'
              type: string
            roleARNRef:
              description: RoleARNRef references to an IAMRole to retrieve its ARN
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            roleARNSelector:
              description: RoleARNSelector selects a reference to an IAMRole
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIdRefs:
              description: SecurityGroupIDRefs is a set of referencers that each retrieve
                the ID from the referenced SecurityGroup
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            securityGroupIdSelector:
              description: SecurityGroupIDSelector selects a set of references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            securityGroupIds:
              description: SecurityGroupIDs of this EKS cluster.
              items:
                type: string
              type: array
            subnetIdRefs:
              description: SubnetIDRefs is a set of referencers that each retrieve
                the subnetID from the referenced Subnet
              items:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              type: array
            subnetIdSelector:
              description: SubnetIDSelector selects a set of Subnet references
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            subnetIds:
              description: SubnetIDs of this EKS cluster.
              items:
                type: string
              type: array
            vpcId:
              description: VPCID is the ID of the VPC.
              type: string
            vpcIdRef:
              description: VPCIDRef references to a VPC to retrieve its vpcId
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            vpcIdSelector:
              description: VPCIDSelector selects a reference to a VPC
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            workerNodes:
              description: WorkerNodes configuration for cloudformation
              properties:
                bootstrapArguments:
                  description: BootstrapArguments to pass to the bootstrap script.
                    See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
                  type: string
                clusterControlPlaneSecurityGroup:
                  description: ClusterControlPlaneSecurityGroup configures the security
                    group of the cluster control plane in order to allow communication
                    to this node group.
                  type: string
                clusterControlPlaneSecurityGroupRef:
                  description: ClusterControlPlaneSecurityGroupRef references a SecurityGroup
                    to retrieve its ID
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                clusterControlPlaneSecurityGroupSelector:
                  description: ClusterControlPlaneSecurityGroupSelector selects a
                    SecurityGroup
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                keyName:
                  description: KeyName of the EC2 Key Pair to allow SSH access to
                    the EC2 instances.
                  type: string
                nodeAutoScalingGroupMaxSize:
                  description: NodeAutoScalingGroupMaxSize configures the maximum
                    size of this node group's Autoscaling Group. Defaults to 3.
                  type: integer
                nodeAutoScalingGroupMinSize:
                  description: NodeAutoScalingGroupMinSize configures the minimum
                    size of this node group's Autoscaling Group. Defaults to 1.
                  type: integer
                nodeGroupName:
                  description: NodeGroupName is a unique identifier for the Node Group.
                  type: string
                nodeImageId:
                  description: NodeImageId that the EC2 instances should run. Defaults
                    to the region's standard AMI.
                  type: string
                nodeInstanceType:
                  description: NodeInstanceType of the EC2 instances.
                  enum:
                  - t2.small
                  - t2.medium
                  - t2.large
                  - t2.xlarge
                  - t2.2xlarge
                  - t3.nano
                  - t3.micro
                  - t3.small
                  - t3.medium
                  - t3.large
                  - t3.xlarge
                  - t3.2xlarge
                  - m3.medium
                  - m3.large
                  - m3.xlarge
                  - m3.2xlarge
                  - m4.large
                  - m4.xlarge
                  - m4.2xlarge
                  - m4.4xlarge
                  - m4.10xlarge
                  - m5.large
                  - m5.xlarge
                  - m5.2xlarge
                  - m5.4xlarge
                  - m5.12xlarge
                  - m5.24xlarge
                  - c4.large
                  - c4.xlarge
                  - c4.2xlarge
                  - c4.4xlarge
                  - c4.8xlarge
                  - c5.large
                  - c5.xlarge
                  - c5.2xlarge
                  - c5.4xlarge
                  - c5.9xlarge
                  - c5.18xlarge
                  - i3.large
                  - i3.xlarge
                  - i3.2xlarge
                  - i3.4xlarge
                  - i3.8xlarge
                  - i3.16xlarge
                  - r3.xlarge
                  - r3.2xlarge
                  - r3.4xlarge
                  - r3.8xlarge
                  - r4.large
                  - r4.xlarge
                  - r4.2xlarge
                  - r4.4xlarge
                  - r4.8xlarge
                  - r4.16xlarge
                  - x1.16xlarge
                  - x1.32xlarge
                  - p2.xlarge
                  - p2.8xlarge
                  - p2.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p3.16xlarge
                  - r5.large
                  - r5.xlarge
                  - r5.2xlarge
                  - r5.4xlarge
                  - r5.12xlarge
                  - r5.24xlarge
                  - r5d.large
                  - r5d.xlarge
                  - r5d.2xlarge
                  - r5d.4xlarge
                  - r5d.12xlarge
                  - r5d.24xlarge
                  - z1d.large
                  - z1d.xlarge
                  - z1d.2xlarge
                  - z1d.3xlarge
                  - z1d.6xlarge
                  - z1d.12xlarge
                  type: string
                nodeVolumeSize:
                  description: NodeVolumeSize configures the volume size in GB. Defaults
                    to 20.
                  type: integer
              required:
              - nodeInstanceType
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          - region
          - workerNodes
          type: object
        status:
          description: An EKSClusterStatus represents the observed state of an EKSCluster.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            endpoint:
              description: Endpoint for connecting to the cluster.
              type: string
            resourceVersion:
              description: ClusterVersion of the cluster.
              type: string
            state:
              description: State of the cluster.
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: rdsinstances.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.atProvider.dbInstanceStatus
    name: STATE
    type: string
  - JSONPath: .spec.forProvider.engine
    name: ENGINE
    type: string
  - JSONPath: .spec.forProvider.engineVersion
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RDSInstance
    listKind: RDSInstanceList
    plural: rdsinstances
    singular: rdsinstance
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An RDSInstance is a managed resource that represents an AWS Relational
        Database Service instance.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An RDSInstanceSpec defines the desired state of an RDSInstance.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: RDSInstanceParameters define the desired state of an AWS
                Relational Database Service instance.
              properties:
                allocatedStorage:
                  description: 'AllocatedStorage is the amount of storage (in gibibytes)
                    to allocate for the DB instance. Type: Integer Amazon Aurora Not
                    applicable. Aurora cluster volumes automatically grow as the amount
                    of data in your database increases, though you are only charged
                    for the space that you use in an Aurora cluster volume. MySQL
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Must
                    be an integer from 20 to 16384.    * Provisioned IOPS storage
                    (io1): Must be an integer from 100 to 16384.    * Magnetic storage
                    (standard): Must be an integer from 5 to 3072. MariaDB Constraints
                    to the amount of storage for each storage type are the following:    *
                    General Purpose (SSD) storage (gp2): Must be an integer from 20
                    to 16384.    * Provisioned IOPS storage (io1): Must be an integer
                    from 100 to 16384.    * Magnetic storage (standard): Must be an
                    integer from 5 to 3072. PostgreSQL Constraints to the amount of
                    storage for each storage type are the following:    * General
                    Purpose (SSD) storage (gp2): Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Must be an integer from 100 to
                    16384.    * Magnetic storage (standard): Must be an integer from
                    5 to 3072. Oracle Constraints to the amount of storage for each
                    storage type are the following:    * General Purpose (SSD) storage
                    (gp2): Must be an integer from 20 to 16384.    * Provisioned IOPS
                    storage (io1): Must be an integer from 100 to 16384.    * Magnetic
                    storage (standard): Must be an integer from 10 to 3072. SQL Server
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Enterprise
                    and Standard editions: Must be an integer from 200 to 16384. Web
                    and Express editions: Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Enterprise and Standard editions:
                    Must be an integer from 200 to 16384. Web and Express editions:
                    Must be an integer from 100 to 16384.    * Magnetic storage (standard):
                    Enterprise and Standard editions: Must be an integer from 200
                    to 1024. Web and Express editions: Must be an integer from 20
                    to 1024.'
                  type: integer
                allowMajorVersionUpgrade:
                  description: 'AllowMajorVersionUpgrade indicates that major version
                    upgrades are allowed. Changing this parameter doesn''t result
                    in an outage and the change is asynchronously applied as soon
                    as possible. Constraints: This parameter must be set to true when
                    specifying a value for the EngineVersion parameter that is a different
                    major version than the DB instance''s current version.'
                  type: boolean
                applyModificationsImmediately:
                  description: 'ApplyModificationsImmediately specifies whether the
                    modifications in this request and any pending modifications are
                    asynchronously applied as soon as possible, regardless of the
                    PreferredMaintenanceWindow setting for the DB instance. If this
                    parameter is set to false, changes to the DB instance are applied
                    during the next maintenance window. Some parameter changes can
                    cause an outage and are applied on the next call to RebootDBInstance,
                    or the next failure reboot. Review the table of parameters in
                    Modifying a DB Instance and Using the Apply Immediately Parameter
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
                    in the Amazon RDS User Guide. to see the impact that setting ApplyImmediately
                    to true or false has for each modified parameter and to determine
                    when the changes are applied. Default: false'
                  type: boolean
                autoMinorVersionUpgrade:
                  description: 'AutoMinorVersionUpgrade indicates that minor engine
                    upgrades are applied automatically to the DB instance during the
                    maintenance window. Default: true'
                  type: boolean
                availabilityZone:
                  description: 'AvailabilityZone is the EC2 Availability Zone that
                    the DB instance is created in. For information on AWS Regions
                    and Availability Zones, see Regions and Availability Zones (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    Default: A random, system-chosen Availability Zone in the endpoint''s
                    AWS Region. Example: us-east-1d Constraint: The AvailabilityZone
                    parameter can''t be specified if the MultiAZ parameter is set
                    to true. The specified Availability Zone must be in the same AWS
                    Region as the current endpoint.'
                  type: string
                backupRetentionPeriod:
                  description: 'BackupRetentionPeriod is the number of days for which
                    automated backups are retained. Setting this parameter to a positive
                    number enables backups. Setting this parameter to 0 disables automated
                    backups. Amazon Aurora Not applicable. The retention period for
                    automated backups is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: 1 Constraints:    * Must be a value
                    from 0 to 35    * Cannot be set to 0 if the DB instance is a source
                    to Read Replicas'
                  type: integer
                caCertificateIdentifier:
                  description: CACertificateIdentifier indicates the certificate that
                    needs to be associated with the instance.
                  type: string
                characterSetName:
                  description: CharacterSetName indicates that the DB instance should
                    be associated with the specified CharacterSet for supported engines,
                    Amazon Aurora Not applicable. The character set is managed by
                    the DB cluster. For more information, see CreateDBCluster.
                  type: string
                cloudwatchLogsExportConfiguration:
                  description: CloudwatchLogsExportConfiguration is the configuration
                    setting for the log types to be enabled for export to CloudWatch
                    Logs for a specific DB instance.
                  properties:
                    disableLogTypes:
                      description: DisableLogTypes is the list of log types to disable.
                      items:
                        type: string
                      type: array
                    enableLogTypes:
                      description: EnableLogTypes is the list of log types to enable.
                      items:
                        type: string
                      type: array
                  type: object
                copyTagsToSnapshot:
                  description: CopyTagsToSnapshot should be true to copy all tags
                    from the DB instance to snapshots of the DB instance, and otherwise
                    false. The default is false.
                  type: boolean
                dbClusterIdentifier:
                  description: 'DBClusterIdentifier is the identifier of the DB cluster
                    that the instance will belong to. For information on creating
                    a DB cluster, see CreateDBCluster. Type: String'
                  type: string
                dbInstanceClass:
                  description: DBInstanceClass is the compute and memory capacity
                    of the DB instance, for example, db.m4.large. Not all DB instance
                    classes are available in all AWS Regions, or for all database
                    engines. For the full list of DB instance classes, and availability
                    for your engine, see DB Instance Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                    in the Amazon RDS User Guide.
                  type: string
                dbName:
                  description: 'DBName is the meaning of this parameter differs according
                    to the database engine you use. Type: String MySQL The name of
                    the database to create when the DB instance is created. If this
                    parameter is not specified, no database is created in the DB instance.
                    Constraints:    * Must contain 1 to 64 letters or numbers.    *
                    Cannot be a word reserved by the specified database engine MariaDB
                    The name of the database to create when the DB instance is created.
                    If this parameter is not specified, no database is created in
                    the DB instance. Constraints:    * Must contain 1 to 64 letters
                    or numbers.    * Cannot be a word reserved by the specified database
                    engine PostgreSQL The name of the database to create when the
                    DB instance is created. If this parameter is not specified, the
                    default "postgres" database is created in the DB instance. Constraints:    *
                    Must contain 1 to 63 letters, numbers, or underscores.    * Must
                    begin with a letter or an underscore. Subsequent characters can    be
                    letters, underscores, or digits (0-9).    * Cannot be a word reserved
                    by the specified database engine Oracle The Oracle System ID (SID)
                    of the created DB instance. If you specify null, the default value
                    ORCL is used. You can''t specify the string NULL, or any other
                    reserved word, for DBName. Default: ORCL Constraints:    * Cannot
                    be longer than 8 characters SQL Server Not applicable. Must be
                    null. Amazon Aurora The name of the database to create when the
                    primary instance of the DB cluster is created. If this parameter
                    is not specified, no database is created in the DB instance. Constraints:    *
                    Must contain 1 to 64 letters or numbers.    * Cannot be a word
                    reserved by the specified database engine'
                  type: string
                dbParameterGroupName:
                  description: 'DBParameterGroupName is the name of the DB parameter
                    group to associate with this DB instance. If this argument is
                    omitted, the default DBParameterGroup for the specified engine
                    is used. Constraints:    * Must be 1 to 255 letters, numbers,
                    or hyphens.    * First character must be a letter    * Cannot
                    end with a hyphen or contain two consecutive hyphens'
                  type: string
                dbSecurityGroups:
                  description: 'DBSecurityGroups is a list of DB security groups to
                    associate with this DB instance. Default: The default DB security
                    group for the database engine.'
                  items:
                    type: string
                  type: array
                dbSubnetGroupName:
                  description: DBSubnetGroupName is a DB subnet group to associate
                    with this DB instance. If there is no DB subnet group, then it
                    is a non-VPC DB instance.
                  type: string
                dbSubnetGroupNameRef:
                  description: DBSubnetGroupNameRef is a reference to a DBSubnetGroup
                    used to set DBSubnetGroupName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                dbSubnetGroupNameSelector:
                  description: DBSubnetGroupNameSelector selects a reference to a
                    DBSubnetGroup used to set DBSubnetGroupName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                deletionProtection:
                  description: DeletionProtection indicates if the DB instance should
                    have deletion protection enabled. The database can't be deleted
                    when this value is set to true. The default is false. For more
                    information, see  Deleting a DB Instance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
                  type: boolean
                domain:
                  description: Domain specifies the Active Directory Domain to create
                    the instance in.
                  type: string
                domainIAMRoleName:
                  description: DomainIAMRoleName specifies the name of the IAM role
                    to be used when making API calls to the Directory Service.
                  type: string
                domainIAMRoleNameRef:
                  description: DomainIAMRoleNameRef is a reference to an IAMRole used
                    to set DomainIAMRoleName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                domainIAMRoleNameSelector:
                  description: DomainIAMRoleNameSelector selects a reference to an
                    IAMRole used to set DomainIAMRoleName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                enableCloudwatchLogsExports:
                  description: EnableCloudwatchLogsExports is the list of log types
                    that need to be enabled for exporting to CloudWatch Logs. The
                    values in the list depend on the DB engine being used. For more
                    information, see Publishing Database Logs to Amazon CloudWatch
                    Logs  (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                    in the Amazon Relational Database Service User Guide.
                  items:
                    type: string
                  type: array
                enableIAMDatabaseAuthentication:
                  description: 'EnableIAMDatabaseAuthentication should be true to
                    enable mapping of AWS Identity and Access Management (IAM) accounts
                    to database accounts, and otherwise false. You can enable IAM
                    database authentication for the following database engines: Amazon
                    Aurora Not applicable. Mapping AWS IAM accounts to database accounts
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    MySQL    * For MySQL 5.6, minor version 5.6.34 or higher    *
                    For MySQL 5.7, minor version 5.7.16 or higher Default: false'
                  type: boolean
                enablePerformanceInsights:
                  description: EnablePerformanceInsights should be true to enable
                    Performance Insights for the DB instance, and otherwise false.
                    For more information, see Using Amazon Performance Insights (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                    in the Amazon Relational Database Service User Guide.
                  type: boolean
                engine:
                  description: 'Engine is the name of the database engine to be used
                    for this instance. Not every database engine is available for
                    every AWS Region. Valid Values:    * aurora (for MySQL 5.6-compatible
                    Aurora)    * aurora-mysql (for MySQL 5.7-compatible Aurora)    *
                    aurora-postgresql    * mariadb    * mysql    * oracle-ee    *
                    oracle-se2    * oracle-se1    * oracle-se    * postgres    * sqlserver-ee    *
                    sqlserver-se    * sqlserver-ex    * sqlserver-web Engine is a
                    required field'
                  type: string
                engineVersion:
                  description: EngineVersion is the version number of the database
                    engine to use. For a list of valid engine versions, call DescribeDBEngineVersions.
                    The following are the database engines and links to information
                    about the major and minor versions that are available with Amazon
                    RDS. Not every database engine is available for every AWS Region.
                    Amazon Aurora Not applicable. The version number of the database
                    engine to be used by the DB instance is managed by the DB cluster.
                    For more information, see CreateDBCluster. MariaDB See MariaDB
                    on Amazon RDS Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Microsoft SQL Server See Version
                    and Feature Support on Amazon RDS (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport)
                    in the Amazon RDS User Guide. MySQL See MySQL on Amazon RDS Versions
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Oracle See Oracle Database Engine
                    Release Notes (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
                    in the Amazon RDS User Guide. PostgreSQL See Supported PostgreSQL
                    Database Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions)
                    in the Amazon RDS User Guide.
                  type: string
                finalDBSnapshotIdentifier:
                  description: 'The DBSnapshotIdentifier of the new DBSnapshot created
                    when SkipFinalSnapshot is set to false. Specifying this parameter
                    and also setting the SkipFinalShapshot parameter to true results
                    in an error. Constraints:    * Must be 1 to 255 letters or numbers.    *
                    First character must be a letter    * Cannot end with a hyphen
                    or contain two consecutive hyphens    * Cannot be specified when
                    deleting a Read Replica.'
                  type: string
                iops:
                  description: 'IOPS is the amount of Provisioned IOPS (input/output
                    operations per second) to be initially allocated for the DB instance.
                    For information about valid IOPS values, see see Amazon RDS Provisioned
                    IOPS Storage to Improve Performance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS)
                    in the Amazon RDS User Guide. Constraints: Must be a multiple
                    between 1 and 50 of the storage amount for the DB instance. Must
                    also be an integer multiple of 1000. For example, if the size
                    of your DB instance is 500 GiB, then your IOPS value can be 2000,
                    3000, 4000, or 5000.'
                  type: integer
                kmsKeyId:
                  description: KMSKeyID for an encrypted DB instance. The KMS key
                    identifier is the Amazon Resource Name (ARN) for the KMS encryption
                    key. If you are creating a DB instance with the same AWS account
                    that owns the KMS encryption key used to encrypt the new DB instance,
                    then you can use the KMS key alias instead of the ARN for the
                    KM encryption key. Amazon Aurora Not applicable. The KMS key identifier
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    If the StorageEncrypted parameter is true, and you do not specify
                    a value for the KMSKeyID parameter, then Amazon RDS will use your
                    default encryption key. AWS KMS creates the default encryption
                    key for your AWS account. Your AWS account has a different default
                    encryption key for each AWS Region.
                  type: string
                licenseModel:
                  description: 'LicenseModel information for this DB instance. Valid
                    values: license-included | bring-your-own-license | general-public-license'
                  type: string
                masterPasswordSecretRef:
                  description: MasterPasswordSecretRef references the secret that
                    contains the password used in the creation of this RDS instance.
                    If no reference is given, a password will be auto-generated.
                  properties:
                    key:
                      description: The key to select.
                      type: string
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                  - key
                  - name
                  - namespace
                  type: object
                masterUsername:
                  description: 'MasterUsername is the name for the master user. Amazon
                    Aurora Not applicable. The name for the master user is managed
                    by the DB cluster. For more information, see CreateDBCluster.
                    MariaDB Constraints:    * Required for MariaDB.    * Must be 1
                    to 16 letters or numbers.    * Cannot be a reserved word for the
                    chosen database engine. Microsoft SQL Server Constraints:    *
                    Required for SQL Server.    * Must be 1 to 128 letters or numbers.    *
                    The first character must be a letter.    * Cannot be a reserved
                    word for the chosen database engine. MySQL Constraints:    * Required
                    for MySQL.    * Must be 1 to 16 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. Oracle Constraints:    * Required
                    for Oracle.    * Must be 1 to 30 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. PostgreSQL Constraints:    * Required
                    for PostgreSQL.    * Must be 1 to 63 letters or numbers.    *
                    First character must be a letter.    * Cannot be a reserved word
                    for the chosen database engine.'
                  type: string
                monitoringInterval:
                  description: 'MonitoringInterval is the interval, in seconds, between
                    points when Enhanced Monitoring metrics are collected for the
                    DB instance. To disable collecting Enhanced Monitoring metrics,
                    specify 0. The default is 0. If MonitoringRoleARN is specified,
                    then you must also set MonitoringInterval to a value other than
                    0. Valid Values: 0, 1, 5, 10, 15, 30, 60'
                  type: integer
                monitoringRoleArn:
                  description: MonitoringRoleARN is the ARN for the IAM role that
                    permits RDS to send enhanced monitoring metrics to Amazon CloudWatch
                    Logs. For example, arn:aws:iam:123456789012:role/emaccess. For
                    information on creating a monitoring role, go to Setting Up and
                    Enabling Enhanced Monitoring (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                    in the Amazon RDS User Guide. If MonitoringInterval is set to
                    a value other than 0, then you must supply a MonitoringRoleARN
                    value.
                  type: string
                monitoringRoleArnRef:
                  description: MonitoringRoleARNRef is a reference to an IAMRole used
                    to set MonitoringRoleARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                monitoringRoleArnSelector:
                  description: MonitoringRoleARNSelector selects a reference to an
                    IAMRole used to set MonitoringRoleARN.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                multiAZ:
                  description: MultiAZ specifies if the DB instance is a Multi-AZ
                    deployment. You can't set the AvailabilityZone parameter if the
                    MultiAZ parameter is set to true.
                  type: boolean
                optionGroupName:
                  description: OptionGroupName indicates that the DB instance should
                    be associated with the specified option group. Permanent options,
                    such as the TDE option for Oracle Advanced Security TDE, can't
                    be removed from an option group, and that option group can't be
                    removed from a DB instance once it is associated with a DB instance
                  type: string
                performanceInsightsKMSKeyId:
                  description: PerformanceInsightsKMSKeyID is the AWS KMS key identifier
                    for encryption of Performance Insights data. The KMS key ID is
                    the Amazon Resource Name (ARN), KMS key identifier, or the KMS
                    key alias for the KMS encryption key.
                  type: string
                performanceInsightsRetentionPeriod:
                  description: PerformanceInsightsRetentionPeriod is the amount of
                    time, in days, to retain Performance Insights data. Valid values
                    are 7 or 731 (2 years).
                  type: integer
                port:
                  description: 'Port number on which the database accepts connections.
                    MySQL Default: 3306 Valid Values: 1150-65535 Type: Integer MariaDB
                    Default: 3306 Valid Values: 1150-65535 Type: Integer PostgreSQL
                    Default: 5432 Valid Values: 1150-65535 Type: Integer Oracle Default:
                    1521 Valid Values: 1150-65535 SQL Server Default: 1433 Valid Values:
                    1150-65535 except for 1434, 3389, 47001, 49152, and 49152 through
                    49156. Amazon Aurora Default: 3306 Valid Values: 1150-65535 Type:
                    Integer'
                  type: integer
                preferredBackupWindow:
                  description: 'PreferredBackupWindow is the daily time range during
                    which automated backups are created if automated backups are enabled,
                    using the BackupRetentionPeriod parameter. For more information,
                    see The Backup Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
                    in the Amazon RDS User Guide. Amazon Aurora Not applicable. The
                    daily time range for creating automated backups is managed by
                    the DB cluster. For more information, see CreateDBCluster. The
                    default is a 30-minute window selected at random from an 8-hour
                    block of time for each AWS Region. To see the time blocks available,
                    see  Adjusting the Preferred DB Instance Maintenance Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
                    in the Amazon RDS User Guide. Constraints:    * Must be in the
                    format hh24:mi-hh24:mi.    * Must be in Universal Coordinated
                    Time (UTC).    * Must not conflict with the preferred maintenance
                    window.    * Must be at least 30 minutes.'
                  type: string
                preferredMaintenanceWindow:
                  description: 'PreferredMaintenanceWindow is the time range each
                    week during which system maintenance can occur, in Universal Coordinated
                    Time (UTC). For more information, see Amazon RDS Maintenance Window
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance).
                    Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window
                    selected at random from an 8-hour block of time for each AWS Region,
                    occurring on a random day of the week. Valid Days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window.'
                  type: string
                processorFeatures:
                  description: ProcessorFeatures is the number of CPU cores and the
                    number of threads per core for the DB instance class of the DB
                    instance.
                  items:
                    description: ProcessorFeature is a processor feature entry. For
                      more information, see Configuring the Processor of the DB Instance
                      Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                      in the Amazon RDS User Guide. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ProcessorFeature
                    properties:
                      name:
                        description: Name of the processor feature. Valid names are
                          coreCount and threadsPerCore.
                        type: string
                      value:
                        description: Value of a processor feature name.
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                promotionTier:
                  description: 'PromotionTier specifies the order in which an Aurora
                    Replica is promoted to the primary instance after a failure of
                    the existing primary instance. For more information, see  Fault
                    Tolerance for an Aurora DB Cluster (http://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance)
                    in the Amazon Aurora User Guide. Default: 1 Valid Values: 0 -
                    15'
                  type: integer
                publiclyAccessible:
                  description: 'PubliclyAccessible specifies the accessibility options
                    for the DB instance. A value of true specifies an Internet-facing
                    instance with a publicly resolvable DNS name, which resolves to
                    a public IP address. A value of false specifies an internal instance
                    with a DNS name that resolves to a private IP address. Default:
                    The default behavior varies depending on whether DBSubnetGroupName
                    is specified. If DBSubnetGroupName is not specified, and PubliclyAccessible
                    is not specified, the following applies:    * If the default VPC
                    in the target region doesn’t have an Internet gateway    attached
                    to it, the DB instance is private.    * If the default VPC in
                    the target region has an Internet gateway attached    to it, the
                    DB instance is public. If DBSubnetGroupName is specified, and
                    PubliclyAccessible is not specified, the following applies:    *
                    If the subnets are part of a VPC that doesn’t have an Internet
                    gateway    attached to it, the DB instance is private.    * If
                    the subnets are part of a VPC that has an Internet gateway attached    to
                    it, the DB instance is public.'
                  type: boolean
                scalingConfiguration:
                  description: ScalingConfiguration is the scaling properties of the
                    DB cluster. You can only modify scaling properties for DB clusters
                    in serverless DB engine mode.
                  properties:
                    autoPause:
                      description: AutoPause specifies whether to allow or disallow
                        automatic pause for an Aurora DB cluster in serverless DB
                        engine mode. A DB cluster can be paused only when it's idle
                        (it has no connections). If a DB cluster is paused for more
                        than seven days, the DB cluster might be backed up with a
                        snapshot. In this case, the DB cluster is restored when there
                        is a request to connect to it.
                      type: boolean
                    maxCapacity:
                      description: MaxCapacity is the maximum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The maximum capacity
                        must be greater than or equal to the minimum capacity.
                      type: integer
                    minCapacity:
                      description: MinCapacity is the minimum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The minimum capacity
                        must be less than or equal to the maximum capacity.
                      type: integer
                    secondsUntilAutoPause:
                      description: SecondsUntilAutoPause is the time, in seconds,
                        before an Aurora DB cluster in serverless mode is paused.
                      type: integer
                  type: object
                skipFinalSnapshotBeforeDeletion:
                  description: 'Determines whether a final DB snapshot is created
                    before the DB instance is deleted. If true is specified, no DBSnapshot
                    is created. If false is specified, a DB snapshot is created before
                    the DB instance is deleted. Note that when a DB instance is in
                    a failure state and has a status of ''failed'', ''incompatible-restore'',
                    or ''incompatible-network'', it can only be deleted when the SkipFinalSnapshotBeforeDeletion
                    parameter is set to "true". Specify true when deleting a Read
                    Replica. The FinalDBSnapshotIdentifier parameter must be specified
                    if SkipFinalSnapshotBeforeDeletion is false. Default: false'
                  type: boolean
                storageEncrypted:
                  description: 'StorageEncrypted specifies whether the DB instance
                    is encrypted. Amazon Aurora Not applicable. The encryption for
                    DB instances is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: false'
                  type: boolean
                storageType:
                  description: 'StorageType specifies the storage type to be associated
                    with the DB instance. Valid values: standard | gp2 | io1 If you
                    specify io1, you must also include a value for the IOPS parameter.
                    Default: io1 if the IOPS parameter is specified, otherwise standard'
                  type: string
                tags:
                  description: Tags. For more information, see Tagging Amazon RDS
                    Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                    in the Amazon RDS User Guide.
                  items:
                    description: Tag is a metadata assigned to an Amazon RDS resource
                      consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
                    properties:
                      key:
                        description: 'A key is the required name of the tag. The string
                          value can be from 1 to 128 Unicode characters in length
                          and can''t be prefixed with "aws:" or "rds:". The string
                          can only contain only the set of Unicode letters, digits,
                          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
                          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                      value:
                        description: 'A value is the optional value of the tag. The
                          string value can be from 1 to 256 Unicode characters in
                          length and can''t be prefixed with "aws:" or "rds:". The
                          string can only contain only the set of Unicode letters,
                          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'',
                          ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                    type: object
                  type: array
                timezone:
                  description: Timezone of the DB instance. The time zone parameter
                    is currently supported only by Microsoft SQL Server (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
                  type: string
                useDefaultProcessorFeatures:
                  description: A value that specifies that the DB instance class of
                    the DB instance uses its default processor features.
                  type: boolean
                vpcSecurityGroupIDRefs:
                  description: VPCSecurityGroupIDRefs are references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                vpcSecurityGroupIDSelector:
                  description: VPCSecurityGroupIDSelector selects references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                vpcSecurityGroupIds:
                  description: 'VPCSecurityGroupIDs is a list of EC2 VPC security
                    groups to associate with this DB instance. Amazon Aurora Not applicable.
                    The associated list of EC2 VPC security groups is managed by the
                    DB cluster. For more information, see CreateDBCluster. Default:
                    The default EC2 VPC security group for the DB subnet group''s
                    VPC.'
                  items:
                    type: string
                  type: array
              required:
              - dbInstanceClass
              - engine
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An RDSInstanceStatus represents the observed state of an RDSInstance.
          properties:
            atProvider:
              description: RDSInstanceObservation is the representation of the current
                state that is observed.
              properties:
                dbInstanceArn:
                  description: DBInstanceArn is the Amazon Resource Name (ARN) for
                    the DB instance.
                  type: string
                dbInstancePort:
                  description: DBInstancePort specifies the port that the DB instance
                    listens on. If the DB instance is part of a DB cluster, this can
                    be a different port than the DB cluster port.
                  type: integer
                dbInstanceStatus:
                  description: DBInstanceStatus specifies the current state of this
                    database.
                  type: string
                dbParameterGroups:
                  description: DBParameterGroups provides the list of DB parameter
                    groups applied to this DB instance.
                  items:
                    description: 'DBParameterGroupStatus is the status of the DB parameter
                      group. This data type is used as a response element in the following
                      actions:    * CreateDBInstance    * CreateDBInstanceReadReplica    *
                      DeleteDBInstance    * ModifyDBInstance    * RebootDBInstance    *
                      RestoreDBInstanceFromDBSnapshot Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DBParameterGroupStatus'
                    properties:
                      dbParameterGroupName:
                        description: DBParameterGroupName is the name of the DP parameter
                          group.
                        type: string
                      parameterApplyStatus:
                        description: ParameterApplyStatus is the status of parameter
                          updates.
                        type: string
                    type: object
                  type: array
                dbResourceId:
                  description: DBResourceID is the AWS Region-unique, immutable identifier
                    for the DB instance. This identifier is found in AWS CloudTrail
                    log entries whenever the AWS KMS key for the DB instance is accessed.
                  type: string
                dbSecurityGroups:
                  description: DBSecurityGroups provides List of DB security group
                    elements containing only DBSecurityGroup.Name and DBSecurityGroup.Status
                    subelements.
                  items:
                    description: 'DBSecurityGroupMembership is used as a response
                      element in the following actions:    * ModifyDBInstance    *
                      RebootDBInstance    * RestoreDBInstanceFromDBSnapshot    * RestoreDBInstanceToPointInTime
                      Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DBSecurityGroupMembership'
                    properties:
                      dbSecurityGroupName:
                        description: DBSecurityGroupName is the name of the DB security
                          group.
                        type: string
                      status:
                        description: Status is the status of the DB security group.
                        type: string
                    type: object
                  type: array
                dbSubnetGroup:
                  description: DBSubnetGroup specifies information on the subnet group
                    associated with the DB instance, including the name, description,
                    and subnets in the subnet group.
                  properties:
                    dbSubnetGroupArn:
                      description: DBSubnetGroupARN is the Amazon Resource Name (ARN)
                        for the DB subnet group.
                      type: string
                    dbSubnetGroupDescription:
                      description: DBSubnetGroupDescription provides the description
                        of the DB subnet group.
                      type: string
                    dbSubnetGroupName:
                      description: DBSubnetGroupName is the name of the DB subnet
                        group.
                      type: string
                    subnetGroupStatus:
                      description: SubnetGroupStatus provides the status of the DB
                        subnet group.
                      type: string
                    subnets:
                      description: Subnets contains a list of Subnet elements.
                      items:
                        description: SubnetInRDS is used as a response element in
                          the DescribeDBSubnetGroups action. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Subnet
                        properties:
                          subnetAvailabilityZone:
                            description: 'SubnetAvailabilityZone contains Availability
                              Zone information. This data type is used as an element
                              in the following data type:    * OrderableDBInstanceOption'
                            properties:
                              name:
                                description: Name of the Availability Zone.
                                type: string
                            type: object
                          subnetIdentifier:
                            description: SubnetIdentifier specifies the identifier
                              of the subnet.
                            type: string
                          subnetStatus:
                            description: SubnetStatus specifies the status of the
                              subnet.
                            type: string
                        type: object
                      type: array
                    vpcId:
                      description: VPCID provides the VPCID of the DB subnet group.
                      type: string
                  type: object
                domainMemberships:
                  description: DomainMemberships is the Active Directory Domain membership
                    records associated with the DB instance.
                  items:
                    description: DomainMembership is an Active Directory Domain membership
                      record associated with the DB instance. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DomainMembership
                    properties:
                      domain:
                        description: Domain is the identifier of the Active Directory
                          Domain.
                        type: string
                      fqdn:
                        description: FQDN us the fully qualified domain name of the
                          Active Directory Domain.
                        type: string
                      iamRoleName:
                        description: IAMRoleName is the name of the IAM role to be
                          used when making API calls to the Directory Service.
                        type: string
                      status:
                        description: Status of the DB instance's Active Directory
                          Domain membership, such as joined, pending-join, failed
                          etc).
                        type: string
                    type: object
                  type: array
                endpoint:
                  description: Endpoint specifies the connection endpoint.
                  properties:
                    address:
                      description: Address specifies the DNS address of the DB instance.
                      type: string
                    hostedZoneId:
                      description: HostedZoneID specifies the ID that Amazon Route
                        53 assigns when you create a hosted zone.
                      type: string
                    port:
                      description: Port specifies the port that the database engine
                        is listening on.
                      type: integer
                  type: object
                enhancedMonitoringResourceArn:
                  description: EnhancedMonitoringResourceArn is the Amazon Resource
                    Name (ARN) of the Amazon CloudWatch Logs log stream that receives
                    the Enhanced Monitoring metrics data for the DB instance.
                  type: string
                instanceCreateTime:
                  description: InstanceCreateTime provides the date and time the DB
                    instance was created.
                  format: date-time
                  type: string
                latestRestorableTime:
                  description: LatestRestorableTime specifies the latest time to which
                    a database can be restored with point-in-time restore.
                  format: date-time
                  type: string
                optionGroupMemberships:
                  description: OptionGroupMemberships provides the list of option
                    group memberships for this DB instance.
                  items:
                    description: OptionGroupMembership provides information on the
                      option groups the DB instance is a member of. Please also see
                      https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/OptionGroupMembership
                    properties:
                      optionGroupName:
                        description: OptionGroupName is the name of the option group
                          that the instance belongs to.
                        type: string
                      status:
                        description: 'Status is the status of the DB instance''s option
                          group membership. Valid values are: in-sync, pending-apply,
                          pending-removal, pending-maintenance-apply, pending-maintenance-removal,
                          applying, removing, and failed.'
                        type: string
                    type: object
                  type: array
                pendingModifiedValues:
                  description: PendingModifiedValues specifies that changes to the
                    DB instance are pending. This element is only included when changes
                    are pending. Specific changes are identified by subelements.
                  properties:
                    allocatedStorage:
                      description: AllocatedStorage contains the new AllocatedStorage
                        size for the DB instance that will be applied or is currently
                        being applied.
                      type: integer
                    backupRetentionPeriod:
                      description: BackupRetentionPeriod specifies the pending number
                        of days for which automated backups are retained.
                      type: integer
                    caCertificateIdentifier:
                      description: CACertificateIdentifier specifies the identifier
                        of the CA certificate for the DB instance.
                      type: string
                    dbInstanceClass:
                      description: DBInstanceClass contains the new DBInstanceClass
                        for the DB instance that will be applied or is currently being
                        applied.
                      type: string
                    dbSubnetGroupName:
                      description: DBSubnetGroupName is the new DB subnet group for
                        the DB instance.
                      type: string
                    engineVersion:
                      description: EngineVersion indicates the database engine version.
                      type: string
                    iops:
                      description: IOPS specifies the new Provisioned IOPS value for
                        the DB instance that will be applied or is currently being
                        applied.
                      type: integer
                    licenseModel:
                      description: 'LicenseModel is the license model for the DB instance.
                        Valid values: license-included | bring-your-own-license |
                        general-public-license'
                      type: string
                    multiAZ:
                      description: MultiAZ indicates that the Single-AZ DB instance
                        is to change to a Multi-AZ deployment.
                      type: boolean
                    pendingCloudwatchLogsExports:
                      description: PendingCloudwatchLogsExports is a list of the log
                        types whose configuration is still pending. In other words,
                        these log types are in the process of being activated or deactivated.
                      properties:
                        logTypesToDisable:
                          description: LogTypesToDisable is list of log types that
                            are in the process of being enabled. After they are enabled,
                            these log types are exported to CloudWatch Logs.
                          items:
                            type: string
                          type: array
                        logTypesToEnable:
                          description: LogTypesToEnable is the log types that are
                            in the process of being deactivated. After they are deactivated,
                            these log types aren't exported to CloudWatch Logs.
                          items:
                            type: string
                          type: array
                      type: object
                    port:
                      description: Port specifies the pending port for the DB instance.
                      type: integer
                    processorFeatures:
                      description: ProcessorFeatures is the number of CPU cores and
                        the number of threads per core for the DB instance class of
                        the DB instance.
                      items:
                        description: ProcessorFeature is a processor feature entry.
                          For more information, see Configuring the Processor of the
                          DB Instance Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                          in the Amazon RDS User Guide. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ProcessorFeature
                        properties:
                          name:
                            description: Name of the processor feature. Valid names
                              are coreCount and threadsPerCore.
                            type: string
                          value:
                            description: Value of a processor feature name.
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    storageType:
                      description: StorageType specifies the storage type to be associated
                        with the DB instance.
                      type: string
                  type: object
                performanceInsightsEnabled:
                  description: PerformanceInsightsEnabled is true if Performance Insights
                    is enabled for the DB instance, and otherwise false.
                  type: boolean
                readReplicaDBClusterIdentifiers:
                  description: ReadReplicaDBClusterIdentifiers contains one or more
                    identifiers of Aurora DB clusters to which the RDS DB instance
                    is replicated as a Read Replica. For example, when you create
                    an Aurora Read Replica of an RDS MySQL DB instance, the Aurora
                    MySQL DB cluster for the Aurora Read Replica is shown. This output
                    does not contain information about cross region Aurora Read Replicas.
                  items:
                    type: string
                  type: array
                readReplicaDBInstanceIdentifiers:
                  description: ReadReplicaDBInstanceIdentifiers contains one or more
                    identifiers of the Read Replicas associated with this DB instance.
                  items:
                    type: string
                  type: array
                readReplicaSourceDBInstanceIdentifier:
                  description: ReadReplicaSourceDBInstanceIdentifier contains the
                    identifier of the source DB instance if this DB instance is a
                    Read Replica.
                  type: string
                secondaryAvailabilityZone:
                  description: SecondaryAvailabilityZone specifies the name of the
                    secondary Availability Zone for a DB instance with multi-AZ support
                    when it is present.
                  type: string
                statusInfos:
                  description: StatusInfos is the status of a Read Replica. If the
                    instance is not a Read Replica, this is blank.
                  items:
                    description: DBInstanceStatusInfo provides a list of status information
                      for a DB instance. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/DBInstanceStatusInfo
                    properties:
                      message:
                        description: Message is the details of the error if there
                          is an error for the instance. If the instance is not in
                          an error state, this value is blank.
                        type: string
                      normal:
                        description: Normal is true if the instance is operating normally,
                          or false if the instance is in an error state.
                        type: boolean
                      status:
                        description: Status of the DB instance. For a StatusType of
                          read replica, the values can be replicating, replication
                          stop point set, replication stop point reached, error, stopped,
                          or terminated.
                        type: string
                      statusType:
                        description: StatusType is currently "read replication."
                        type: string
                    type: object
                  type: array
                vpcSecurityGroups:
                  description: VPCSecurityGroups provides a list of VPC security group
                    elements that the DB instance belongs to.
                  items:
                    description: VPCSecurityGroupMembership is used as a response
                      element for queries on VPC security group membership. Please
                      also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/VpcSecurityGroupMembership
                    properties:
                      status:
                        description: Status is the status of the VPC security group.
                        type: string
                      vpcSecurityGroupId:
                        description: VPCSecurityGroupID is the name of the VPC security
                          group.
                        type: string
                    type: object
                  type: array
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: resourcerecordsets.route53.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: EXTERNAL-NAME
    type: string
  - JSONPath: .spec.forProvider.type
    name: TYPE
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: route53.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ResourceRecordSet
    listKind: ResourceRecordSetList
    plural: resourcerecordsets
    singular: resourcerecordset
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ResourceRecordSet is a managed resource that represents an AWS
        Route53 Resource Record.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ResourceRecordSetSpec defines the desired state of an AWS Route53
            Resource Record.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: ResourceRecordSetParameters define the desired state of
                an AWS Route53 Resource Record.
              properties:
                aliasTarget:
                  description: "Alias resource record sets only: Information about
                    the AWS resource, such as a CloudFront distribution or an Amazon
                    S3 bucket, that you want to route traffic to. \n If you're creating
                    resource records sets for a private hosted zone, note the following:
                    \n    * You can't create an alias resource record set in a private
                    hosted zone    to route traffic to a CloudFront distribution.
                    \n    * Creating geolocation alias resource record sets or latency
                    alias resource    record sets in a private hosted zone is unsupported.
                    \n    * For information about creating failover resource record
                    sets in a private    hosted zone, see Configuring Failover in
                    a Private Hosted Zone (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)
                    \   in the Amazon Route 53 Developer Guide."
                  properties:
                    dnsName:
                      description: "Alias resource record sets only: The value that
                        you specify depends on where you want to route queries: \n
                        Amazon API Gateway custom regional APIs and edge-optimized
                        APIs \n Specify the applicable domain name for your API. You
                        can get the applicable value using the AWS CLI command get-domain-names
                        (https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):
                        \n    * For regional APIs, specify the value of regionalDomainName.
                        \n    * For edge-optimized APIs, specify the value of distributionDomainName.
                        \   This is the name of the associated CloudFront distribution,
                        such as da1b2c3d4e5.cloudfront.net. \n The name of the record
                        that you're creating must match a custom domain name for your
                        API, such as api.example.com. \n Amazon Virtual Private Cloud
                        interface VPC endpoint \n Enter the API endpoint for the interface
                        endpoint, such as vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com.
                        For edge-optimized APIs, this is the domain name for the corresponding
                        CloudFront distribution. You can get the value of DnsName
                        using the AWS CLI command describe-vpc-endpoints (https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html).
                        \n CloudFront distribution \n Specify the domain name that
                        CloudFront assigned when you created your distribution. \n
                        Your CloudFront distribution must include an alternate domain
                        name that matches the name of the resource record set. For
                        example, if the name of the resource record set is acme.example.com,
                        your CloudFront distribution must include acme.example.com
                        as one of the alternate domain names. For more information,
                        see Using Alternate Domain Names (CNAMEs) (https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html)
                        in the Amazon CloudFront Developer Guide. \n You can't create
                        a resource record set in a private hosted zone to route traffic
                        to a CloudFront distribution. \n For failover alias records,
                        you can't specify a CloudFront distribution for both the primary
                        and secondary records. A distribution must include an alternate
                        domain name that matches the name of the record. However,
                        the primary and secondary records have the same name, and
                        you can't include the same alternate domain name in more than
                        one distribution. \n Elastic Beanstalk environment \n If the
                        domain name for your Elastic Beanstalk environment includes
                        the region that you deployed the environment in, you can create
                        an alias record that routes traffic to the environment. For
                        example, the domain name my-environment.us-west-2.elasticbeanstalk.com
                        is a regionalized domain name. \n For environments that were
                        created before early 2016, the domain name doesn't include
                        the region. To route traffic to these environments, you must
                        create a CNAME record instead of an alias record. Note that
                        you can't create a CNAME record for the root domain name.
                        For example, if your domain name is example.com, you can create
                        a record that routes traffic for acme.example.com to your
                        Elastic Beanstalk environment, but you can't create a record
                        that routes traffic for example.com to your Elastic Beanstalk
                        environment. \n For Elastic Beanstalk environments that have
                        regionalized subdomains, specify the CNAME attribute for the
                        environment. You can use the following methods to get the
                        value of the CNAME attribute: \n    * AWS Management Console:
                        For information about how to get the value by    using the
                        console, see Using Custom Domains with AWS Elastic Beanstalk
                        \   (https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html)
                        \   in the AWS Elastic Beanstalk Developer Guide. \n    *
                        Elastic Beanstalk API: Use the DescribeEnvironments action
                        to get the    value of the CNAME attribute. For more information,
                        see DescribeEnvironments    (https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_DescribeEnvironments.html)
                        \   in the AWS Elastic Beanstalk API Reference. \n    * AWS
                        CLI: Use the describe-environments command to get the value
                        of the    CNAME attribute. For more information, see describe-environments
                        (https://docs.aws.amazon.com/cli/latest/reference/elasticbeanstalk/describe-environments.html)
                        \   in the AWS CLI Command Reference. \n ELB load balancer
                        \n Specify the DNS name that is associated with the load balancer.
                        Get the DNS name by using the AWS Management Console, the
                        ELB API, or the AWS CLI. \n    * AWS Management Console: Go
                        to the EC2 page, choose Load Balancers in    the navigation
                        pane, choose the load balancer, choose the Description    tab,
                        and get the value of the DNS name field. If you're routing
                        traffic    to a Classic Load Balancer, get the value that
                        begins with dualstack.    If you're routing traffic to another
                        type of load balancer, get the value    that applies to the
                        record type, A or AAAA. \n    * Elastic Load Balancing API:
                        Use DescribeLoadBalancers to get the value    of DNSName.
                        For more information, see the applicable guide: Classic Load
                        \   Balancers: DescribeLoadBalancers (https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_DescribeLoadBalancers.html)
                        \   Application and Network Load Balancers: DescribeLoadBalancers
                        (https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html)
                        \n    * AWS CLI: Use describe-load-balancers to get the value
                        of DNSName. For    more information, see the applicable guide:
                        Classic Load Balancers: describe-load-balancers    (http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html)
                        \   Application and Network Load Balancers: describe-load-balancers
                        (http://docs.aws.amazon.com/cli/latest/reference/elbv2/describe-load-balancers.html)
                        \n AWS Global Accelerator accelerator \n Specify the DNS name
                        for your accelerator: \n    * Global Accelerator API: To get
                        the DNS name, use DescribeAccelerator    (https://docs.aws.amazon.com/global-accelerator/latest/api/API_DescribeAccelerator.html).
                        \n    * AWS CLI: To get the DNS name, use describe-accelerator
                        (https://docs.aws.amazon.com/cli/latest/reference/globalaccelerator/describe-accelerator.html).
                        \n Amazon S3 bucket that is configured as a static website
                        \n Specify the domain name of the Amazon S3 website endpoint
                        that you created the bucket in, for example, s3-website.us-east-2.amazonaws.com.
                        For more information about valid values, see the table Amazon
                        S3 Website Endpoints (https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_website_region_endpoints)
                        in the Amazon Web Services General Reference. For more information
                        about using S3 buckets for websites, see Getting Started with
                        Amazon Route 53 (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/getting-started.html)
                        in the Amazon Route 53 Developer Guide. \n Another Route 53
                        resource record set \n Specify the value of the Name element
                        for a resource record set in the current hosted zone. \n If
                        you're creating an alias record that has the same name as
                        the hosted zone (known as the zone apex), you can't specify
                        the domain name for a record for which the value of Type is
                        CNAME. This is because the alias record must have the same
                        type as the record that you're routing traffic to, and creating
                        a CNAME record for the zone apex isn't supported even for
                        an alias record."
                      type: string
                    evaluateTargetHealth:
                      description: "Applies only to alias, failover alias, geolocation
                        alias, latency alias, and weighted alias resource record sets:
                        When EvaluateTargetHealth is true, an alias resource record
                        set inherits the health of the referenced AWS resource, such
                        as an ELB load balancer or another resource record set in
                        the hosted zone. \n Note the following: \n CloudFront distributions
                        \n You can't set EvaluateTargetHealth to true when the alias
                        target is a CloudFront distribution. \n Elastic Beanstalk
                        environments that have regionalized subdomains \n If you specify
                        an Elastic Beanstalk environment in DNSName and the environment
                        contains an ELB load balancer, Elastic Load Balancing routes
                        queries only to the healthy Amazon EC2 instances that are
                        registered with the load balancer. (An environment automatically
                        contains an ELB load balancer if it includes more than one
                        Amazon EC2 instance.) If you set EvaluateTargetHealth to true
                        and either no Amazon EC2 instances are healthy or the load
                        balancer itself is unhealthy, Route 53 routes queries to other
                        available resources that are healthy, if any. \n If the environment
                        contains a single Amazon EC2 instance, there are no special
                        requirements. \n ELB load balancers \n Health checking behavior
                        depends on the type of load balancer: \n    * Classic Load
                        Balancers: If you specify an ELB Classic Load Balancer    in
                        DNSName, Elastic Load Balancing routes queries only to the
                        healthy    Amazon EC2 instances that are registered with the
                        load balancer. If you    set EvaluateTargetHealth to true
                        and either no EC2 instances are healthy    or the load balancer
                        itself is unhealthy, Route 53 routes queries to other    resources.
                        \n    * Application and Network Load Balancers: If you specify
                        an ELB Application    or Network Load Balancer and you set
                        EvaluateTargetHealth to true, Route    53 routes queries to
                        the load balancer based on the health of the target    groups
                        that are associated with the load balancer: For an Application
                        \   or Network Load Balancer to be considered healthy, every
                        target group    that contains targets must contain at least
                        one healthy target. If any    target group contains only unhealthy
                        targets, the load balancer is considered    unhealthy, and
                        Route 53 routes queries to other resources. A target group
                        \   that has no registered targets is considered unhealthy.
                        \n When you create a load balancer, you configure settings
                        for Elastic Load Balancing health checks; they're not Route
                        53 health checks, but they perform a similar function. Do
                        not create Route 53 health checks for the EC2 instances that
                        you register with an ELB load balancer. \n S3 buckets \n There
                        are no special requirements for setting EvaluateTargetHealth
                        to true when the alias target is an S3 bucket. \n Other records
                        in the same hosted zone \n If the AWS resource that you specify
                        in DNSName is a record or a group of records (for example,
                        a group of weighted records) but is not another alias record,
                        we recommend that you associate a health check with all of
                        the records in the alias target. For more information, see
                        What Happens When You Omit Health Checks? (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html#dns-failover-complex-configs-hc-omitting)
                        in the Amazon Route 53 Developer Guide. \n For more information
                        and examples, see Amazon Route 53 Health Checks and DNS Failover
                        (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html)
                        in the Amazon Route 53 Developer Guide."
                      type: boolean
                    hostedZoneId:
                      description: "Alias resource records sets only: The value used
                        depends on where you want to route traffic: \n Amazon API
                        Gateway custom regional APIs and edge-optimized APIs \n Specify
                        the hosted zone ID for your API. You can get the applicable
                        value using the AWS CLI command get-domain-names (https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html):
                        \n    * For regional APIs, specify the value of regionalHostedZoneId.
                        \n    * For edge-optimized APIs, specify the value of distributionHostedZoneId.
                        \n Amazon Virtual Private Cloud interface VPC endpoint \n
                        Specify the hosted zone ID for your interface endpoint. You
                        can get the value of HostedZoneId using the AWS CLI command
                        describe-vpc-endpoints (https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html).
                        \n CloudFront distribution \n Specify Z2FDTNDATAQYW2. \n Alias
                        resource record sets for CloudFront can't be created in a
                        private zone. \n Elastic Beanstalk environment \n Specify
                        the hosted zone ID for the region that you created the environment
                        in. The environment must have a regionalized subdomain. For
                        a list of regions and the corresponding hosted zone IDs, see
                        AWS Elastic Beanstalk (https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region)
                        in the \"AWS Service Endpoints\" chapter of the Amazon Web
                        Services General Reference. \n ELB load balancer \n Specify
                        the value of the hosted zone ID for the load balancer. Use
                        the following methods to get the hosted zone ID: \n    * Service
                        Endpoints (https://docs.aws.amazon.com/general/latest/gr/elb.html)
                        \   table in the \"Elastic Load Balancing Endpoints and Quotas\"
                        topic in the    Amazon Web Services General Reference: Use
                        the value that corresponds    with the region that you created
                        your load balancer in. Note that there    are separate columns
                        for Application and Classic Load Balancers and for    Network
                        Load Balancers. \n    * AWS Management Console: Go to the
                        Amazon EC2 page, choose Load Balancers    in the navigation
                        pane, select the load balancer, and get the value of    the
                        Hosted zone field on the Description tab. \n    * Elastic
                        Load Balancing API: Use DescribeLoadBalancers to get the applicable
                        \   value. For more information, see the applicable guide:
                        Classic Load Balancers:    Use DescribeLoadBalancers (https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_DescribeLoadBalancers.html)
                        \   to get the value of CanonicalHostedZoneNameId. Application
                        and Network    Load Balancers: Use DescribeLoadBalancers (https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html)
                        \   to get the value of CanonicalHostedZoneId. \n    * AWS
                        CLI: Use describe-load-balancers to get the applicable value.
                        For    more information, see the applicable guide: Classic
                        Load Balancers: Use    describe-load-balancers (http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html)
                        \   to get the value of CanonicalHostedZoneNameId. Application
                        and Network    Load Balancers: Use describe-load-balancers
                        (http://docs.aws.amazon.com/cli/latest/reference/elbv2/describe-load-balancers.html)
                        \   to get the value of CanonicalHostedZoneId. \n AWS Global
                        Accelerator accelerator \n Specify Z2BJ6XQ5FK7U4H. \n An Amazon
                        S3 bucket configured as a static website \n Specify the hosted
                        zone ID for the region that you created the bucket in. For
                        more information about valid values, see the table Amazon
                        S3 Website Endpoints (https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_website_region_endpoints)
                        in the Amazon Web Services General Reference. \n Another Route
                        53 resource record set in your hosted zone \n Specify the
                        hosted zone ID of your hosted zone. (An alias resource record
                        set can't reference a resource record set in a different hosted
                        zone.)"
                      type: string
                  required:
                  - dnsName
                  - evaluateTargetHealth
                  - hostedZoneId
                  type: object
                failover:
                  description: "Failover resource record sets only: To configure failover,
                    you add the Failover element to two resource record sets. For
                    one resource record set, you specify PRIMARY as the value for
                    Failover; for the other resource record set, you specify SECONDARY.
                    In addition, you include the HealthCheckId element and specify
                    the health check that you want Amazon Route 53 to perform for
                    each resource record set. \n Except where noted, the following
                    failover behaviors assume that you have included the HealthCheckId
                    element in both resource record sets: \n    * When the primary
                    resource record set is healthy, Route 53 responds to    DNS queries
                    with the applicable value from the primary resource record    set
                    regardless of the health of the secondary resource record set.
                    \n    * When the primary resource record set is unhealthy and
                    the secondary    resource record set is healthy, Route 53 responds
                    to DNS queries with    the applicable value from the secondary
                    resource record set. \n    * When the secondary resource record
                    set is unhealthy, Route 53 responds    to DNS queries with the
                    applicable value from the primary resource record    set regardless
                    of the health of the primary resource record set. \n    * If you
                    omit the HealthCheckId element for the secondary resource record
                    \   set, and if the primary resource record set is unhealthy,
                    Route 53 always    responds to DNS queries with the applicable
                    value from the secondary resource    record set. This is true
                    regardless of the health of the associated endpoint. \n You can't
                    create non-failover resource record sets that have the same values
                    for the Name and Type elements as failover resource record sets.
                    \n For failover alias resource record sets, you must also include
                    the EvaluateTargetHealth element and set the value to true. \n
                    For more information about configuring failover for Route 53,
                    see the following topics in the Amazon Route 53 Developer Guide:
                    \n    * Route 53 Health Checks and DNS Failover (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html)
                    \n    * Configuring Failover in a Private Hosted Zone (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)"
                  type: string
                geoLocation:
                  description: "Geolocation resource record sets only: A complex type
                    that lets you control how Amazon Route 53 responds to DNS queries
                    based on the geographic origin of the query. For example, if you
                    want all queries from Africa to be routed to a web server with
                    an IP address of 192.0.2.111, create a resource record set with
                    a Type of A and a ContinentCode of AF. \n Although creating geolocation
                    and geolocation alias resource record sets in a private hosted
                    zone is allowed, it's not supported. \n If you create separate
                    resource record sets for overlapping geographic regions (for example,
                    one resource record set for a continent and one for a country
                    on the same continent), priority goes to the smallest geographic
                    region. This allows you to route most queries for a continent
                    to one resource and to route queries for a country on that continent
                    to a different resource. \n You can't create two geolocation resource
                    record sets that specify the same geographic location. \n The
                    value * in the CountryCode element matches all geographic locations
                    that aren't specified in other geolocation resource record sets
                    that have the same values for the Name and Type elements. \n Geolocation
                    works by mapping IP addresses to locations. However, some IP addresses
                    aren't mapped to geographic locations, so even if you create geolocation
                    resource record sets that cover all seven continents, Route 53
                    will receive some DNS queries from locations that it can't identify.
                    We recommend that you create a resource record set for which the
                    value of CountryCode is *. Two groups of queries are routed to
                    the resource that you specify in this record: queries that come
                    from locations for which you haven't created geolocation resource
                    record sets and queries from IP addresses that aren't mapped to
                    a location. If you don't create a * resource record set, Route
                    53 returns a \"no answer\" response for queries from those locations.
                    \n You can't create non-geolocation resource record sets that
                    have the same values for the Name and Type elements as geolocation
                    resource record sets."
                  properties:
                    continentCode:
                      description: 'ContinentCode is the two-letter code for the continent.
                        Amazon Route 53 supports the following continent codes:    *
                        AF: Africa    * AN: Antarctica    * AS: Asia    * EU: Europe    *
                        OC: Oceania    * NA: North America    * SA: South America
                        Constraint: Specifying ContinentCode with either CountryCode
                        or SubdivisionCode returns an InvalidInput error.'
                      type: string
                    countryCode:
                      description: "For geolocation resource record sets, the two-letter
                        code for a country. \n Amazon Route 53 uses the two-letter
                        country codes that are specified in ISO standard 3166-1 alpha-2
                        (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
                      type: string
                    subdivisionCode:
                      description: "For geolocation resource record sets, the two-letter
                        code for a state of the United States. Route 53 doesn't support
                        any other values for SubdivisionCode. For a list of state
                        abbreviations, see Appendix B: Two–Letter State and Possession
                        Abbreviations (https://pe.usps.com/text/pub28/28apb.htm) on
                        the United States Postal Service website. \n If you specify
                        subdivision code, you must also specify US for CountryCode."
                      type: string
                  type: object
                healthCheckId:
                  description: "If you want Amazon Route 53 to return this resource
                    record set in response to a DNS query only when the status of
                    a health check is healthy, include the HealthCheckId element and
                    specify the ID of the applicable health check. \n Route 53 determines
                    whether a resource record set is healthy based on one of the following:
                    \n    * By periodically sending a request to the endpoint that
                    is specified    in the health check \n    * By aggregating the
                    status of a specified group of health checks (calculated    health
                    checks) \n    * By determining the current state of a CloudWatch
                    alarm (CloudWatch metric    health checks) \n Route 53 doesn't
                    check the health of the endpoint that is specified in the resource
                    record set, for example, the endpoint specified by the IP address
                    in the Value element. When you add a HealthCheckId element to
                    a resource record set, Route 53 checks the health of the endpoint
                    that you specified in the health check. \n For more information,
                    see the following topics in the Amazon Route 53 Developer Guide:
                    \n    * How Amazon Route 53 Determines Whether an Endpoint Is
                    Healthy (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html)
                    \n    * Route 53 Health Checks and DNS Failover (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html)
                    \n    * Configuring Failover in a Private Hosted Zone (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html)
                    \n When to Specify HealthCheckId \n Specifying a value for HealthCheckId
                    is useful only when Route 53 is choosing between two or more resource
                    record sets to respond to a DNS query, and you want Route 53 to
                    base the choice in part on the status of a health check. Configuring
                    health checks makes sense only in the following configurations:
                    \n    * Non-alias resource record sets: You're checking the health
                    of a group    of non-alias resource record sets that have the
                    same routing policy, name,    and type (such as multiple weighted
                    records named www.example.com with    a type of A) and you specify
                    health check IDs for all the resource record    sets. If the health
                    check status for a resource record set is healthy,    Route 53
                    includes the record among the records that it responds to DNS
                    \   queries with. If the health check status for a resource record
                    set is    unhealthy, Route 53 stops responding to DNS queries
                    using the value for    that resource record set. If the health
                    check status for all resource    record sets in the group is unhealthy,
                    Route 53 considers all resource    record sets in the group healthy
                    and responds to DNS queries accordingly. \n    * Alias resource
                    record sets: You specify the following settings: You    set EvaluateTargetHealth
                    to true for an alias resource record set in a    group of resource
                    record sets that have the same routing policy, name,    and type
                    (such as multiple weighted records named www.example.com with
                    \   a type of A). You configure the alias resource record set
                    to route traffic    to a non-alias resource record set in the
                    same hosted zone. You specify    a health check ID for the non-alias
                    resource record set. If the health    check status is healthy,
                    Route 53 considers the alias resource record    set to be healthy
                    and includes the alias record among the records that    it responds
                    to DNS queries with. If the health check status is unhealthy,
                    \   Route 53 stops responding to DNS queries using the alias resource
                    record    set. The alias resource record set can also route traffic
                    to a group of    non-alias resource record sets that have the
                    same routing policy, name,    and type. In that configuration,
                    associate health checks with all of the    resource record sets
                    in the group of non-alias resource record sets. \n Geolocation
                    Routing \n For geolocation resource record sets, if an endpoint
                    is unhealthy, Route 53 looks for a resource record set for the
                    larger, associated geographic region. For example, suppose you
                    have resource record sets for a state in the United States, for
                    the entire United States, for North America, and a resource record
                    set that has * for CountryCode is *, which applies to all locations.
                    If the endpoint for the state resource record set is unhealthy,
                    Route 53 checks for healthy resource record sets in the following
                    order until it finds a resource record set for which the endpoint
                    is healthy: \n    * The United States \n    * North America \n
                    \   * The default resource record set \n Specifying the Health
                    Check Endpoint by Domain Name \n If your health checks specify
                    the endpoint only by domain name, we recommend that you create
                    a separate health check for each endpoint. For example, create
                    a health check for each HTTP server that is serving content for
                    www.example.com. For the value of FullyQualifiedDomainName, specify
                    the domain name of the server (such as us-east-2-www.example.com),
                    not the name of the resource record sets (www.example.com). \n
                    Health check results will be unpredictable if you do the following:
                    \n    * Create a health check that has the same value for FullyQualifiedDomainName
                    \   as the name of a resource record set. \n    * Associate that
                    health check with the resource record set."
                  type: string
                multiValueAnswer:
                  description: "Multivalue answer resource record sets only: To route
                    traffic approximately randomly to multiple resources, such as
                    web servers, create one multivalue answer record for each resource
                    and specify true for MultiValueAnswer. Note the following: \n
                    \   * If you associate a health check with a multivalue answer
                    resource record    set, Amazon Route 53 responds to DNS queries
                    with the corresponding IP    address only when the health check
                    is healthy. \n    * If you don't associate a health check with
                    a multivalue answer record,    Route 53 always considers the record
                    to be healthy. \n    * Route 53 responds to DNS queries with up
                    to eight healthy records; if    you have eight or fewer healthy
                    records, Route 53 responds to all DNS    queries with all the
                    healthy records. \n    * If you have more than eight healthy records,
                    Route 53 responds to different    DNS resolvers with different
                    combinations of healthy records. \n    * When all records are
                    unhealthy, Route 53 responds to DNS queries with    up to eight
                    unhealthy records. \n    * If a resource becomes unavailable after
                    a resolver caches a response,    client software typically tries
                    another of the IP addresses in the response. \n You can't create
                    multivalue answer alias records."
                  type: boolean
                region:
                  description: "Latency-based resource record sets only: The Amazon
                    EC2 Region where you created the resource that this resource record
                    set refers to. The resource typically is an AWS resource, such
                    as an EC2 instance or an ELB load balancer, and is referred to
                    by an IP address or a DNS domain name, depending on the record
                    type. \n Although creating latency and latency alias resource
                    record sets in a private hosted zone is allowed, it's not supported.
                    \n When Amazon Route 53 receives a DNS query for a domain name
                    and type for which you have created latency resource record sets,
                    Route 53 selects the latency resource record set that has the
                    lowest latency between the end user and the associated Amazon
                    EC2 Region. Route 53 then returns the value that is associated
                    with the selected resource record set. \n Note the following:
                    \n    * You can only specify one ResourceRecord per latency resource
                    record    set. \n    * You can only create one latency resource
                    record set for each Amazon    EC2 Region. \n    * You aren't required
                    to create latency resource record sets for all Amazon    EC2 Regions.
                    Route 53 will choose the region with the best latency from    among
                    the regions that you create latency resource record sets for.
                    \n    * You can't create non-latency resource record sets that
                    have the same    values for the Name and Type elements as latency
                    resource record sets."
                  type: string
                resourceRecords:
                  description: "Information about the resource records to act upon.
                    \n If you're creating an alias resource record set, omit ResourceRecords."
                  items:
                    description: ResourceRecord holds the DNS value to be used for
                      the record.
                    properties:
                      value:
                        description: "The current or new DNS record value, not to
                          exceed 4,000 characters. In the case of a DELETE action,
                          if the current value does not match the actual value, an
                          error is returned. For descriptions about how to format
                          Value for different record types, see Supported DNS Resource
                          Record Types (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html)
                          in the Amazon Route 53 Developer Guide. \n You can specify
                          more than one value for all record types except CNAME and
                          SOA. \n If you're creating an alias resource record set,
                          omit Value."
                        type: string
                    required:
                    - value
                    type: object
                  type: array
                setIdentifier:
                  description: "Resource record sets that have a routing policy other
                    than simple: An identifier that differentiates among multiple
                    resource record sets that have the same combination of name and
                    type, such as multiple weighted resource record sets named acme.example.com
                    that have a type of A. In a group of resource record sets that
                    have the same name and type, the value of SetIdentifier must be
                    unique for each resource record set. \n For information about
                    routing policies, see Choosing a Routing Policy (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html)
                    in the Amazon Route 53 Developer Guide."
                  type: string
                trafficPolicyInstanceId:
                  description: "When you create a traffic policy instance, Amazon
                    Route 53 automatically creates a resource record set. TrafficPolicyInstanceId
                    is the ID of the traffic policy instance that Route 53 created
                    this resource record set for. \n To delete the resource record
                    set that is associated with a traffic policy instance, use DeleteTrafficPolicyInstance.
                    Route 53 will delete the resource record set automatically. If
                    you delete the resource record set by using ChangeResourceRecordSets,
                    Route 53 doesn't automatically delete the traffic policy instance,
                    and you'll continue to be charged for it even though it's no longer
                    in use."
                  type: string
                ttl:
                  description: "The resource record cache time to live (TTL), in seconds.
                    Note the following: \n    * If you're creating or updating an
                    alias resource record set, omit TTL.    Amazon Route 53 uses the
                    value of TTL for the alias target. \n    * If you're associating
                    this resource record set with a health check (if    you're adding
                    a HealthCheckId element), we recommend that you specify    a TTL
                    of 60 seconds or less so clients respond quickly to changes in
                    health    status. \n    * All of the resource record sets in a
                    group of weighted resource record    sets must have the same value
                    for TTL. \n    * If a group of weighted resource record sets includes
                    one or more weighted    alias resource record sets for which the
                    alias target is an ELB load balancer,    we recommend that you
                    specify a TTL of 60 seconds for all of the non-alias    weighted
                    resource record sets that have the same name and type. Values
                    \   other than 60 seconds (the TTL for load balancers) will change
                    the effect    of the values that you specify for Weight."
                  format: int64
                  type: integer
                type:
                  description: "The DNS record type. For information about different
                    record types and how data is encoded for them, see Supported DNS
                    Resource Record Types (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html)
                    in the Amazon Route 53 Developer Guide. \n Valid values for basic
                    resource record sets: A | AAAA | CAA | CNAME | MX | NAPTR | NS
                    | PTR | SOA | SPF | SRV | TXT \n Values for weighted, latency,
                    geolocation, and failover resource record sets: A | AAAA | CAA
                    | CNAME | MX | NAPTR | PTR | SPF | SRV | TXT. When creating a
                    group of weighted, latency, geolocation, or failover resource
                    record sets, specify the same value for all of the resource record
                    sets in the group. \n Valid values for multivalue answer resource
                    record sets: A | AAAA | MX | NAPTR | PTR | SPF | SRV | TXT \n
                    SPF records were formerly used to verify the identity of the sender
                    of email messages. However, we no longer recommend that you create
                    resource record sets for which the value of Type is SPF. RFC 7208,
                    Sender Policy Framework (SPF) for Authorizing Use of Domains in
                    Email, Version 1, has been updated to say, \"...[I]ts existence
                    and mechanism defined in [RFC4408] have led to some interoperability
                    issues. Accordingly, its use is no longer appropriate for SPF
                    version 1; implementations are not to use it.\" In RFC 7208, see
                    section 14.1, The SPF DNS Record Type (http://tools.ietf.org/html/rfc7208#section-14.1).
                    \n Values for alias resource record sets: \n    * Amazon API Gateway
                    custom regional APIs and edge-optimized APIs: A \n    * CloudFront
                    distributions: A If IPv6 is enabled for the distribution,    create
                    two resource record sets to route traffic to your distribution,
                    \   one with a value of A and one with a value of AAAA. \n    *
                    Amazon API Gateway environment that has a regionalized subdomain:
                    A \n    * ELB load balancers: A | AAAA \n    * Amazon S3 buckets:
                    A \n    * Amazon Virtual Private Cloud interface VPC endpoints
                    A \n    * Another resource record set in this hosted zone: Specify
                    the type of    the resource record set that you're creating the
                    alias for. All values    are supported except NS and SOA. If you're
                    creating an alias record that    has the same name as the hosted
                    zone (known as the zone apex), you can't    route traffic to a
                    record for which the value of Type is CNAME. This is    because
                    the alias record must have the same type as the record you're
                    \   routing traffic to, and creating a CNAME record for the zone
                    apex isn't    supported even for an alias record."
                  type: string
                weight:
                  description: "Weighted resource record sets only: Among resource
                    record sets that have the same combination of DNS name and type,
                    a value that determines the proportion of DNS queries that Amazon
                    Route 53 responds to using the current resource record set. Route
                    53 calculates the sum of the weights for the resource record sets
                    that have the same combination of DNS name and type. Route 53
                    then responds to queries based on the ratio of a resource's weight
                    to the total. Note the following: \n    * You must specify a value
                    for the Weight element for every weighted resource    record set.
                    \n    * You can only specify one ResourceRecord per weighted resource
                    record    set. \n    * You can't create latency, failover, or
                    geolocation resource record sets    that have the same values
                    for the Name and Type elements as weighted resource    record
                    sets. \n    * You can create a maximum of 100 weighted resource
                    record sets that have    the same values for the Name and Type
                    elements. \n    * For weighted (but not weighted alias) resource
                    record sets, if you set    Weight to 0 for a resource record set,
                    Route 53 never responds to queries    with the applicable value
                    for that resource record set. However, if you    set Weight to
                    0 for all resource record sets that have the same combination
                    \   of DNS name and type, traffic is routed to all resources with
                    equal probability.    The effect of setting Weight to 0 is different
                    when you associate health    checks with weighted resource record
                    sets. For more information, see Options    for Configuring Route
                    53 Active-Active and Active-Passive Failover (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html)
                    \   in the Amazon Route 53 Developer Guide."
                  format: int64
                  type: integer
                zoneId:
                  description: ZoneID is the ID of the hosted zone that contains the
                    resource record sets that you want to change.
                  type: string
                zoneIdRef:
                  description: ZoneIDRef references a Zone to retrieves its ZoneId
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                zoneIdSelector:
                  description: ZoneIDSelector selects a reference to a Zone to retrieves
                    its ZoneID
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - type
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: ResourceRecordSetStatus represents the observed state of a
            ResourceRecordSet.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: replicationgroups.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.atProvider.status
    name: STATE
    type: string
  - JSONPath: .spec.forProvider.engineVersion
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ReplicationGroup
    listKind: ReplicationGroupList
    plural: replicationgroups
    singular: replicationgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A ReplicationGroup is a managed resource that represents an AWS
        ElastiCache Replication Group.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ReplicationGroupSpec defines the desired state of a ReplicationGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: 'ReplicationGroupParameters define the desired state of
                an AWS ElastiCache Replication Group. Most fields map directly to
                an AWS ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters'
              properties:
                applyModificationsImmediately:
                  description: "If true, this parameter causes the modifications in
                    this request and any pending modifications to be applied, asynchronously
                    and as soon as possible, regardless of the PreferredMaintenanceWindow
                    setting for the replication group. \n If false, changes to the
                    nodes in the replication group are applied on the next maintenance
                    reboot, or the next failure reboot, whichever occurs first."
                  type: boolean
                atRestEncryptionEnabled:
                  description: "AtRestEncryptionEnabled enables encryption at rest
                    when set to true. \n You cannot modify the value of AtRestEncryptionEnabled
                    after the replication group is created. To enable encryption at
                    rest on a replication group you must set AtRestEncryptionEnabled
                    to true when you create the replication group. \n Only available
                    when creating a replication group in an Amazon VPC using redis
                    version 3.2.6 or 4.x."
                  type: boolean
                authEnabled:
                  description: "AuthEnabled enables mandatory authentication when
                    connecting to the managed replication group. AuthEnabled requires
                    TransitEncryptionEnabled to be true. \n While ReplicationGroupSpec
                    mirrors the fields of the upstream replication group object as
                    closely as possible, we expose a boolean here rather than requiring
                    the operator pass in a string authentication token. Crossplane
                    will generate a token automatically and expose it via a Secret."
                  type: boolean
                automaticFailoverEnabled:
                  description: "AutomaticFailoverEnabled specifies whether a read-only
                    replica is automatically promoted to read/write primary if the
                    existing primary fails. If true, Multi-AZ is enabled for this
                    replication group. If false, Multi-AZ is disabled for this replication
                    group. \n AutomaticFailoverEnabled must be enabled for Redis (cluster
                    mode enabled) replication groups. \n Amazon ElastiCache for Redis
                    does not support Multi-AZ with automatic failover on: * Redis
                    versions earlier than 2.8.6. * Redis (cluster mode disabled):
                    T1 and T2 cache node types. * Redis (cluster mode enabled): T1
                    node types."
                  type: boolean
                cacheNodeType:
                  description: 'CacheNodeType specifies the compute and memory capacity
                    of the nodes in the node group (shard). For a complete listing
                    of node types and specifications, see: * Amazon ElastiCache Product
                    Features and Details (http://aws.amazon.com/elasticache/details)
                    * Cache Node Type-Specific Parameters for Memcached (http://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/ParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific)
                    * Cache Node Type-Specific Parameters for Redis (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific)'
                  type: string
                cacheParameterGroupName:
                  description: "CacheParameterGroupName specifies the name of the
                    parameter group to associate with this replication group. If this
                    argument is omitted, the default cache parameter group for the
                    specified engine is used. \n If you are running Redis version
                    3.2.4 or later, only one node group (shard), and want to use a
                    default parameter group, we recommend that you specify the parameter
                    group by name. * To create a Redis (cluster mode disabled) replication
                    group, use CacheParameterGroupName=default.redis3.2. * To create
                    a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on."
                  type: string
                cacheSecurityGroupNameRefs:
                  description: CacheSecurityGroupNameRefs are references to SecurityGroups
                    used to set the CacheSecurityGroupNames.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                cacheSecurityGroupNameSelector:
                  description: CacheSecurityGroupNameSelector selects references to
                    SecurityGroups.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                cacheSecurityGroupNames:
                  description: CacheSecurityGroupNames specifies a list of cache security
                    group names to associate with this replication group. Only for
                    EC2-Classic mode.
                  items:
                    type: string
                  type: array
                cacheSubnetGroupName:
                  description: CacheSubnetGroupName specifies the name of the cache
                    subnet group to be used for the replication group. If you're going
                    to launch your cluster in an Amazon VPC, you need to create a
                    subnet group before you start creating a cluster. For more information,
                    see Subnets and Subnet Groups (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
                  type: string
                engine:
                  description: Engine is the name of the cache engine (memcached or
                    redis) to be used for the clusters in this replication group.
                  type: string
                engineVersion:
                  description: "EngineVersion specifies the version number of the
                    cache engine to be used for the clusters in this replication group.
                    To view the supported cache engine versions, use the DescribeCacheEngineVersions
                    operation. \n Important: You can upgrade to a newer engine version
                    (see Selecting a Cache Engine and Version (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement))
                    in the ElastiCache User Guide, but you cannot downgrade to an
                    earlier engine version. If you want to use an earlier engine version,
                    you must delete the existing cluster or replication group and
                    create it anew with the earlier engine version."
                  type: string
                nodeGroupConfiguration:
                  description: "NodeGroupConfigurationSpec specifies a list of node
                    group (shard) configuration options. \n If you're creating a Redis
                    (cluster mode disabled) or a Redis (cluster mode enabled) replication
                    group, you can use this parameter to individually configure each
                    node group (shard), or you can omit this parameter. However, when
                    seeding a Redis (cluster mode enabled) cluster from a S3 rdb file,
                    you must configure each node group (shard) using this parameter
                    because you must specify the slots for each node group."
                  items:
                    description: A NodeGroupConfigurationSpec specifies the desired
                      state of a node group.
                    properties:
                      primaryAvailabilityZone:
                        description: PrimaryAvailabilityZone specifies the Availability
                          Zone where the primary node of this node group (shard) is
                          launched.
                        type: string
                      replicaAvailabilityZones:
                        description: ReplicaAvailabilityZones specifies a list of
                          Availability Zones to be used for the read replicas. The
                          number of Availability Zones in this list must match the
                          value of ReplicaCount or ReplicasPerNodeGroup if not specified.
                        items:
                          type: string
                        type: array
                      replicaCount:
                        description: ReplicaCount specifies the number of read replica
                          nodes in this node group (shard).
                        type: integer
                      slots:
                        description: "Slots specifies the keyspace for a particular
                          node group. Keyspaces range from 0 to 16,383. The string
                          is in the format startkey-endkey. \n Example: \"0-3999\""
                        type: string
                    type: object
                  type: array
                notificationTopicArn:
                  description: NotificationTopicARN specifies the Amazon Resource
                    Name (ARN) of the Amazon Simple Notification Service (SNS) topic
                    to which notifications are sent. The Amazon SNS topic owner must
                    be the same as the cluster owner.
                  type: string
                notificationTopicStatus:
                  description: "NotificationTopicStatus is the status of the Amazon
                    SNS notification topic for the replication group. Notifications
                    are sent only if the status is active. \n Valid values: active
                    | inactive"
                  type: string
                numCacheClusters:
                  description: "NumCacheClusters specifies the number of clusters
                    this replication group initially has. This parameter is not used
                    if there is more than one node group (shard). You should use ReplicasPerNodeGroup
                    instead. \n If AutomaticFailoverEnabled is true, the value of
                    this parameter must be at least 2. If AutomaticFailoverEnabled
                    is false you can omit this parameter (it will default to 1), or
                    you can explicitly set it to a value between 2 and 6. \n The maximum
                    permitted value for NumCacheClusters is 6 (1 primary plus 5 replicas)."
                  type: integer
                numNodeGroups:
                  description: "NumNodeGroups specifies the number of node groups
                    (shards) for this Redis (cluster mode enabled) replication group.
                    For Redis (cluster mode disabled) either omit this parameter or
                    set it to 1. \n Default: 1"
                  type: integer
                port:
                  description: Port number on which each member of the replication
                    group accepts connections.
                  type: integer
                preferredCacheClusterAzs:
                  description: "PreferredCacheClusterAZs specifies a list of EC2 Availability
                    Zones in which the replication group's clusters are created. The
                    order of the Availability Zones in the list is the order in which
                    clusters are allocated. The primary cluster is created in the
                    first AZ in the list. \n This parameter is not used if there is
                    more than one node group (shard). You should use NodeGroupConfigurationSpec
                    instead. \n If you are creating your replication group in an Amazon
                    VPC (recommended), you can only locate clusters in Availability
                    Zones associated with the subnets in the selected subnet group.
                    \n The number of Availability Zones listed must equal the value
                    of NumCacheClusters. \n Default: system chosen Availability Zones."
                  items:
                    type: string
                  type: array
                preferredMaintenanceWindow:
                  description: "PreferredMaintenanceWindow specifies the weekly time
                    range during which maintenance on the cluster is performed. It
                    is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi
                    (24H Clock UTC). The minimum maintenance window is a 60 minute
                    period. \n Example: sun:23:00-mon:01:30"
                  type: string
                primaryClusterId:
                  description: "PrimaryClusterId is the identifier of the cluster
                    that serves as the primary for this replication group. This cluster
                    must already exist and have a status of available. \n This parameter
                    is not required if NumCacheClusters, NumNodeGroups or ReplicasPerNodeGroup
                    is specified."
                  type: string
                replicasPerNodeGroup:
                  description: ReplicasPerNodeGroup specifies the number of replica
                    nodes in each node group (shard). Valid values are 0 to 5.
                  type: integer
                replicationGroupDescription:
                  description: ReplicationGroupDescription is the description for
                    the replication group.
                  type: string
                securityGroupIdRefs:
                  description: SecurityGroupIDRefs are references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                securityGroupIdSelector:
                  description: SecurityGroupIDSelector selects references to SecurityGroups
                    used to set the SecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                securityGroupIds:
                  description: SecurityGroupIDs specifies one or more Amazon VPC security
                    groups associated with this replication group. Use this parameter
                    only when you are creating a replication group in an Amazon VPC.
                  items:
                    type: string
                  type: array
                snapshotArns:
                  description: 'SnapshotARNs specifies a list of Amazon Resource Names
                    (ARN) that uniquely identify the Redis RDB snapshot files stored
                    in Amazon S3. The snapshot files are used to populate the new
                    replication group. The Amazon S3 object name in the ARN cannot
                    contain any commas. The new replication group will have the number
                    of node groups (console: shards) specified by the parameter NumNodeGroups
                    or the number of node groups configured by NodeGroupConfigurationSpec
                    regardless of the number of ARNs specified here.'
                  items:
                    type: string
                  type: array
                snapshotName:
                  description: SnapshotName specifies the name of a snapshot from
                    which to restore data into the new replication group. The snapshot
                    status changes to restoring while the new replication group is
                    being created.
                  type: string
                snapshotRetentionLimit:
                  description: 'SnapshotRetentionLimit specifies the number of days
                    for which ElastiCache retains automatic snapshots before deleting
                    them. For example, if you set SnapshotRetentionLimit to 5, a snapshot
                    that was taken today is retained for 5 days before being deleted.
                    Default: 0 (i.e., automatic backups are disabled for this cluster).'
                  type: integer
                snapshotWindow:
                  description: "SnapshotWindow specifies the daily time range (in
                    UTC) during which ElastiCache begins taking a daily snapshot of
                    your node group (shard). \n Example: 05:00-09:00 \n If you do
                    not specify this parameter, ElastiCache automatically chooses
                    an appropriate time range."
                  type: string
                snapshottingClusterID:
                  description: SnapshottingClusterID is used as the daily snapshot
                    source for the replication group. This parameter cannot be set
                    for Redis (cluster mode enabled) replication groups.
                  type: string
                tags:
                  description: A list of cost allocation tags to be added to this
                    resource. A tag is a key-value pair.
                  items:
                    description: A Tag is used to tag the ElastiCache resources in
                      AWS.
                    properties:
                      key:
                        description: Key for the tag.
                        type: string
                      value:
                        description: Value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                transitEncryptionEnabled:
                  description: "TransitEncryptionEnabled enables in-transit encryption
                    when set to true. \n You cannot modify the value of TransitEncryptionEnabled
                    after the cluster is created. To enable in-transit encryption
                    on a cluster you must TransitEncryptionEnabled to true when you
                    create a cluster. \n This parameter is valid only if the Engine
                    parameter is redis, the EngineVersion parameter is 3.2.6 or 4.x,
                    and the cluster is being created in an Amazon VPC. \n If you enable
                    in-transit encryption, you must also specify a value for CacheSubnetGroup.
                    \n Required: Only available when creating a replication group
                    in an Amazon VPC using redis version 3.2.6 or 4.x. \n Default:
                    false \n For HIPAA compliance, you must specify TransitEncryptionEnabled
                    as true, an AuthToken, and a CacheSubnetGroup."
                  type: boolean
              required:
              - applyModificationsImmediately
              - cacheNodeType
              - engine
              - replicationGroupDescription
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A ReplicationGroupStatus defines the observed state of a ReplicationGroup.
          properties:
            atProvider:
              description: ReplicationGroupObservation contains the observation of
                the status of the given ReplicationGroup.
              properties:
                automaticFailoverStatus:
                  description: AutomaticFailover indicates the status of Multi-AZ
                    with automatic failover for this Redis replication group.
                  type: string
                clusterEnabled:
                  description: 'ClusterEnabled is a flag indicating whether or not
                    this replication group is cluster enabled; i.e., whether its data
                    can be partitioned across multiple shards (API/CLI: node groups).'
                  type: boolean
                configurationEndpoint:
                  description: ConfigurationEndpoint for this replication group. Use
                    the configuration endpoint to connect to this replication group.
                  properties:
                    address:
                      description: Address is the DNS hostname of the cache node.
                      type: string
                    port:
                      description: Port number that the cache engine is listening
                        on.
                      type: integer
                  type: object
                memberClusters:
                  description: MemberClusters is the list of names of all the cache
                    clusters that are part of this replication group.
                  items:
                    type: string
                  type: array
                nodeGroups:
                  description: NodeGroups is a list of node groups in this replication
                    group. For Redis (cluster mode disabled) replication groups, this
                    is a single-element list. For Redis (cluster mode enabled) replication
                    groups, the list contains an entry for each node group (shard).
                  items:
                    description: NodeGroup represents a collection of cache nodes
                      in a replication group. One node in the node group is the read/write
                      primary node. All the other nodes are read-only Replica nodes.
                      Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticache-2015-02-02/NodeGroup
                    properties:
                      nodeGroupMembers:
                        description: NodeGroupMembers is a list containing information
                          about individual nodes within the node group (shard).
                        items:
                          description: NodeGroupMember represents a single node within
                            a node group (shard). Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticache-2015-02-02/NodeGroupMember
                          properties:
                            cacheClusterId:
                              description: CacheClusterID is the ID of the cluster
                                to which the node belongs.
                              type: string
                            cacheNodeId:
                              description: CacheNodeID is the ID of the node within
                                its cluster. A node ID is a numeric identifier (0001,
                                0002, etc.).
                              type: string
                            currentRole:
                              description: CurrentRole is the role that is currently
                                assigned to the node - primary or replica. This member
                                is only applicable for Redis (cluster mode disabled)
                                replication groups.
                              type: string
                            preferredAvailabilityZone:
                              description: PreferredAvailabilityZone is the name of
                                the Availability Zone in which the node is located.
                              type: string
                            readEndpoint:
                              description: ReadEndpoint is the information required
                                for client programs to connect to a node for read
                                operations. The read endpoint is only applicable on
                                Redis (cluster mode disabled) clusters.
                              properties:
                                address:
                                  description: Address is the DNS hostname of the
                                    cache node.
                                  type: string
                                port:
                                  description: Port number that the cache engine is
                                    listening on.
                                  type: integer
                              type: object
                          type: object
                        type: array
                      port:
                        description: NodeGroupID is the identifier for the node group
                          (shard). A Redis (cluster mode disabled) replication group
                          contains only 1 node group; therefore, the node group ID
                          is 0001. A Redis (cluster mode enabled) replication group
                          contains 1 to 15 node groups numbered 0001 to 0015.
                        type: string
                      primaryEndpoint:
                        description: PrimaryEndpoint is the endpoint of the primary
                          node in this node group (shard).
                        properties:
                          address:
                            description: Address is the DNS hostname of the cache
                              node.
                            type: string
                          port:
                            description: Port number that the cache engine is listening
                              on.
                            type: integer
                        type: object
                      slots:
                        description: Slots is the keyspace for this node group (shard).
                        type: string
                      status:
                        description: Status of this replication group - creating,
                          available, etc.
                        type: string
                    type: object
                  type: array
                pendingModifiedValues:
                  description: PendingModifiedValues is a group of settings to be
                    applied to the replication group, either immediately or during
                    the next maintenance window.
                  properties:
                    automaticFailoverStatus:
                      description: AutomaticFailoverStatus indicates the status of
                        Multi-AZ with automatic failover for this Redis replication
                        group.
                      type: string
                    primaryClusterId:
                      description: PrimaryClusterID that is applied immediately or
                        during the next maintenance window.
                      type: string
                    resharding:
                      description: Resharding is the status of an online resharding
                        operation.
                      properties:
                        slotMigration:
                          description: Represents the progress of an online resharding
                            operation.
                          properties:
                            progressPercentage:
                              description: ProgressPercentage is the percentage of
                                the slot migration that is complete.
                              type: integer
                          required:
                          - progressPercentage
                          type: object
                      required:
                      - slotMigration
                      type: object
                  type: object
                status:
                  description: Status is the current state of this replication group
                    - creating, available, modifying, deleting, create-failed, snapshotting.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: rdsinstanceclasses.database.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.aws.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - aws
    kind: RDSInstanceClass
    listKind: RDSInstanceClassList
    plural: rdsinstanceclasses
    singular: rdsinstanceclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An RDSInstanceClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            RDSInstance.
          properties:
            forProvider:
              description: RDSInstanceParameters define the desired state of an AWS
                Relational Database Service instance.
              properties:
                allocatedStorage:
                  description: 'AllocatedStorage is the amount of storage (in gibibytes)
                    to allocate for the DB instance. Type: Integer Amazon Aurora Not
                    applicable. Aurora cluster volumes automatically grow as the amount
                    of data in your database increases, though you are only charged
                    for the space that you use in an Aurora cluster volume. MySQL
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Must
                    be an integer from 20 to 16384.    * Provisioned IOPS storage
                    (io1): Must be an integer from 100 to 16384.    * Magnetic storage
                    (standard): Must be an integer from 5 to 3072. MariaDB Constraints
                    to the amount of storage for each storage type are the following:    *
                    General Purpose (SSD) storage (gp2): Must be an integer from 20
                    to 16384.    * Provisioned IOPS storage (io1): Must be an integer
                    from 100 to 16384.    * Magnetic storage (standard): Must be an
                    integer from 5 to 3072. PostgreSQL Constraints to the amount of
                    storage for each storage type are the following:    * General
                    Purpose (SSD) storage (gp2): Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Must be an integer from 100 to
                    16384.    * Magnetic storage (standard): Must be an integer from
                    5 to 3072. Oracle Constraints to the amount of storage for each
                    storage type are the following:    * General Purpose (SSD) storage
                    (gp2): Must be an integer from 20 to 16384.    * Provisioned IOPS
                    storage (io1): Must be an integer from 100 to 16384.    * Magnetic
                    storage (standard): Must be an integer from 10 to 3072. SQL Server
                    Constraints to the amount of storage for each storage type are
                    the following:    * General Purpose (SSD) storage (gp2): Enterprise
                    and Standard editions: Must be an integer from 200 to 16384. Web
                    and Express editions: Must be an integer from 20 to 16384.    *
                    Provisioned IOPS storage (io1): Enterprise and Standard editions:
                    Must be an integer from 200 to 16384. Web and Express editions:
                    Must be an integer from 100 to 16384.    * Magnetic storage (standard):
                    Enterprise and Standard editions: Must be an integer from 200
                    to 1024. Web and Express editions: Must be an integer from 20
                    to 1024.'
                  type: integer
                allowMajorVersionUpgrade:
                  description: 'AllowMajorVersionUpgrade indicates that major version
                    upgrades are allowed. Changing this parameter doesn''t result
                    in an outage and the change is asynchronously applied as soon
                    as possible. Constraints: This parameter must be set to true when
                    specifying a value for the EngineVersion parameter that is a different
                    major version than the DB instance''s current version.'
                  type: boolean
                applyModificationsImmediately:
                  description: 'ApplyModificationsImmediately specifies whether the
                    modifications in this request and any pending modifications are
                    asynchronously applied as soon as possible, regardless of the
                    PreferredMaintenanceWindow setting for the DB instance. If this
                    parameter is set to false, changes to the DB instance are applied
                    during the next maintenance window. Some parameter changes can
                    cause an outage and are applied on the next call to RebootDBInstance,
                    or the next failure reboot. Review the table of parameters in
                    Modifying a DB Instance and Using the Apply Immediately Parameter
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
                    in the Amazon RDS User Guide. to see the impact that setting ApplyImmediately
                    to true or false has for each modified parameter and to determine
                    when the changes are applied. Default: false'
                  type: boolean
                autoMinorVersionUpgrade:
                  description: 'AutoMinorVersionUpgrade indicates that minor engine
                    upgrades are applied automatically to the DB instance during the
                    maintenance window. Default: true'
                  type: boolean
                availabilityZone:
                  description: 'AvailabilityZone is the EC2 Availability Zone that
                    the DB instance is created in. For information on AWS Regions
                    and Availability Zones, see Regions and Availability Zones (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    Default: A random, system-chosen Availability Zone in the endpoint''s
                    AWS Region. Example: us-east-1d Constraint: The AvailabilityZone
                    parameter can''t be specified if the MultiAZ parameter is set
                    to true. The specified Availability Zone must be in the same AWS
                    Region as the current endpoint.'
                  type: string
                backupRetentionPeriod:
                  description: 'BackupRetentionPeriod is the number of days for which
                    automated backups are retained. Setting this parameter to a positive
                    number enables backups. Setting this parameter to 0 disables automated
                    backups. Amazon Aurora Not applicable. The retention period for
                    automated backups is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: 1 Constraints:    * Must be a value
                    from 0 to 35    * Cannot be set to 0 if the DB instance is a source
                    to Read Replicas'
                  type: integer
                caCertificateIdentifier:
                  description: CACertificateIdentifier indicates the certificate that
                    needs to be associated with the instance.
                  type: string
                characterSetName:
                  description: CharacterSetName indicates that the DB instance should
                    be associated with the specified CharacterSet for supported engines,
                    Amazon Aurora Not applicable. The character set is managed by
                    the DB cluster. For more information, see CreateDBCluster.
                  type: string
                cloudwatchLogsExportConfiguration:
                  description: CloudwatchLogsExportConfiguration is the configuration
                    setting for the log types to be enabled for export to CloudWatch
                    Logs for a specific DB instance.
                  properties:
                    disableLogTypes:
                      description: DisableLogTypes is the list of log types to disable.
                      items:
                        type: string
                      type: array
                    enableLogTypes:
                      description: EnableLogTypes is the list of log types to enable.
                      items:
                        type: string
                      type: array
                  type: object
                copyTagsToSnapshot:
                  description: CopyTagsToSnapshot should be true to copy all tags
                    from the DB instance to snapshots of the DB instance, and otherwise
                    false. The default is false.
                  type: boolean
                dbClusterIdentifier:
                  description: 'DBClusterIdentifier is the identifier of the DB cluster
                    that the instance will belong to. For information on creating
                    a DB cluster, see CreateDBCluster. Type: String'
                  type: string
                dbInstanceClass:
                  description: DBInstanceClass is the compute and memory capacity
                    of the DB instance, for example, db.m4.large. Not all DB instance
                    classes are available in all AWS Regions, or for all database
                    engines. For the full list of DB instance classes, and availability
                    for your engine, see DB Instance Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                    in the Amazon RDS User Guide.
                  type: string
                dbName:
                  description: 'DBName is the meaning of this parameter differs according
                    to the database engine you use. Type: String MySQL The name of
                    the database to create when the DB instance is created. If this
                    parameter is not specified, no database is created in the DB instance.
                    Constraints:    * Must contain 1 to 64 letters or numbers.    *
                    Cannot be a word reserved by the specified database engine MariaDB
                    The name of the database to create when the DB instance is created.
                    If this parameter is not specified, no database is created in
                    the DB instance. Constraints:    * Must contain 1 to 64 letters
                    or numbers.    * Cannot be a word reserved by the specified database
                    engine PostgreSQL The name of the database to create when the
                    DB instance is created. If this parameter is not specified, the
                    default "postgres" database is created in the DB instance. Constraints:    *
                    Must contain 1 to 63 letters, numbers, or underscores.    * Must
                    begin with a letter or an underscore. Subsequent characters can    be
                    letters, underscores, or digits (0-9).    * Cannot be a word reserved
                    by the specified database engine Oracle The Oracle System ID (SID)
                    of the created DB instance. If you specify null, the default value
                    ORCL is used. You can''t specify the string NULL, or any other
                    reserved word, for DBName. Default: ORCL Constraints:    * Cannot
                    be longer than 8 characters SQL Server Not applicable. Must be
                    null. Amazon Aurora The name of the database to create when the
                    primary instance of the DB cluster is created. If this parameter
                    is not specified, no database is created in the DB instance. Constraints:    *
                    Must contain 1 to 64 letters or numbers.    * Cannot be a word
                    reserved by the specified database engine'
                  type: string
                dbParameterGroupName:
                  description: 'DBParameterGroupName is the name of the DB parameter
                    group to associate with this DB instance. If this argument is
                    omitted, the default DBParameterGroup for the specified engine
                    is used. Constraints:    * Must be 1 to 255 letters, numbers,
                    or hyphens.    * First character must be a letter    * Cannot
                    end with a hyphen or contain two consecutive hyphens'
                  type: string
                dbSecurityGroups:
                  description: 'DBSecurityGroups is a list of DB security groups to
                    associate with this DB instance. Default: The default DB security
                    group for the database engine.'
                  items:
                    type: string
                  type: array
                dbSubnetGroupName:
                  description: DBSubnetGroupName is a DB subnet group to associate
                    with this DB instance. If there is no DB subnet group, then it
                    is a non-VPC DB instance.
                  type: string
                dbSubnetGroupNameRef:
                  description: DBSubnetGroupNameRef is a reference to a DBSubnetGroup
                    used to set DBSubnetGroupName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                dbSubnetGroupNameSelector:
                  description: DBSubnetGroupNameSelector selects a reference to a
                    DBSubnetGroup used to set DBSubnetGroupName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                deletionProtection:
                  description: DeletionProtection indicates if the DB instance should
                    have deletion protection enabled. The database can't be deleted
                    when this value is set to true. The default is false. For more
                    information, see  Deleting a DB Instance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
                  type: boolean
                domain:
                  description: Domain specifies the Active Directory Domain to create
                    the instance in.
                  type: string
                domainIAMRoleName:
                  description: DomainIAMRoleName specifies the name of the IAM role
                    to be used when making API calls to the Directory Service.
                  type: string
                domainIAMRoleNameRef:
                  description: DomainIAMRoleNameRef is a reference to an IAMRole used
                    to set DomainIAMRoleName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                domainIAMRoleNameSelector:
                  description: DomainIAMRoleNameSelector selects a reference to an
                    IAMRole used to set DomainIAMRoleName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                enableCloudwatchLogsExports:
                  description: EnableCloudwatchLogsExports is the list of log types
                    that need to be enabled for exporting to CloudWatch Logs. The
                    values in the list depend on the DB engine being used. For more
                    information, see Publishing Database Logs to Amazon CloudWatch
                    Logs  (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                    in the Amazon Relational Database Service User Guide.
                  items:
                    type: string
                  type: array
                enableIAMDatabaseAuthentication:
                  description: 'EnableIAMDatabaseAuthentication should be true to
                    enable mapping of AWS Identity and Access Management (IAM) accounts
                    to database accounts, and otherwise false. You can enable IAM
                    database authentication for the following database engines: Amazon
                    Aurora Not applicable. Mapping AWS IAM accounts to database accounts
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    MySQL    * For MySQL 5.6, minor version 5.6.34 or higher    *
                    For MySQL 5.7, minor version 5.7.16 or higher Default: false'
                  type: boolean
                enablePerformanceInsights:
                  description: EnablePerformanceInsights should be true to enable
                    Performance Insights for the DB instance, and otherwise false.
                    For more information, see Using Amazon Performance Insights (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                    in the Amazon Relational Database Service User Guide.
                  type: boolean
                engine:
                  description: 'Engine is the name of the database engine to be used
                    for this instance. Not every database engine is available for
                    every AWS Region. Valid Values:    * aurora (for MySQL 5.6-compatible
                    Aurora)    * aurora-mysql (for MySQL 5.7-compatible Aurora)    *
                    aurora-postgresql    * mariadb    * mysql    * oracle-ee    *
                    oracle-se2    * oracle-se1    * oracle-se    * postgres    * sqlserver-ee    *
                    sqlserver-se    * sqlserver-ex    * sqlserver-web Engine is a
                    required field'
                  type: string
                engineVersion:
                  description: EngineVersion is the version number of the database
                    engine to use. For a list of valid engine versions, call DescribeDBEngineVersions.
                    The following are the database engines and links to information
                    about the major and minor versions that are available with Amazon
                    RDS. Not every database engine is available for every AWS Region.
                    Amazon Aurora Not applicable. The version number of the database
                    engine to be used by the DB instance is managed by the DB cluster.
                    For more information, see CreateDBCluster. MariaDB See MariaDB
                    on Amazon RDS Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Microsoft SQL Server See Version
                    and Feature Support on Amazon RDS (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport)
                    in the Amazon RDS User Guide. MySQL See MySQL on Amazon RDS Versions
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                    in the Amazon RDS User Guide. Oracle See Oracle Database Engine
                    Release Notes (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
                    in the Amazon RDS User Guide. PostgreSQL See Supported PostgreSQL
                    Database Versions (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions)
                    in the Amazon RDS User Guide.
                  type: string
                finalDBSnapshotIdentifier:
                  description: 'The DBSnapshotIdentifier of the new DBSnapshot created
                    when SkipFinalSnapshot is set to false. Specifying this parameter
                    and also setting the SkipFinalShapshot parameter to true results
                    in an error. Constraints:    * Must be 1 to 255 letters or numbers.    *
                    First character must be a letter    * Cannot end with a hyphen
                    or contain two consecutive hyphens    * Cannot be specified when
                    deleting a Read Replica.'
                  type: string
                iops:
                  description: 'IOPS is the amount of Provisioned IOPS (input/output
                    operations per second) to be initially allocated for the DB instance.
                    For information about valid IOPS values, see see Amazon RDS Provisioned
                    IOPS Storage to Improve Performance (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS)
                    in the Amazon RDS User Guide. Constraints: Must be a multiple
                    between 1 and 50 of the storage amount for the DB instance. Must
                    also be an integer multiple of 1000. For example, if the size
                    of your DB instance is 500 GiB, then your IOPS value can be 2000,
                    3000, 4000, or 5000.'
                  type: integer
                kmsKeyId:
                  description: KMSKeyID for an encrypted DB instance. The KMS key
                    identifier is the Amazon Resource Name (ARN) for the KMS encryption
                    key. If you are creating a DB instance with the same AWS account
                    that owns the KMS encryption key used to encrypt the new DB instance,
                    then you can use the KMS key alias instead of the ARN for the
                    KM encryption key. Amazon Aurora Not applicable. The KMS key identifier
                    is managed by the DB cluster. For more information, see CreateDBCluster.
                    If the StorageEncrypted parameter is true, and you do not specify
                    a value for the KMSKeyID parameter, then Amazon RDS will use your
                    default encryption key. AWS KMS creates the default encryption
                    key for your AWS account. Your AWS account has a different default
                    encryption key for each AWS Region.
                  type: string
                licenseModel:
                  description: 'LicenseModel information for this DB instance. Valid
                    values: license-included | bring-your-own-license | general-public-license'
                  type: string
                masterPasswordSecretRef:
                  description: MasterPasswordSecretRef references the secret that
                    contains the password used in the creation of this RDS instance.
                    If no reference is given, a password will be auto-generated.
                  properties:
                    key:
                      description: The key to select.
                      type: string
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                  - key
                  - name
                  - namespace
                  type: object
                masterUsername:
                  description: 'MasterUsername is the name for the master user. Amazon
                    Aurora Not applicable. The name for the master user is managed
                    by the DB cluster. For more information, see CreateDBCluster.
                    MariaDB Constraints:    * Required for MariaDB.    * Must be 1
                    to 16 letters or numbers.    * Cannot be a reserved word for the
                    chosen database engine. Microsoft SQL Server Constraints:    *
                    Required for SQL Server.    * Must be 1 to 128 letters or numbers.    *
                    The first character must be a letter.    * Cannot be a reserved
                    word for the chosen database engine. MySQL Constraints:    * Required
                    for MySQL.    * Must be 1 to 16 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. Oracle Constraints:    * Required
                    for Oracle.    * Must be 1 to 30 letters or numbers.    * First
                    character must be a letter.    * Cannot be a reserved word for
                    the chosen database engine. PostgreSQL Constraints:    * Required
                    for PostgreSQL.    * Must be 1 to 63 letters or numbers.    *
                    First character must be a letter.    * Cannot be a reserved word
                    for the chosen database engine.'
                  type: string
                monitoringInterval:
                  description: 'MonitoringInterval is the interval, in seconds, between
                    points when Enhanced Monitoring metrics are collected for the
                    DB instance. To disable collecting Enhanced Monitoring metrics,
                    specify 0. The default is 0. If MonitoringRoleARN is specified,
                    then you must also set MonitoringInterval to a value other than
                    0. Valid Values: 0, 1, 5, 10, 15, 30, 60'
                  type: integer
                monitoringRoleArn:
                  description: MonitoringRoleARN is the ARN for the IAM role that
                    permits RDS to send enhanced monitoring metrics to Amazon CloudWatch
                    Logs. For example, arn:aws:iam:123456789012:role/emaccess. For
                    information on creating a monitoring role, go to Setting Up and
                    Enabling Enhanced Monitoring (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                    in the Amazon RDS User Guide. If MonitoringInterval is set to
                    a value other than 0, then you must supply a MonitoringRoleARN
                    value.
                  type: string
                monitoringRoleArnRef:
                  description: MonitoringRoleARNRef is a reference to an IAMRole used
                    to set MonitoringRoleARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                monitoringRoleArnSelector:
                  description: MonitoringRoleARNSelector selects a reference to an
                    IAMRole used to set MonitoringRoleARN.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                multiAZ:
                  description: MultiAZ specifies if the DB instance is a Multi-AZ
                    deployment. You can't set the AvailabilityZone parameter if the
                    MultiAZ parameter is set to true.
                  type: boolean
                optionGroupName:
                  description: OptionGroupName indicates that the DB instance should
                    be associated with the specified option group. Permanent options,
                    such as the TDE option for Oracle Advanced Security TDE, can't
                    be removed from an option group, and that option group can't be
                    removed from a DB instance once it is associated with a DB instance
                  type: string
                performanceInsightsKMSKeyId:
                  description: PerformanceInsightsKMSKeyID is the AWS KMS key identifier
                    for encryption of Performance Insights data. The KMS key ID is
                    the Amazon Resource Name (ARN), KMS key identifier, or the KMS
                    key alias for the KMS encryption key.
                  type: string
                performanceInsightsRetentionPeriod:
                  description: PerformanceInsightsRetentionPeriod is the amount of
                    time, in days, to retain Performance Insights data. Valid values
                    are 7 or 731 (2 years).
                  type: integer
                port:
                  description: 'Port number on which the database accepts connections.
                    MySQL Default: 3306 Valid Values: 1150-65535 Type: Integer MariaDB
                    Default: 3306 Valid Values: 1150-65535 Type: Integer PostgreSQL
                    Default: 5432 Valid Values: 1150-65535 Type: Integer Oracle Default:
                    1521 Valid Values: 1150-65535 SQL Server Default: 1433 Valid Values:
                    1150-65535 except for 1434, 3389, 47001, 49152, and 49152 through
                    49156. Amazon Aurora Default: 3306 Valid Values: 1150-65535 Type:
                    Integer'
                  type: integer
                preferredBackupWindow:
                  description: 'PreferredBackupWindow is the daily time range during
                    which automated backups are created if automated backups are enabled,
                    using the BackupRetentionPeriod parameter. For more information,
                    see The Backup Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
                    in the Amazon RDS User Guide. Amazon Aurora Not applicable. The
                    daily time range for creating automated backups is managed by
                    the DB cluster. For more information, see CreateDBCluster. The
                    default is a 30-minute window selected at random from an 8-hour
                    block of time for each AWS Region. To see the time blocks available,
                    see  Adjusting the Preferred DB Instance Maintenance Window (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
                    in the Amazon RDS User Guide. Constraints:    * Must be in the
                    format hh24:mi-hh24:mi.    * Must be in Universal Coordinated
                    Time (UTC).    * Must not conflict with the preferred maintenance
                    window.    * Must be at least 30 minutes.'
                  type: string
                preferredMaintenanceWindow:
                  description: 'PreferredMaintenanceWindow is the time range each
                    week during which system maintenance can occur, in Universal Coordinated
                    Time (UTC). For more information, see Amazon RDS Maintenance Window
                    (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance).
                    Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window
                    selected at random from an 8-hour block of time for each AWS Region,
                    occurring on a random day of the week. Valid Days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window.'
                  type: string
                processorFeatures:
                  description: ProcessorFeatures is the number of CPU cores and the
                    number of threads per core for the DB instance class of the DB
                    instance.
                  items:
                    description: ProcessorFeature is a processor feature entry. For
                      more information, see Configuring the Processor of the DB Instance
                      Class (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                      in the Amazon RDS User Guide. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/ProcessorFeature
                    properties:
                      name:
                        description: Name of the processor feature. Valid names are
                          coreCount and threadsPerCore.
                        type: string
                      value:
                        description: Value of a processor feature name.
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                promotionTier:
                  description: 'PromotionTier specifies the order in which an Aurora
                    Replica is promoted to the primary instance after a failure of
                    the existing primary instance. For more information, see  Fault
                    Tolerance for an Aurora DB Cluster (http://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance)
                    in the Amazon Aurora User Guide. Default: 1 Valid Values: 0 -
                    15'
                  type: integer
                publiclyAccessible:
                  description: 'PubliclyAccessible specifies the accessibility options
                    for the DB instance. A value of true specifies an Internet-facing
                    instance with a publicly resolvable DNS name, which resolves to
                    a public IP address. A value of false specifies an internal instance
                    with a DNS name that resolves to a private IP address. Default:
                    The default behavior varies depending on whether DBSubnetGroupName
                    is specified. If DBSubnetGroupName is not specified, and PubliclyAccessible
                    is not specified, the following applies:    * If the default VPC
                    in the target region doesn’t have an Internet gateway    attached
                    to it, the DB instance is private.    * If the default VPC in
                    the target region has an Internet gateway attached    to it, the
                    DB instance is public. If DBSubnetGroupName is specified, and
                    PubliclyAccessible is not specified, the following applies:    *
                    If the subnets are part of a VPC that doesn’t have an Internet
                    gateway    attached to it, the DB instance is private.    * If
                    the subnets are part of a VPC that has an Internet gateway attached    to
                    it, the DB instance is public.'
                  type: boolean
                scalingConfiguration:
                  description: ScalingConfiguration is the scaling properties of the
                    DB cluster. You can only modify scaling properties for DB clusters
                    in serverless DB engine mode.
                  properties:
                    autoPause:
                      description: AutoPause specifies whether to allow or disallow
                        automatic pause for an Aurora DB cluster in serverless DB
                        engine mode. A DB cluster can be paused only when it's idle
                        (it has no connections). If a DB cluster is paused for more
                        than seven days, the DB cluster might be backed up with a
                        snapshot. In this case, the DB cluster is restored when there
                        is a request to connect to it.
                      type: boolean
                    maxCapacity:
                      description: MaxCapacity is the maximum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The maximum capacity
                        must be greater than or equal to the minimum capacity.
                      type: integer
                    minCapacity:
                      description: MinCapacity is the minimum capacity for an Aurora
                        DB cluster in serverless DB engine mode. Valid capacity values
                        are 2, 4, 8, 16, 32, 64, 128, and 256. The minimum capacity
                        must be less than or equal to the maximum capacity.
                      type: integer
                    secondsUntilAutoPause:
                      description: SecondsUntilAutoPause is the time, in seconds,
                        before an Aurora DB cluster in serverless mode is paused.
                      type: integer
                  type: object
                skipFinalSnapshotBeforeDeletion:
                  description: 'Determines whether a final DB snapshot is created
                    before the DB instance is deleted. If true is specified, no DBSnapshot
                    is created. If false is specified, a DB snapshot is created before
                    the DB instance is deleted. Note that when a DB instance is in
                    a failure state and has a status of ''failed'', ''incompatible-restore'',
                    or ''incompatible-network'', it can only be deleted when the SkipFinalSnapshotBeforeDeletion
                    parameter is set to "true". Specify true when deleting a Read
                    Replica. The FinalDBSnapshotIdentifier parameter must be specified
                    if SkipFinalSnapshotBeforeDeletion is false. Default: false'
                  type: boolean
                storageEncrypted:
                  description: 'StorageEncrypted specifies whether the DB instance
                    is encrypted. Amazon Aurora Not applicable. The encryption for
                    DB instances is managed by the DB cluster. For more information,
                    see CreateDBCluster. Default: false'
                  type: boolean
                storageType:
                  description: 'StorageType specifies the storage type to be associated
                    with the DB instance. Valid values: standard | gp2 | io1 If you
                    specify io1, you must also include a value for the IOPS parameter.
                    Default: io1 if the IOPS parameter is specified, otherwise standard'
                  type: string
                tags:
                  description: Tags. For more information, see Tagging Amazon RDS
                    Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                    in the Amazon RDS User Guide.
                  items:
                    description: Tag is a metadata assigned to an Amazon RDS resource
                      consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
                    properties:
                      key:
                        description: 'A key is the required name of the tag. The string
                          value can be from 1 to 128 Unicode characters in length
                          and can''t be prefixed with "aws:" or "rds:". The string
                          can only contain only the set of Unicode letters, digits,
                          white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java
                          regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                      value:
                        description: 'A value is the optional value of the tag. The
                          string value can be from 1 to 256 Unicode characters in
                          length and can''t be prefixed with "aws:" or "rds:". The
                          string can only contain only the set of Unicode letters,
                          digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'',
                          ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
                        type: string
                    type: object
                  type: array
                timezone:
                  description: Timezone of the DB instance. The time zone parameter
                    is currently supported only by Microsoft SQL Server (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
                  type: string
                useDefaultProcessorFeatures:
                  description: A value that specifies that the DB instance class of
                    the DB instance uses its default processor features.
                  type: boolean
                vpcSecurityGroupIDRefs:
                  description: VPCSecurityGroupIDRefs are references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                vpcSecurityGroupIDSelector:
                  description: VPCSecurityGroupIDSelector selects references to VPCSecurityGroups
                    used to set the VPCSecurityGroupIDs.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                vpcSecurityGroupIds:
                  description: 'VPCSecurityGroupIDs is a list of EC2 VPC security
                    groups to associate with this DB instance. Amazon Aurora Not applicable.
                    The associated list of EC2 VPC security groups is managed by the
                    DB cluster. For more information, see CreateDBCluster. Default:
                    The default EC2 VPC security group for the DB subnet group''s
                    VPC.'
                  items:
                    type: string
                  type: array
              required:
              - dbInstanceClass
              - engine
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: snstopics.notification.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.forProvider.name
    name: TOPIC-NAME
    type: string
  - JSONPath: .spec.forProvider.displayName
    name: DISPLAY-NAME
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: notification.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: SNSTopic
    listKind: SNSTopicList
    plural: snstopics
    singular: snstopic
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SNSTopic defines a managed resource that represents state of a
        AWS SNSTopic
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SNSTopicSpec defined the desired state of a AWS SNS Topic
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: SNSTopicParameters define the desired state of a AWS SNS
                Topic
              properties:
                deliveryPolicy:
                  description: DeliveryRetryPolicy - the JSON serialization of the
                    effective delivery policy, taking system defaults into accoun
                  type: string
                displayName:
                  description: The display name to use for a topic with SNS subscriptions.
                  type: string
                kmsMasterKeyId:
                  description: "Setting this enables server side encryption at-rest
                    to your topic. The ID of an AWS-managed customer master key (CMK)
                    for Amazon SNS or a custom CMK \n For more examples, see KeyId
                    (https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters)
                    in the AWS Key Management Service API Reference."
                  type: string
                name:
                  description: Name refers to the name of the AWS SNS Topic
                  type: string
                policy:
                  description: The policy that defines who can access your topic.
                    By default, only the topic owner can publish or subscribe to the
                    topic.
                  type: string
                tags:
                  description: Tags represetnt a list of user-provided metadata that
                    can be associated with a SNS Topic. For more information about
                    tagging, see Tagging SNS Topics (https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html)
                    in the SNS User Guide.
                  items:
                    description: Tag represetnt a user-provided metadata that can
                      be associated with a SNS Topic. For more information about tagging,
                      see Tagging SNS Topics (https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html)
                      in the SNS User Guide.
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value. For example, Department or Cost Center
                          are common choices.
                        type: string
                      value:
                        description: "The value associated with this tag. For example,
                          tags with a key name of Department could have values such
                          as Human Resources, Accounting, and Support. Tags with a
                          key name of Cost Center might have values that consist of
                          the number associated with the different cost centers in
                          your company. Typically, many resources have tags with the
                          same key name but with different values. \n AWS always interprets
                          the tag Value as a single string. If you need to store an
                          array, you can store comma-separated values in the string.
                          However, you must interpret the value in your code."
                        type: string
                    required:
                    - key
                    type: object
                  type: array
              required:
              - name
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: SNSTopicStatus is the status of AWS SNS Topic
          properties:
            atProvider:
              description: SNSTopicObservation represents the observed state of a
                AWS SNS Topic
              properties:
                confirmedSubscriptions:
                  description: ConfirmedSubscriptions - The no of confirmed subscriptions
                  format: int64
                  type: integer
                deletedSubscriptions:
                  description: DeletedSubscriptions - The no of deleted subscriptions
                  format: int64
                  type: integer
                owner:
                  description: Owner refers to owner of SNS Topic
                  type: string
                pendingSubscriptions:
                  description: PendingSubscriptions - The no of pending subscriptions
                  format: int64
                  type: integer
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: routetables.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.vpcId
    name: VPC
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    singular: routetable
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A RouteTable is a managed resource that represents an AWS VPC Route
        Table.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A RouteTableSpec defines the desired state of a RouteTable.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: RouteTableParameters define the desired state of an AWS
                VPC Route Table.
              properties:
                associations:
                  description: The associations between the route table and one or
                    more subnets.
                  items:
                    description: Association describes an association between a route
                      table and a subnet.
                    properties:
                      subnetId:
                        description: The ID of the subnet. A subnet ID is not returned
                          for an implicit association.
                        type: string
                      subnetIdRef:
                        description: A referencer to retrieve the ID of a subnet
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      subnetIdSelector:
                        description: A selector to select a referencer to retrieve
                          the ID of a subnet
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                        type: object
                    type: object
                  type: array
                routes:
                  description: the routes in the route table
                  items:
                    description: Route describes a route in a route table.
                    properties:
                      destinationCidrBlock:
                        description: The IPv4 CIDR address block used for the destination
                          match. Routing decisions are based on the most specific
                          match.
                        type: string
                      gatewayId:
                        description: The ID of an internet gateway or virtual private
                          gateway attached to your VPC.
                        type: string
                      gatewayIdRef:
                        description: A referencer to retrieve the ID of a gateway
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                        required:
                        - name
                        type: object
                      gatewayIdSelector:
                        description: A selector to select a referencer to retrieve
                          the ID of a gateway
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with
                              the same controller reference as the selecting object
                              is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                        type: object
                    type: object
                  type: array
                tags:
                  description: Tags represents to current ec2 tags.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                vpcId:
                  description: VPCID is the ID of the VPC.
                  type: string
                vpcIdRef:
                  description: VPCIDRef references a VPC to retrieve its vpcId
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                vpcIdSelector:
                  description: VPCIDSelector selects a reference to a VPC to retrieve
                    its vpcId
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - associations
              - routes
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A RouteTableStatus represents the observed state of a RouteTable.
          properties:
            atProvider:
              description: RouteTableObservation keeps the state for the external
                resource
              properties:
                associations:
                  description: The actual associations created for the route table.
                  items:
                    description: AssociationState describes an association state in
                      the route table.
                    properties:
                      associationId:
                        description: The ID of the association between a route table
                          and a subnet.
                        type: string
                      main:
                        description: Indicates whether this is the main route table.
                        type: boolean
                      state:
                        description: The state of the association.
                        type: string
                      subnetId:
                        description: The ID of the subnet. A subnet ID is not returned
                          for an implicit association.
                        type: string
                    required:
                    - main
                    type: object
                  type: array
                ownerId:
                  description: The ID of the AWS account that owns the route table.
                  type: string
                routeTableId:
                  description: RouteTableID is the ID of the RouteTable.
                  type: string
                routes:
                  description: The actual routes created for the route table.
                  items:
                    description: RouteState describes a route state in the route table.
                    properties:
                      destinationCidrBlock:
                        description: The IPv4 CIDR address block used for the destination
                          match. Routing decisions are based on the most specific
                          match.
                        type: string
                      gatewayId:
                        description: The ID of an internet gateway or virtual private
                          gateway attached to your VPC.
                        type: string
                      state:
                        description: The state of the route. The blackhole state indicates
                          that the route's target isn't available (for example, the
                          specified gateway isn't attached to the VPC, or the specified
                          NAT instance has been terminated).
                        type: string
                    type: object
                  type: array
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha4
  versions:
  - name: v1alpha4
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: hostedzones.route53.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .status.atProvider.hostedZone.resourceRecordSetCount
    name: RRs
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: route53.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: HostedZone
    listKind: HostedZoneList
    plural: hostedzones
    singular: hostedzone
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: HostedZone is a managed resource that represents an AWS Route53
        Hosted HostedZone.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HostedZoneSpec defines the desired state of an AWS Route53
            Hosted HostedZone.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: HostedZoneParameters define the desired state of an AWS
                Route53 Hosted HostedZone.
              properties:
                config:
                  description: Config includes the Comment and PrivateZone elements.
                    If you omitted the Config and Comment elements from the request,
                    the Config and Comment elements don't appear in the response.
                  properties:
                    comment:
                      description: Comment that you want to include about the hosted
                        zone.
                      type: string
                    privateZone:
                      description: PrivateZone indicates whether this is a private
                        hosted zone.
                      type: boolean
                  type: object
                delegationSetId:
                  description: DelegationSetId let you associate a reusable delegation
                    set with this hosted zone. It has to be the ID that Amazon Route
                    53 assigned to the reusable delegation set when you created it.
                    For more information about reusable delegation sets, see CreateReusableDelegationSet
                    (https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateReusableDelegationSet.html).
                  type: string
                name:
                  description: "The name of the domain. Specify a fully qualified
                    domain name, for example, www.example.com. The trailing dot is
                    optional; Amazon Route 53 assumes that the domain name is fully
                    qualified. This means that Route 53 treats www.example.com (without
                    a trailing dot) and www.example.com. (with a trailing dot) as
                    identical. \n If you're creating a public hosted zone, this is
                    the name you have registered with your DNS registrar. If your
                    domain name is registered with a registrar other than Route 53,
                    change the name servers for your domain to the set of NameServers
                    that CreateHostedHostedZone returns in DelegationSet."
                  type: string
                vpc:
                  description: "(Private hosted zones only) A complex type that contains
                    information about the Amazon VPC that you're associating with
                    this hosted zone. \n You can specify only one Amazon VPC when
                    you create a private hosted zone. To associate additional Amazon
                    VPCs with the hosted zone, use AssociateVPCWithHostedZone (https://docs.aws.amazon.com/Route53/latest/APIReference/API_AssociateVPCWithHostedZone.html)
                    after you create a hosted zone."
                  properties:
                    vpcId:
                      description: (Private hosted zones only) The ID of an Amazon
                        VPC.
                      type: string
                    vpcIdRef:
                      description: (Private hosted Hostedzones only) VPCIDRef references
                        a VPC to retrieves its VPC Id.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                      required:
                      - name
                      type: object
                    vpcIdSelector:
                      description: VPCIDSelector selects a reference to a VPC.
                      properties:
                        matchControllerRef:
                          description: MatchControllerRef ensures an object with the
                            same controller reference as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching
                            labels is selected.
                          type: object
                      type: object
                    vpcRegion:
                      description: (Private hosted zones only) The region that an
                        Amazon VPC was created in.
                      type: string
                  type: object
              required:
              - name
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: HostedZoneStatus represents the observed state of a HostedZone.
          properties:
            atProvider:
              description: HostedZoneObservation keeps the state for the external
                resource.
              properties:
                delegationSet:
                  description: DelegationSet describes the name servers for this hosted
                    zone.
                  properties:
                    callerReference:
                      description: The value that you specified for CallerReference
                        when you created the reusable delegation set.
                      type: string
                    id:
                      description: The ID that Amazon Route 53 assigns to a reusable
                        delegation set.
                      type: string
                    nameServers:
                      description: NameServers contains a list of the authoritative
                        name servers for a hosted Hostedzone.
                      items:
                        type: string
                      type: array
                  type: object
                hostedZone:
                  description: HostedZone contains general information about the hosted
                    zone.
                  properties:
                    callerReference:
                      description: CallerReference is an unique string that identifies
                        the request and that allows failed HostedZone create requests
                        to be retried without the risk of executing the operation
                        twice.
                      type: string
                    id:
                      description: ID that Amazon Route 53 assigned to the hosted
                        zone when you created it.
                      type: string
                    linkedService:
                      description: LinkedService is the service that created the hosted
                        zone.
                      properties:
                        description:
                          description: Description provided by the other service.
                          type: string
                        servicePrincipal:
                          description: ServicePrincipal is the service that created
                            the resource.
                          type: string
                      type: object
                    resourceRecordSetCount:
                      description: The number of resource record sets in the hosted
                        zone.
                      format: int64
                      type: integer
                  type: object
                vpcs:
                  description: A complex type that contains information about the
                    VPCs that are associated with the specified hosted zone.
                  items:
                    description: VPCObservation is used to represent the VPC object
                      in the HostedZone response object.
                    properties:
                      vpcId:
                        description: VPCID is the ID of the VPC.
                        type: string
                      vpcRegion:
                        description: VPCRegion is the region where the VPC resides.
                        type: string
                    type: object
                  type: array
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: snssubscriptions.notification.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.forProvider.endpoint
    name: ENDPOINT
    type: string
  - JSONPath: .spec.forProvider.protocol
    name: PROTOCOL
    type: string
  - JSONPath: .status.atProvider.status
    name: STATUS
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: notification.aws.crossplane.io
  names:
    kind: SNSSubscription
    listKind: SNSSubscriptionList
    plural: snssubscriptions
    singular: snssubscription
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SNSSubscription defines a managed resource that represents state
        of a AWS SNS Subscription
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SNSSubscriptionSpec defined the desired state of a AWS SNS
            Topic
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: SNSSubscriptionParameters define the desired state of a
                AWS SNS Topic
              properties:
                deliveryPolicy:
                  description: ' DeliveryPolicy defines how Amazon SNS retries failed  deliveries
                    to HTTP/S endpoints.'
                  type: string
                endpoint:
                  description: The subscription's endpoint
                  type: string
                filterPolicy:
                  description: ' The simple JSON object that lets your subscriber
                    receive  only a subset of messages, rather than receiving every
                    message published  to the topic.'
                  type: string
                protocol:
                  description: The subscription's protocol.
                  type: string
                rawMessageDelivery:
                  description: ' When set to true, enables raw message delivery  to
                    Amazon SQS or HTTP/S endpoints. This eliminates the need for the
                    endpoints  to process JSON formatting, which is otherwise created
                    for Amazon SNS  metadata.'
                  type: string
                redrivePolicy:
                  description: ' When specified, sends undeliverable messages to the  specified
                    Amazon SQS dead-letter queue. Messages that can''t be delivered  due
                    to client errors (for example, when the subscribed endpoint is
                    unreachable)  or server errors (for example, when the service
                    that powers the subscribed  endpoint becomes unavailable) are
                    held in the dead-letter queue for further  analysis or reprocessing.'
                  type: string
                topicArn:
                  description: TopicArn is the Arn of the SNS Topic
                  type: string
                topicArnRef:
                  description: TopicArnRef references a SNS Topic and retrieves its
                    TopicArn
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                topicArnSelector:
                  description: TopicArnSelector selects a reference to a SNS Topic
                    and retrieves its TopicArn
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - endpoint
              - protocol
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: SNSSubscriptionStatus is the status of AWS SNS Topic
          properties:
            atProvider:
              description: SNSSubscriptionObservation represents the observed state
                of a AWS SNS Topic
              properties:
                confirmationWasAuthenticated:
                  description: ConfirmationWasAuthenticated – true if the subscription
                    confirmation request was authenticated.
                  type: boolean
                owner:
                  description: The subscription's owner.
                  type: string
                status:
                  description: Status represents Confirmation Status of SNS Subscription
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: iamrolepolicyattachments.identity.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .spec.forProvider.roleName
    name: ROLENAME
    type: string
  - JSONPath: .spec.forProvider.policyArn
    name: POLICYARN
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: identity.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: IAMRolePolicyAttachment
    listKind: IAMRolePolicyAttachmentList
    plural: iamrolepolicyattachments
    singular: iamrolepolicyattachment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An IAMRolePolicyAttachment is a managed resource that represents
        an AWS IAM Role policy attachment.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An IAMRolePolicyAttachmentSpec defines the desired state of
            an IAMRolePolicyAttachment.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: IAMRolePolicyAttachmentParameters define the desired state
                of an AWS IAM Role policy attachment.
              properties:
                policyArn:
                  description: PolicyARN is the Amazon Resource Name (ARN) of the
                    IAM policy you want to attach.
                  type: string
                policyArnRef:
                  description: PolicyARNRef references an IAMPolicy to retrieve its
                    Policy ARN.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                policyArnSelector:
                  description: PolicyARNSelector selects a reference to an IAMPolicy
                    to retrieve its Policy ARN
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                roleName:
                  description: RoleName presents the name of the IAM role.
                  type: string
                roleNameRef:
                  description: RoleNameRef references an IAMRole to retrieve its Name
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                roleNameSelector:
                  description: RoleNameSelector selects a reference to an IAMRole
                    to retrieve its Name
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An IAMRolePolicyAttachmentStatus represents the observed state
            of an IAMRolePolicyAttachment.
          properties:
            atProvider:
              description: IAMRolePolicyAttachmentExternalStatus keeps the state for
                the external resource
              properties:
                attachedPolicyArn:
                  description: AttachedPolicyARN is the arn for the attached policy.
                    If nil, the policy is not yet attached
                  type: string
              required:
              - attachedPolicyArn
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: cachesubnetgroups.cache.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.atProvider.vpcId
    name: VPCID
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CacheSubnetGroup
    listKind: CacheSubnetGroupList
    plural: cachesubnetgroups
    singular: cachesubnetgroup
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A CacheSubnetGroup is a managed resource that represents an AWS
        Subnet Group for ElasticCache.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A CacheSubnetGroupSpec defines the desired state of a CacheSubnetGroup.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: CacheSubnetGroupParameters define the desired state of
                an AWS ElasticCache Subnet Group.
              properties:
                description:
                  description: A description for the cache subnet group.
                  type: string
                subnetIdRefs:
                  description: SubnetIDRefs references to a Subnet to and retrieves
                    its SubnetID
                  items:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                subnetIdSelector:
                  description: SubnetIDSelector selects a set of references that each
                    retrieve the subnetID from the referenced Subnet
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                subnetIds:
                  description: A list of  Subnet IDs for the cache subnet group.
                  items:
                    type: string
                  type: array
              required:
              - description
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A CacheSubnetGroupStatus represents the observed state of a
            Subnet Group.
          properties:
            atProvider:
              description: CacheSubnetGroupExternalStatus keeps the state for the
                external resource
              properties:
                vpcId:
                  description: The Amazon Virtual Private Cloud identifier (VPC ID)
                    of the cache subnet group.
                  type: string
              required:
              - vpcId
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: internetgateways.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.vpcId
    name: VPC
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: InternetGateway
    listKind: InternetGatewayList
    plural: internetgateways
    singular: internetgateway
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: An InternetGateway is a managed resource that represents an AWS
        VPC Internet Gateway.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: An InternetGatewaySpec defines the desired state of an InternetGateway.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: InternetGatewayParameters define the desired state of an
                AWS VPC Internet Gateway.
              properties:
                tags:
                  description: Tags represents to current ec2 tags.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                vpcId:
                  description: VPCID is the ID of the VPC.
                  type: string
                vpcIdRef:
                  description: VPCIDRef references a VPC to and retrieves its vpcId
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                vpcIdSelector:
                  description: VPCIDSelector selects a reference to a VPC to and retrieves
                    its vpcId
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An InternetGatewayStatus represents the observed state of an
            InternetGateway.
          properties:
            atProvider:
              description: InternetGatewayObservation keeps the state for the external
                resource
              properties:
                attachments:
                  description: Any VPCs attached to the internet gateway.
                  items:
                    description: InternetGatewayAttachment describes the attachment
                      of a VPC to an internet gateway or an egress-only internet gateway.
                    properties:
                      attachmentStatus:
                        description: The current state of the attachment. For an internet
                          gateway, the state is available when attached to a VPC;
                          otherwise, this value is not returned.
                        enum:
                        - available
                        - attaching
                        - attached
                        - detaching
                        - detached
                        type: string
                      vpcId:
                        description: VPCID is the ID of the attached VPC.
                        type: string
                    required:
                    - attachmentStatus
                    - vpcId
                    type: object
                  type: array
                internetGatewayId:
                  description: The ID of the internet gateway.
                  type: string
                ownerID:
                  description: The ID of the AWS account that owns the internet gateway.
                  type: string
              required:
              - internetGatewayId
              - ownerID
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: subnets.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.vpcId
    name: VPC
    type: string
  - JSONPath: .spec.forProvider.cidrBlock
    name: CIDR
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Subnet
    listKind: SubnetList
    plural: subnets
    singular: subnet
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Subnet is a managed resource that represents an AWS VPC Subnet.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SubnetSpec defines the desired state of a Subnet.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: SubnetParameters define the desired state of an AWS VPC
                Subnet.
              properties:
                assignIpv6AddressOnCreation:
                  description: Indicates whether a network interface created in this
                    subnet (including a network interface created by RunInstances)
                    receives an IPv6 address.
                  type: boolean
                availabilityZone:
                  description: 'The Availability Zone for the subnet. Default: AWS
                    selects one for you. If you create more than one subnet in your
                    VPC, we may not necessarily select a different zone for each subnet.'
                  type: string
                availabilityZoneId:
                  description: The AZ ID or the Local Zone ID of the subnet.
                  type: string
                cidrBlock:
                  description: CIDRBlock is the IPv4 network range for the Subnet,
                    in CIDR notation. For example, 10.0.0.0/18.
                  type: string
                ipv6CIDRBlock:
                  description: The IPv6 network range for the subnet, in CIDR notation.
                    The subnet size must use a /64 prefix length.
                  type: string
                mapPublicIPOnLaunch:
                  description: Indicates whether instances launched in this subnet
                    receive a public IPv4 address.
                  type: boolean
                tags:
                  description: Tags represents to current ec2 tags.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                vpcId:
                  description: VPCID is the ID of the VPC.
                  type: string
                vpcIdRef:
                  description: VPCIDRef reference a VPC to retrieve its vpcId
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                vpcIdSelector:
                  description: VPCIDSelector selects reference to a VPC to retrieve
                    its vpcId
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              required:
              - cidrBlock
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A SubnetStatus represents the observed state of a Subnet.
          properties:
            atProvider:
              description: SubnetObservation keeps the state for the external resource
              properties:
                availableIpAddressCount:
                  description: The number of unused private IPv4 addresses in the
                    subnet.
                  format: int64
                  type: integer
                defaultForAz:
                  description: Indicates whether this is the default subnet for the
                    Availability Zone.
                  type: boolean
                subnetId:
                  description: SubnetID is the ID of the Subnet.
                  type: string
                subnetState:
                  description: SubnetState is the current state of the Subnet.
                  enum:
                  - pending
                  - available
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: certificateauthorities.acmpca.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.forProvider.type
    name: TYPE
    type: string
  - JSONPath: .spec.forProvider.status
    name: STATUS
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: acmpca.aws.crossplane.io
  names:
    kind: CertificateAuthority
    listKind: CertificateAuthorityList
    plural: certificateauthorities
    singular: certificateauthority
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CertificateAuthority is a managed resource that represents an AWS
        CertificateAuthority Manager.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CertificateAuthoritySpec defines the desired state of CertificateAuthority
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: CertificateAuthorityParameters defines the desired state
                of an AWS CertificateAuthority.
              properties:
                certificateAuthorityConfiguration:
                  description: CertificateAuthorityConfiguration to associate with
                    the certificateAuthority.
                  properties:
                    keyAlgorithm:
                      description: Type of the public key algorithm
                      enum:
                      - RSA_2048
                      - EC_secp384r1
                      - EC_prime256v1
                      - RSA_4096
                      type: string
                    signingAlgorithm:
                      description: Algorithm that private CA uses to sign certificate
                        requests
                      enum:
                      - SHA512WITHECDSA
                      - SHA256WITHECDSA
                      - SHA384WITHECDSA
                      - SHA512WITHRSA
                      - SHA256WITHRSA
                      - SHA384WITHRSA
                      type: string
                    subject:
                      description: Subject is information of Certificate Authority
                      properties:
                        commonName:
                          description: FQDN associated with the certificate subject
                          type: string
                        country:
                          description: Two-digit code that specifies the country
                          type: string
                        distinguishedNameQualifier:
                          description: Disambiguating information for the certificate
                            subject.
                          type: string
                        generationQualifier:
                          description: Typically a qualifier appended to the name
                            of an individual
                          type: string
                        givenName:
                          description: First name
                          type: string
                        initials:
                          description: Concatenation of first letter of the GivenName,
                            Middle name and SurName.
                          type: string
                        locality:
                          description: The locality such as a city or town
                          type: string
                        organization:
                          description: Organization legal name
                          type: string
                        organizationalUnit:
                          description: Organization's subdivision or unit
                          type: string
                        pseudonym:
                          description: Shortened version of a longer GivenName
                          type: string
                        serialNumber:
                          description: The certificate serial number.
                          type: string
                        state:
                          description: State in which the subject of the certificate
                            is located
                          type: string
                        surname:
                          description: Surname
                          type: string
                        title:
                          description: Title
                          type: string
                      required:
                      - commonName
                      - country
                      - locality
                      - organization
                      - organizationalUnit
                      - state
                      type: object
                  required:
                  - keyAlgorithm
                  - signingAlgorithm
                  - subject
                  type: object
                permanentDeletionTimeInDays:
                  description: The number of days to make a CA restorable after it
                    has been deleted
                  format: int64
                  type: integer
                revocationConfiguration:
                  description: RevocationConfiguration to associate with the certificateAuthority.
                  properties:
                    customCname:
                      description: Alias for the CRL distribution point
                      type: string
                    enabled:
                      description: Boolean value that specifies certificate revocation
                      type: boolean
                    expirationInDays:
                      description: Number of days until a certificate expires
                      format: int64
                      type: integer
                    s3BucketName:
                      description: Name of the S3 bucket that contains the CRL
                      type: string
                  required:
                  - enabled
                  type: object
                status:
                  description: Status of the certificate authority. This value cannot
                    be configured at creation, but can be updated to set a CA to ACTIVE
                    or DISABLED.
                  enum:
                  - CREATING
                  - PENDING_CERTIFICATE
                  - ACTIVE
                  - DELETED
                  - DISABLED
                  - EXPIRED
                  - FAILED
                  type: string
                tags:
                  description: One or more resource tags to associate with the certificateAuthority.
                  items:
                    description: Tag represents user-provided metadata that can be
                      associated
                    properties:
                      key:
                        description: The key name that can be used to look up or retrieve
                          the associated value.
                        type: string
                      value:
                        description: The value associated with this tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                type:
                  description: Type of the certificate authority
                  enum:
                  - ROOT
                  - SUBORINATE
                  type: string
              required:
              - certificateAuthorityConfiguration
              - tags
              - type
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: An CertificateAuthorityStatus represents the observed state
            of an CertificateAuthority manager.
          properties:
            atProvider:
              description: CertificateAuthorityExternalStatus keeps the state of external
                resource
              properties:
                certificateAuthorityARN:
                  description: String that contains the ARN of the issued certificate
                    Authority
                  type: string
                serial:
                  description: Serial of the Certificate Authority
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
